"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[3621],{1301:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=t(4848),i=t(8453);const a={},r="File API design documentation",o={id:"design/file/file-design",title:"File API design documentation",description:"API",source:"@site/i18n/en-US/docusaurus-plugin-content-docs/current/design/file/file-design.md",sourceDirName:"design/file",slug:"/design/file/file-design",permalink:"/layotto/en-US/docs/design/file/file-design",draft:!1,unlisted:!1,editUrl:"https://github.com/mosn/layotto/edit/main/design/file/file-design.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Sequencer API design document",permalink:"/layotto/en-US/docs/design/sequencer/design"},next:{title:"FaaS Design Document",permalink:"/layotto/en-US/docs/design/faas/faas-poc-design"}},d={},l=[{value:"API",id:"api",level:2},{value:"Definition of parameters",id:"definition-of-parameters",level:2},{value:"Get Interface",id:"get-interface",level:3},{value:"Put Interface",id:"put-interface",level:3},{value:"Lists and Dels Interfaces",id:"lists-and-dels-interfaces",level:3},{value:"Configure Parameters",id:"configure-parameters",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"file-api-design-documentation",children:"File API design documentation"}),"\n",(0,s.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(n.p,{children:"The API definition is mainly based on commonly used file operations and is divided into four additional and deleted interfaces. For the Get/Put interface, file upload and download require support for streaming transfer.Thus the following interface definition is\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-protobuf",children:"  // Get file with stream\n  rpc GetFile(GetFileRequest) returns (stream GetFileResponse) {}\n\n  // Put file with stream\n  rpc PutFile(stream PuteRequest) returns (google. Rotobuf. mpty) {}\n\n  // List all files\n  rpc ListFile(ListFileRequest) returns (ListFileResponse){}\n\n  // Delete specific file\n  rpc DelFile(DelFileRequest) returns (google. Rotobuf.Empty {}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Discussion of the definition of interfaces can be based on",(0,s.jsx)(n.a,{href:"https://github.com/mosn/layotto/issues/98",children:"issue98"})]}),"\n",(0,s.jsx)(n.h2,{id:"definition-of-parameters",children:"Definition of parameters"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-protobuf",children:"message GetFileRequest {\n  //\n  string store_name = 1;\n  // The name of the file or object want to get.\n  string name = 2;\n  // The metadata for user extension.\n  map<string,string> metadata = 3;\n}\n\nmessage GetFileResponse {\n  bytes data = 1;\n}\n\nmessage PutFileRequest {\n  string store_name = 1;\n  // The name of the file or object want to put.\n  string name = 2;\n  // The data will be store.\n  bytes data = 3;\n  // The metadata for user extension.\n  map<string,string> metadata = 4;\n}\n\nmessage FileRequest {\n  string store_name = 1;\n  // The name of the directory\n  string name = 2;\n  // The metadata for user extension.\n  map<string,string> metadata = 3;\n}\n\nmessage ListFileRequest {\n  FileRequest request = 1;\n}\n\nmessage ListFileResp {\n  repeated string file_name = 1;\n}\n\nmessage DelFileRequest {\n  FileRequest request = 1;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get-interface",children:"Get Interface"}),"\n",(0,s.jsx)(n.p,{children:"Get's main entry is three\uff1a"}),"\n",(0,s.jsxs)(n.p,{children:["| ",(0,s.jsx)(n.strong,{children:"Parameter Name"})," | ",(0,s.jsx)(n.strong,{children:"Mean"})," |\n| ---- | -- | -- | -- | -- | -- -- | -- | -- -- | -- -- | -- -- | -- | -- |\n| store_name | corresponding backend components (eg: aliyun. ss, aws.s3) | yes |\n| name | file name | yes|\n| metadata | Metadata where users can specify some of the fields that component needs, (eg",":per",", username etc.) | yes|"]}),"\n",(0,s.jsx)(n.h3,{id:"put-interface",children:"Put Interface"}),"\n",(0,s.jsx)(n.p,{children:"Put interfaces have three main interfaces and more than one data field is used to transfer file content\uff1a"}),"\n",(0,s.jsxs)(n.p,{children:["| ",(0,s.jsx)(n.strong,{children:"Parameter Name"})," | ",(0,s.jsx)(n.strong,{children:"Mean"})," |\n| ---- | -- | -- | -- | -- | -- -- | -- | -- -- | -- -- | -- -- | -- | -- |\n| store_name | corresponding backend components (eg: aliyun. ss, aws. 3) | yes |\n| name | yes|\n| data | file content | nos (allowing users to upload empty data, each component can be operationalized)|\n| metadata, which users can specify some of the fields that component needs, (eg",":permission",", username, etc.) | yes|"]}),"\n",(0,s.jsx)(n.h3,{id:"lists-and-dels-interfaces",children:"Lists and Dels Interfaces"}),"\n",(0,s.jsx)(n.p,{children:"Parameters for both interfaces are the same\uff1a"}),"\n",(0,s.jsxs)(n.p,{children:["| ",(0,s.jsx)(n.strong,{children:"Parameter Name"})," | ",(0,s.jsx)(n.strong,{children:"Mean"})," |\n| ---- | -- | -- | -- | -- | -- -- | -- | -- -- | -- -- | -- -- | -- | -- |\n| store_name | corresponding backend components (eg: aliyun. ss, aws.s3) | yes |\n| name | file name | yes|\n| metadata | Metadata where users can specify some of the fields that component needs, (eg",":per",", username etc.) | yes|"]}),"\n",(0,s.jsx)(n.h3,{id:"configure-parameters",children:"Configure Parameters"}),"\n",(0,s.jsx)(n.p,{children:"Configure parameters, different components can be configured in different formats such as aliyun.oss below\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-protobuf",children:'\n{\n    "file": {\n      "file_demo": {\n        "type": "aliyun.oss",\n        "metadata":[\n          {\n            "endpoint": "endpoint_address",\n            "accessKeyID": "accessKey",\n            "accessKeySecret": "secret",\n            "bucket": ["bucket1", "bucket2"]\n          }\n        ]\n      }\n    }\n}\n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);