"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[3999],{7949:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(4848),i=n(8453);const o={},s="MOSN gRPC framework design document",a={id:"design/actuator/grpc-design-doc",title:"MOSN gRPC framework design document",description:"Background",source:"@site/i18n/en-US/docusaurus-plugin-content-docs/current/design/actuator/grpc-design-doc.md",sourceDirName:"design/actuator",slug:"/design/actuator/grpc-design-doc",permalink:"/layotto/en-US/docs/design/actuator/grpc-design-doc",draft:!1,unlisted:!1,editUrl:"https://github.com/mosn/layotto/edit/main/design/actuator/grpc-design-doc.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Actuator Design Document",permalink:"/layotto/en-US/docs/design/actuator/actuator-design-doc"},next:{title:"Implementing Configuration API with ctripcorp/apollo",permalink:"/layotto/en-US/docs/design/configuration/configuration-api-with-apollo"}},l={},c=[{value:"Background",id:"background",level:2},{value:"Idea",id:"idea",level:2},{value:"Detailed Design",id:"detailed-design",level:2}];function d(t){const e={code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"mosn-grpc-framework-design-document",children:"MOSN gRPC framework design document"}),"\n",(0,r.jsx)(e.h2,{id:"background",children:"Background"}),"\n",(0,r.jsx)(e.p,{children:"MOSN is able to provide a GRPC Server based on the go grpc server framework. Compared to the original go grpc server framework, the following capacity\uff1a is available"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Full reuse of MOSN Sidecar deployments, upgrades, shipping capabilities"}),"\n",(0,r.jsx)(e.li,{children:"Reuse basic\uff1aHotUps, Listener Filter, Network Filter, etc. common in MOSN"}),"\n",(0,r.jsx)(e.li,{children:"StreamFilter extension capability in MOSN"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"idea",children:"Idea"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"MOSN's gRPC capacity is largely based on the achievement of core competencies in the official gRPC library and varies from gRPC Server developers"}),"\n",(0,r.jsx)(e.li,{children:"Based on NetworkFilter"}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"detailed-design",children:"Detailed Design"}),"\n",(0,r.jsx)(e.p,{children:"Split NetworkFilter Mechanisms & Processes"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"networkfilter.png",src:n(2491).A+"",width:"772",height:"752"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"When configuring the resolution, complete the start of the gRPC Server and start providing the service with the Listener listener listener for MOSN"}),"\n",(0,r.jsxs)(e.li,{children:["A connection to a NetworkFilter object","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"InitializeFilterCallbacks and OnNewConnections are also the interfaces called when the connection is created. They are responsible for initializing connections"}),"\n",(0,r.jsx)(e.li,{children:"OnData is an interface called after data is received and is responsible for data transmission"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["go gRPC Server library, one connection from Listener to 'listen' and then read and write, while Listener's listening and connection data have been processed in the MOSN framework, where a layer of treatment is required","\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Listener and Conn are interface. Once processed in the MOSN Filter, then get data to gRPC Server, do gRPC Server without knowledge"}),"\n",(0,r.jsx)(e.li,{children:"Implementing Listener's package when configuring parsing"}),"\n",(0,r.jsx)(e.li,{children:"Implementing Conn packages in InitializeReadFilterCallbacks"}),"\n",(0,r.jsx)(e.li,{children:"Transmit the packed Conn to the encapsulated Listener, triggering Listener.Accept"}),"\n",(0,r.jsx)(e.li,{children:"Send read data in OnData to encapsulated Conns, Trigger Conn.Read"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{alt:"networkfilter-grpc.png",src:n(4662).A+"",width:"839",height:"660"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"gRPC Server implementation"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"In implementing the gRPC Server using the official gRPC framework, the developer needs to generate a .pb.go file based on proto file, and a set of interfaces that meet the performance defined in the interface to register (Register) into the gRPC Server framework"}),"\n",(0,r.jsx)(e.li,{children:"MOSN gRPC NetworkFilter needs to provide a similar registration capability, allowing developers to focus only on gRPC Server for logic, and then register in MOSN framework enough"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"The MOSN GRPC framework requires the developer to implement a function, which returns a grpc server that does not call the Serve method.The framework will use the custom Listener to call the Serve method to block data"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-Go",children:'func init() {\n    mgrpc.RegisterServerHandler("mygrpc", MyFunc)\n}\nfunc MyFunc(_ json.RawMessage) *grpc.Server {\n    s := grpc.NewServer()\n    // pb \u662f.pb.go \u6240\u5728\u7684 package \u8def\u5f84\n    // server \u662f\u5f00\u53d1\u8005\u5b9e\u73b0\u7684 api \u63a5\u53e3\n    pb.RegisterGreeterServer(s, &server{})\n    return s\n}\n'})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Example of intended configuration (layotto)"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n\t"servers":[\n\t\t{\n\t\t\t"default_log_path":"stdout",\n\t\t\t"default_log_level": "INFO",\n\t\t\t"listeners":[\n\t\t\t\t{\n\t\t\t\t\t"name":"grpc",\n\t\t\t\t\t"address": "0.0.0.0:34904",\n\t\t\t\t\t"bind_port": true,\n\t\t\t\t\t"filter_chains": [{\n\t\t\t\t\t\t"filters": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t"type": "grpc",\n\t\t\t\t\t\t\t\t"config": {\n\t\t\t\t\t\t\t\t\t"server_name":"runtime",\n\t\t\t\t\t\t\t\t\t"grpc_config": {\n\t\t\t\t\t\t\t\t\t\t"hellos": {\n\t\t\t\t\t\t\t\t\t\t\t"helloworld": {\n                                                "type": "helloworld",\n\t\t\t\t\t\t\t\t\t\t\t\t"hello": "greeting"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t"config_store": {\n\t\t\t\t\t\t\t\t\t\t\t"config_store_demo": {\n                                                "type": "etcd",\n\t\t\t\t\t\t\t\t\t\t\t\t"address": ["127.0.0.1:2379"],\n\t\t\t\t\t\t\t\t\t\t\t\t"timeout": "10"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}],\n\t\t\t\t\t"stream_filters": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t"type": "flowControlFilter",\n\t\t\t\t\t\t\t"config": {\n\t\t\t\t\t\t\t\t"global_switch": true,\n\t\t\t\t\t\t\t\t"limit_key_type": "PATH",\n\t\t\t\t\t\t\t\t"rules": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t"resource": "/spec.proto.runtime.v1.Runtime/SayHello",\n\t\t\t\t\t\t\t\t\t\t"grade": 1,\n\t\t\t\t\t\t\t\t\t\t"threshold": 5\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t]\n}\n\n'})})]})}function g(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}},4662:(t,e,n)=>{n.d(e,{A:()=>r});const r=n.p+"assets/images/networkfilter-grpc-234b7a58c6fe0d8ad57ffdee595e7703.jpg"},2491:(t,e,n)=>{n.d(e,{A:()=>r});const r=n.p+"assets/images/networkfilter-50f38bc5ba38a3c9482e785e6be059e9.jpg"},8453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>a});var r=n(6540);const i={},o=r.createContext(i);function s(t){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),r.createElement(o.Provider,{value:e},t.children)}}}]);