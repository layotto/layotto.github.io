"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[5838],{6323:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var n=a(4848),o=a(8453);const r={},s="Use Layotto Actuator for health check and metadata query",c={id:"start/actuator/start",title:"Use Layotto Actuator for health check and metadata query",description:"This example shows how to perform health check and metadata query through Layotto Actuator's Http API",source:"@site/i18n/en-US/docusaurus-plugin-content-docs/current/start/actuator/start.md",sourceDirName:"start/actuator",slug:"/start/actuator/start",permalink:"/layotto/en-US/docs/start/actuator/start",draft:!1,unlisted:!1,editUrl:"https://github.com/mosn/layotto/edit/main/start/actuator/start.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"flow_control",permalink:"/layotto/en-US/docs/start/stream_filter/flow_control"},next:{title:"Observability (Tracing, Metrics)",permalink:"/layotto/en-US/docs/start/trace/"}},i={},h=[{value:"What is Layotto Actuator",id:"what-is-layotto-actuator",level:2},{value:"Quick start",id:"quick-start",level:2},{value:"Run Layotto server",id:"run-layotto-server",level:3},{value:"Access the health check API",id:"access-the-health-check-api",level:3},{value:"Query metadata",id:"query-metadata",level:3},{value:"Next step",id:"next-step",level:2},{value:"Integrated into Kubernetes health check",id:"integrated-into-kubernetes-health-check",level:3},{value:"Add health check or metadata query capabilities to your components",id:"add-health-check-or-metadata-query-capabilities-to-your-components",level:3},{value:"How it works",id:"how-it-works",level:3}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"use-layotto-actuator-for-health-check-and-metadata-query",children:"Use Layotto Actuator for health check and metadata query"}),"\n",(0,n.jsx)(t.p,{children:"This example shows how to perform health check and metadata query through Layotto Actuator's Http API"}),"\n",(0,n.jsx)(t.h2,{id:"what-is-layotto-actuator",children:"What is Layotto Actuator"}),"\n",(0,n.jsx)(t.p,{children:"In the production environment, the status of the application needs to be monitored, and Layotto has built-in a monitoring function, which is called Actuator."}),"\n",(0,n.jsx)(t.p,{children:"Using Layotto Actuator can help you monitor and manage Layotto and the applications behind Layotto, such as health checks, query runtime metadata, etc."}),"\n",(0,n.jsx)(t.p,{children:"All these features can be accessed through the HTTP API."}),"\n",(0,n.jsx)(t.h2,{id:"quick-start",children:"Quick start"}),"\n",(0,n.jsx)(t.h3,{id:"run-layotto-server",children:"Run Layotto server"}),"\n",(0,n.jsx)(t.p,{children:"After downloading the project source code, change directory and compile:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"cd ${project_path}/cmd/layotto\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:"@if.not.exist layotto",children:"go build\n"})}),"\n",(0,n.jsx)(t.p,{children:"After completion, the layotto file will be generated in the directory, run it:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:"@background",children:"./layotto start -c ../../configs/config_standalone.json\n"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsx)(t.p,{children:"Q: The demo report an error?"}),"\n",(0,n.jsx)(t.p,{children:"A: With the default configuration, Layotto will connect to apollo's demo server, but the configuration in that demo server may be modified by others. So the error may be because some configuration has been modified."}),"\n",(0,n.jsx)(t.p,{children:"In this case, you can try other demos."}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"access-the-health-check-api",children:"Access the health check API"}),"\n",(0,n.jsx)(t.p,{children:"Visit /actuator/health/liveness"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"curl http://127.0.0.1:34999/actuator/health/liveness\n"})}),"\n",(0,n.jsx)(t.p,{children:"return:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "components": {\n    "apollo": {\n      "status": "UP"\n    },\n    "runtime_startup": {\n      "status": "UP",\n      "details": {\n        "reason": ""\n      }\n    }\n  },\n  "status": "UP"\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:'In the above json,"status": "UP" means the status is healthy. The Http status code returned is 200.'}),"\n",(0,n.jsx)(t.p,{children:'If the current state is unhealthy, the value of "status" will be "DOWN", and the Http status code returned will be 503.'}),"\n",(0,n.jsx)(t.h3,{id:"query-metadata",children:"Query metadata"}),"\n",(0,n.jsx)(t.p,{children:"Visit /actuator/info"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"curl http://127.0.0.1:34999/actuator/info\n"})}),"\n",(0,n.jsx)(t.p,{children:"return:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "app": {\n    "name": "Layotto",\n    "version": "0.1.0",\n    "compiled": "2021-05-20T14:32:40.522057+08:00"\n  }\n}\n'})}),"\n",(0,n.jsx)(t.h2,{id:"next-step",children:"Next step"}),"\n",(0,n.jsx)(t.h3,{id:"integrated-into-kubernetes-health-check",children:"Integrated into Kubernetes health check"}),"\n",(0,n.jsx)(t.p,{children:"Layotto provides two built-in health check API: /actuator/health/readiness and /actuator/health/liveness, corresponding to the two semantics of Readiness and Liveness in the Kubernetes health check feature."}),"\n",(0,n.jsxs)(t.p,{children:["Therefore, you can refer to ",(0,n.jsx)(t.a,{href:"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",children:"Kubernetes documentation"})," to integrate these two API into the Kubernetes ecosystem."]}),"\n",(0,n.jsx)(t.h3,{id:"add-health-check-or-metadata-query-capabilities-to-your-components",children:"Add health check or metadata query capabilities to your components"}),"\n",(0,n.jsx)(t.p,{children:"If you are implementing your own Layotto component, you can add health check capabilities to it. You can refer to the implementation of the apollo component (the code is at components/configstores/apollo/indicator.go), implement the info.Indicator interface, and inject it into the Actuator."}),"\n",(0,n.jsx)(t.h3,{id:"how-it-works",children:"How it works"}),"\n",(0,n.jsxs)(t.p,{children:["If you are interested in the implementation principle, or want to extend some functions in Actuator, you can read ",(0,n.jsx)(t.a,{href:"/layotto/en-US/docs/design/actuator/actuator-design-doc",children:"Actuator's design document"})]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>c});var n=a(6540);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);