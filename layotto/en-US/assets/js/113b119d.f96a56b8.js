"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[6359],{4960:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var i=t(4848),o=t(8453);const s={},l="Demo of Istio 1.5.x integration",r={id:"start/istio/start",title:"Demo of Istio 1.5.x integration",description:"1. Background",source:"@site/i18n/en-US/docusaurus-plugin-content-docs/current/start/istio/start.md",sourceDirName:"start/istio",slug:"/start/istio/start",permalink:"/layotto/en-US/docs/start/istio/start",draft:!1,unlisted:!1,editUrl:"https://github.com/mosn/layotto/edit/main/start/istio/start.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Demo of Istio 1.10.6 integration",permalink:"/layotto/en-US/docs/start/istio/"},next:{title:"Dump TCP traffic",permalink:"/layotto/en-US/docs/start/network_filter/tcpcopy"}},c={},d=[{value:"1. Background",id:"1-background",level:2},{value:"2. Preparation",id:"2-preparation",level:2},{value:"3. Start the demo",id:"3-start-the-demo",level:2},{value:"4. Using istio to dynamically change routing policy",id:"4-using-istio-to-dynamically-change-routing-policy",level:2},{value:"A. route according to version",id:"a-route-according-to-version",level:3},{value:"B. route according to a specific header",id:"b-route-according-to-a-specific-header",level:3},{value:"5. Note",id:"5-note",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"demo-of-istio-15x-integration",children:"Demo of Istio 1.5.x integration"}),"\n",(0,i.jsx)(n.h2,{id:"1-background",children:"1. Background"}),"\n",(0,i.jsx)(n.p,{children:"The RPC capability supported by layotto is implemented by mosn, it means that the RPC feature can reuse the capabilities in mosn."}),"\n",(0,i.jsx)(n.p,{children:"Mosn is officially recognized by istio as a data plane implementation. Here is how to combine layotto (build on mosn) with istio and dynamically adjust service routing through XDS protocol."}),"\n",(0,i.jsx)(n.h2,{id:"2-preparation",children:"2. Preparation"}),"\n",(0,i.jsx)(n.p,{children:"before starting the demo\uff0cyou must install some components as follows\uff1a"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.docker.com/products/docker-desktop",children:"Docker Desktop"})}),"\n",(0,i.jsx)(n.p,{children:"Download from the official website and install it."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://minikube.sigs.k8s.io/docs/start/",children:"minikube"})}),"\n",(0,i.jsx)(n.p,{children:"same as above, just follow the doc in official website."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/istio/istio/releases/tag/1.5.2",children:"Istio-1.5.x"})}),"\n",(0,i.jsxs)(n.p,{children:["You need to download the ",(0,i.jsx)(n.code,{children:"1.5.x"})," version of ",(0,i.jsx)(n.code,{children:"istio"}),". After decompressing, configure it as follows to facilitate subsequent operations."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"export PATH=$PATH:${your istio directory}/bin\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"3-start-the-demo",children:"3. Start the demo"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run Docker Desktop"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Run the following command to start ",(0,i.jsx)(n.code,{children:"minikube"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"minikube start\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run the following command to start the services in the demo (all the dependent images have been uploaded to the docker hub)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"kubectl apply -f layotto-injected.yaml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The contents of ",(0,i.jsx)(n.code,{children:"layotto-injected.yaml"})," is ",(0,i.jsx)(n.a,{href:"https://github.com/mosn/layotto/blob/istio-1.5.x/demo/istio/layotto-injected.yaml",children:"here"})," \uff0cjust copy it\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Run the command ",(0,i.jsx)(n.code,{children:"kubectl get pod"})," to check the status (it needs to download the dependent images during the first startup,so please wait patiently)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"NAME                         READY   STATUS    RESTARTS   AGE\nclient-665c5cc4f-tfxrk       2/2     Running   0          49m\nserver-v1-685966b499-8hnqp   2/2     Running   0          49m\nserver-v2-6cfff5dbb5-4hlgb   2/2     Running   0          49m\n"})}),"\n",(0,i.jsx)(n.p,{children:"When you see something similar to the above, it indicates that the startup is successful. We have deployed a client and a server. The server side is divided into V1 and V2 versions."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["If you want to access the services in the ",(0,i.jsx)(n.code,{children:"istio"})," cluster from the outside, you must configure the ",(0,i.jsx)(n.code,{children:"istio ingress gateway"})," service, which will increase the cost of getting started. Therefore, the proxy method is used here to simplify this demo."]}),"\n",(0,i.jsx)(n.p,{children:"Run the following command"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"kubectl port-forward svc/client 9080:9080\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then you can directly access the following links, or you can directly access them in the browser."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"curl localhost:9080/grpc\n"})}),"\n",(0,i.jsx)(n.p,{children:"When you see the following response, the example starts successfully."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /hello \nhello, i am layotto v1\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"4-using-istio-to-dynamically-change-routing-policy",children:"4. Using istio to dynamically change routing policy"}),"\n",(0,i.jsx)(n.h3,{id:"a-route-according-to-version",children:"A. route according to version"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run the following command to create destination rules"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"kubectl apply -f destination-rule-all.yaml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The contents of ",(0,i.jsx)(n.code,{children:"destination-rule-all.yaml"})," is ",(0,i.jsx)(n.a,{href:"https://github.com/mosn/layotto/blob/istio-1.5.x/demo/istio/layotto-destination-rule-all.yaml",children:"here"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Run the following command to specify that only the V1 service is accessed"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"kubectl apply -f layotto-virtual-service-all-v1.yaml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The contents of ",(0,i.jsx)(n.code,{children:"layotto-virtual-service-all-v1.yaml"})," is ",(0,i.jsx)(n.a,{href:"https://github.com/mosn/layotto/blob/istio-1.5.x/demo/istio/layotto-virtual-service-all-v1.yaml",children:"here"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"After the above command is executed, subsequent requests will only get the return result of v1, as follows:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"GET /hello \nhello, i am layotto v1\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"b-route-according-to-a-specific-header",children:"B. route according to a specific header"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Run the following command to modify the routing rules to access the v1 service when the request header contains ",(0,i.jsx)(n.code,{children:"name:layotto"}),", and other access to the v2 service"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"kubectl apply -f layotto-header-route.yaml\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Send the request to see the result"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"curl -H 'name: layotto' localhost:9080/grpc\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"5-note",children:"5. Note"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Since the example uses ",(0,i.jsx)(n.code,{children:"istio 1.5.2"}),", which is an older version, the demo will not be merged into the main branch, but exists as a separate branch ",(0,i.jsx)(n.code,{children:"istio-1.5.x"}),". Currently the main branch code has been integrated with ",(0,i.jsx)(n.code,{children:"istio 1.10.x"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For the source code of client and server used in the example, please refer to ",(0,i.jsx)(n.a,{href:"https://github.com/mosn/layotto/tree/istio-1.5.x/demo/istio",children:"here"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In order to get started simple, the ",(0,i.jsx)(n.code,{children:"layotto-injected.yaml"})," file used above has been injected through istio already. This injection process is as follows:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Run the following command to specify ",(0,i.jsx)(n.code,{children:"istio"})," to use ",(0,i.jsx)(n.code,{children:"Layotto"})," as the data plane"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'istioctl manifest apply  --set .values.global.proxy.image="mosnio/proxyv2:layotto"   --set meshConfig.defaultConfig.binaryPath="/usr/local/bin/mosn"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:["Sidecar injection is achieved through ",(0,i.jsx)(n.code,{children:"kube-inject"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"istioctl kube-inject -f layotto.yaml > layotto-injected.yaml\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The contents of ",(0,i.jsx)(n.code,{children:"layotto.yaml"})," is ",(0,i.jsx)(n.a,{href:"https://github.com/mosn/layotto/blob/istio-1.5.x/demo/istio/layotto.yaml",children:"here"})]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Run the following command to replace all ",(0,i.jsx)(n.code,{children:"/usr/local/bin/envoy"})," in ",(0,i.jsx)(n.code,{children:"layotto-injected.yaml"})," with ",(0,i.jsx)(n.code,{children:"/usr/local/bin/mosn"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'sed -i "s/\\/usr\\/local\\/bin\\/envoy/\\/usr\\/local\\/bin\\/mosn/g" ./layotto-injected.yaml\n'})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(6540);const o={},s=i.createContext(o);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);