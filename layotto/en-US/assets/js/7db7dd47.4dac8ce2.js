"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[8168],{8917:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var i=n(4848),s=n(8453);const l={},r="File API",o={id:"building_blocks/file/file",title:"File API",description:"What is File API",source:"@site/i18n/en-US/docusaurus-plugin-content-docs/current/building_blocks/file/file.md",sourceDirName:"building_blocks/file",slug:"/building_blocks/file/",permalink:"/layotto/en-US/docs/building_blocks/file/",draft:!1,unlisted:!1,editUrl:"https://github.com/mosn/layotto/edit/main/building_blocks/file/file.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"\u7ebf\u4e0a\u5b9e\u9a8c\u5ba4",permalink:"/layotto/en-US/docs/start/lab"},next:{title:"Actuator Http API",permalink:"/layotto/en-US/docs/building_blocks/actuator/"}},a={},c=[{value:"What is File API",id:"what-is-file-api",level:2},{value:"How to use File API",id:"how-to-use-file-api",level:2},{value:"Example",id:"example",level:3},{value:"grpc API definition",id:"grpc-api-definition",level:2},{value:"Research",id:"research",level:2},{value:"parameters",id:"parameters",level:3},{value:"Get File",id:"get-file",level:3},{value:"Put File",id:"put-file",level:3},{value:"Delete File",id:"delete-file",level:3},{value:"List File",id:"list-file",level:3}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"file-api",children:"File API"}),"\n",(0,i.jsx)(t.h2,{id:"what-is-file-api",children:"What is File API"}),"\n",(0,i.jsx)(t.p,{children:"File api is used to implement file operations. Applications can perform CRUD operations on files through this interface. The interface supports streaming mode to realize the transmission of large files."}),"\n",(0,i.jsx)(t.h2,{id:"how-to-use-file-api",children:"How to use File API"}),"\n",(0,i.jsxs)(t.p,{children:["You can call the File API through grpc. The API is defined in ",(0,i.jsx)(t.a,{href:"https://github.com/mosn/layotto/blob/main/spec/proto/runtime/v1/runtime.proto",children:"runtime.proto"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["The component needs to be configured before use. Different components should have own configuration.For OSS detail configuration items, see ",(0,i.jsx)(t.a,{href:"/layotto/en-US/docs/component_specs/file/oss",children:"OSS Component Document"})]}),"\n",(0,i.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(t.p,{children:["For examples of using file api, please refer to ",(0,i.jsx)(t.a,{href:"../../../../demo/file",children:"File Demo"})]}),"\n",(0,i.jsx)(t.h2,{id:"grpc-api-definition",children:"grpc API definition"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-protobuf",children:"  // Get file with stream\n  rpc GetFile(GetFileRequest) returns (stream GetFileResponse) {}\n\n  // Put file with stream\n  rpc PutFile(stream PutFileRequest) returns (google.protobuf.Empty) {}\n\n  // List all files\n  rpc ListFile(ListFileRequest) returns (ListFileResp){}\n\n  // Delete specific file\n  rpc DelFile(DelFileRequest) returns (google.protobuf.Empty){}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"research",children:"Research"}),"\n",(0,i.jsx)(t.p,{children:"Refer\uff1a"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-protobuf",children:"https://github.com/mosn/layotto/issues/98\n"})}),"\n",(0,i.jsx)(t.h3,{id:"parameters",children:"parameters"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-protobuf",children:"message GetFileRequest {\n  //\n  string store_name = 1;\n  // The name of the file or object want to get.\n  string name = 2;\n  // The metadata for user extension.\n  map<string,string> metadata = 3;\n}\n\nmessage GetFileResponse {\n  bytes data = 1;\n}\n\nmessage PutFileRequest {\n  string store_name = 1;\n  // The name of the file or object want to put.\n  string name = 2;\n  // The data will be store.\n  bytes data = 3;\n  // The metadata for user extension.\n  map<string,string> metadata = 4;\n}\n\nmessage FileRequest {\n  string store_name = 1;\n  // The name of the directory\n  string name = 2;\n  // The metadata for user extension.\n  map<string,string> metadata = 3;\n}\n\nmessage ListFileRequest {\n  FileRequest request = 1;\n}\n\nmessage ListFileResp {\n  repeated string file_name = 1;\n}\n\nmessage DelFileRequest {\n  FileRequest request = 1;\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"get-file",children:"Get File"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-protobuf",children:"  // Get file with stream\n  rpc GetFile(GetFileRequest) returns (stream GetFileResponse) {}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To avoid inconsistencies between this document and the code, please refer to ",(0,i.jsx)(t.a,{href:"https://github.com/mosn/layotto/blob/main/spec/proto/runtime/v1/runtime.proto",children:"the newest proto file"})," for detailed input parameters and return values."]}),"\n",(0,i.jsx)(t.h3,{id:"put-file",children:"Put File"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-protobuf",children:"  // Put file with stream\n  rpc PutFile(stream PutFileRequest) returns (google.protobuf.Empty) {}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To avoid inconsistencies between this document and the code, please refer to ",(0,i.jsx)(t.a,{href:"https://github.com/mosn/layotto/blob/main/spec/proto/runtime/v1/runtime.proto",children:"the newest proto file"})," for detailed input parameters and return values."]}),"\n",(0,i.jsx)(t.h3,{id:"delete-file",children:"Delete File"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-protobuf",children:"// Delete specific file\nrpc DelFile(DelFileRequest) returns (google.protobuf.Empty){}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To avoid inconsistencies between this document and the code, please refer to ",(0,i.jsx)(t.a,{href:"https://github.com/mosn/layotto/blob/main/spec/proto/runtime/v1/runtime.proto",children:"the newest proto file"})," for detailed input parameters and return values."]}),"\n",(0,i.jsx)(t.h3,{id:"list-file",children:"List File"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-protobuf",children:"// List all files\nrpc ListFile(ListFileRequest) returns (ListFileResp){}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To avoid inconsistencies between this document and the code, please refer to ",(0,i.jsx)(t.a,{href:"https://github.com/mosn/layotto/blob/main/spec/proto/runtime/v1/runtime.proto",children:"the newest proto file"})," for detailed input parameters and return values."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(6540);const s={},l=i.createContext(s);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);