"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[583],{7599:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=n(4848),i=n(8453);const r={},s="Dump TCP traffic",a={id:"start/network_filter/tcpcopy",title:"Dump TCP traffic",description:"Introduction",source:"@site/i18n/en-US/docusaurus-plugin-content-docs/current/start/network_filter/tcpcopy.md",sourceDirName:"start/network_filter",slug:"/start/network_filter/tcpcopy",permalink:"/en-US/docs/start/network_filter/tcpcopy",draft:!1,unlisted:!1,editUrl:"https://github.com/mosn/layotto/edit/main/start/network_filter/tcpcopy.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Demo of Istio 1.5.x integration",permalink:"/en-US/docs/start/istio/start"},next:{title:"flow_control",permalink:"/en-US/docs/start/stream_filter/flow_control"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Configuration description",id:"configuration-description",level:2},{value:"Principle of work",id:"principle-of-work",level:2}];function u(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"dump-tcp-traffic",children:"Dump TCP traffic"}),"\n",(0,o.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(e.p,{children:["When you run the demo according to the quick-start document ",(0,o.jsx)(e.a,{href:"/en-US/docs/start/configuration/start-apollo",children:"Configuration demo with apollo"}),", you may notice that there is such a configuration in the configuration file config_apollo.json:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'\n                {\n                  "type": "tcpcopy",\n                  "config": {\n                    "strategy": {\n                      "switch": "ON",\n                      "interval": 30,\n                      "duration": 10,\n                      "cpu_max_rate": 80,\n                      "mem_max_rate": 80\n                    }\n                  }\n\n'})}),"\n",(0,o.jsx)(e.p,{children:"The meaning of this configuration is to load the tcpcopy plug-in at startup to dump the tcp traffic."}),"\n",(0,o.jsx)(e.p,{children:"After enabling this configuration, when Layotto receives a request and the conditions for traffic dump are met, it will write the binary request data to the local file system."}),"\n",(0,o.jsxs)(e.p,{children:['The "dumped" binary traffic data will be stored in the ',(0,o.jsx)(e.code,{children:"${user's home directory}/logs/mosn"})," directory, or under the /home/admin/logs/mosn directory:"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"img.png",src:n(9717).A+"",width:"431",height:"401"})}),"\n",(0,o.jsx)(e.p,{children:"You can use these data in combination with other tools and infrastructure to do something cool, such as traffic playback, bypass verification, etc."}),"\n",(0,o.jsx)(e.h2,{id:"configuration-description",children:"Configuration description"}),"\n",(0,o.jsx)(e.p,{children:"In the above config_apollo.json, the strategy configuration item is mainly used to configure the sampling strategy. The specific configuration descriptions are as follows:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'type DumpConfig struct {\n\tSwitch     string  `json:"switch"`       // dump switch.\'ON\' or \'OFF\'\n\tInterval   int     `json:"interval"`     // dump sampling interval, unit: second\n\tDuration   int     `json:"duration"`     // Single sampling duration,unit: second\n\tCpuMaxRate float64 `json:"cpu_max_rate"` // cpu max rate.When cpu rate bigger than this threshold,dump function will be fused\n\tMemMaxRate float64 `json:"mem_max_rate"` // mem max rate.When memory rate bigger than this threshold,dump function will be fused\n}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"principle-of-work",children:"Principle of work"}),"\n",(0,o.jsx)(e.p,{children:"The Layotto server runs on MOSN and uses MOSN's filter expansion capabilities, so the tcpcopy above is actually a network filter plug-in of MOSN."}),"\n",(0,o.jsxs)(e.p,{children:["You can refer to ",(0,o.jsx)(e.a,{href:"https://mosn.io/blog/code/mosn-filters/",children:"MOSN source code analysis-filter extension mechanism"})," to implement your own 4-layer filter plug-in"]})]})}function d(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(u,{...t})}):u(t)}},9717:(t,e,n)=>{n.d(e,{A:()=>o});const o=n.p+"assets/images/tcp_dump-d21a043f85fc85b273973fc6aa47a5fa.png"},8453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>a});var o=n(6540);const i={},r=o.createContext(i);function s(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:s(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);