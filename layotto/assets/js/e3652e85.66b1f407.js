"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[222],{6913:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=r(4848),t=r(8453);const a={},s="Layotto \u6e90\u7801\u89e3\u6790 \u2014\u2014 \u5904\u7406 RPC \u8bf7\u6c42",i={permalink:"/layotto/blog/code/layotto-rpc",editUrl:"https://github.com/mosn/layotto/edit/main/docs/blog/code/layotto-rpc/index.md",source:"@site/blog/code/layotto-rpc/index.md",title:"Layotto \u6e90\u7801\u89e3\u6790 \u2014\u2014 \u5904\u7406 RPC \u8bf7\u6c42",description:"\u672c\u6587\u4e3b\u8981\u4ee5 Dubbo Json RPC \u4e3a\u4f8b\u6765\u5206\u6790 Layotto RPC \u5904\u7406\u6d41\u7a0b\u3002",date:"2024-07-10T10:04:20.000Z",tags:[],readingTime:23.85,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"\u6e90\u7801\u89e3\u6790 7\u5c42\u6d41\u91cf\u6cbb\u7406,\u63a5\u53e3\u9650\u6d41",permalink:"/layotto/blog/code/flowcontrol/flowcontrol_code_analyze"},nextItem:{title:"\u6e90\u7801\u89e3\u6790  layotto\u542f\u52a8\u6d41\u7a0b",permalink:"/layotto/blog/code/start_process/start_process"}},l={authorsImageUrls:[]},c=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u6e90\u7801\u5206\u6790",id:"\u6e90\u7801\u5206\u6790",level:2},{value:"0x00 Layotto \u521d\u59cb\u5316 RPC",id:"0x00-layotto-\u521d\u59cb\u5316-rpc",level:3},{value:"0x01 Dubbo-go-sample client \u53d1\u8d77\u8bf7\u6c42",id:"0x01-dubbo-go-sample-client-\u53d1\u8d77\u8bf7\u6c42",level:3},{value:"0x02 Mosn EventLoop \u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e",id:"0x02-mosn-eventloop-\u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e",level:3},{value:"0x03 Grpc Sever \u4f5c\u4e3a NetworkFilter \u5904\u7406\u8bf7\u6c42",id:"0x03-grpc-sever-\u4f5c\u4e3a-networkfilter-\u5904\u7406\u8bf7\u6c42",level:3},{value:"0x04 Layotto \u53d1\u9001 RPC \u8bf7\u6c42\u5e76\u5199\u5165 Local \u865a\u62df\u8fde\u63a5",id:"0x04-layotto-\u53d1\u9001-rpc-\u8bf7\u6c42\u5e76\u5199\u5165-local-\u865a\u62df\u8fde\u63a5",level:3},{value:"0x05 Mosn \u8bfb\u53d6 Remote \u5e76\u6267\u884c Filter \u548c\u4ee3\u7406\u8f6c\u53d1",id:"0x05-mosn-\u8bfb\u53d6-remote-\u5e76\u6267\u884c-filter-\u548c\u4ee3\u7406\u8f6c\u53d1",level:3},{value:"0x06 Dubbo-go-sample server \u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94",id:"0x06-dubbo-go-sample-server-\u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94",level:3},{value:"0x07 Mosn \u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de Remote \u865a\u62df\u8fde\u63a5",id:"0x07-mosn-\u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de-remote-\u865a\u62df\u8fde\u63a5",level:3},{value:"0x08 Layotto \u63a5\u6536 RPC \u54cd\u5e94\u5e76\u8bfb\u53d6 Local \u865a\u62df\u8fde\u63a5",id:"0x08-layotto-\u63a5\u6536-rpc-\u54cd\u5e94\u5e76\u8bfb\u53d6-local-\u865a\u62df\u8fde\u63a5",level:3},{value:"0x09 Grpc Sever \u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef",id:"0x09-grpc-sever-\u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef",level:3},{value:"0x10 dubbo-go-sample client \u63a5\u6536\u54cd\u5e94",id:"0x10-dubbo-go-sample-client-\u63a5\u6536\u54cd\u5e94",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}];function p(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsx)(e.p,{children:"\u672c\u6587\u4e3b\u8981\u4ee5 Dubbo Json RPC \u4e3a\u4f8b\u6765\u5206\u6790 Layotto RPC \u5904\u7406\u6d41\u7a0b\u3002"}),"\n",(0,o.jsxs)(e.p,{children:["\u4f5c\u8005\uff1a",(0,o.jsx)(e.a,{href:"https://github.com/rayowang",children:"\u738b\u5fd7\u9f99"})," | 2022\u5e744\u670821\u65e5"]}),"\n"]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#%E6%A6%82%E8%BF%B0",children:"\u6982\u8ff0"})}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"#%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90",children:"\u6e90\u7801\u5206\u6790"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x00-layotto-%E5%88%9D%E5%A7%8B%E5%8C%96-rpc",children:"0x00 Layotto \u521d\u59cb\u5316 RPC"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x01-dubbo-go-sample-client-%E5%8F%91%E8%B5%B7%E8%AF%B7%E6%B1%82",children:"0x01 Dubbo-go-sample client \u53d1\u8d77\u8bf7\u6c42"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x02-mosn-eventloop-%E8%AF%BB%E5%8D%8F%E7%A8%8B%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE",children:"0x02 Mosn EventLoop \u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x03-grpc-sever-%E4%BD%9C%E4%B8%BA-networkfilter-%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82",children:"0x03 Grpc Sever \u4f5c\u4e3a NetworkFilter \u5904\u7406\u8bf7\u6c42"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x04-layotto-%E5%8F%91%E9%80%81-rpc-%E8%AF%B7%E6%B1%82%E5%B9%B6%E5%86%99%E5%85%A5-local-%E8%99%9A%E6%8B%9F%E8%BF%9E%E6%8E%A5",children:"0x04 Layotto \u53d1\u9001 RPC \u8bf7\u6c42\u5e76\u5199\u5165 Local \u865a\u62df\u8fde\u63a5"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x05-mosn-%E8%AF%BB%E5%8F%96-remote-%E5%B9%B6%E6%89%A7%E8%A1%8C-filter-%E5%92%8C%E4%BB%A3%E7%90%86%E8%BD%AC%E5%8F%91",children:"0x05 Mosn \u8bfb\u53d6 Remote \u5e76\u6267\u884c Filter \u548c\u4ee3\u7406\u8f6c\u53d1"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x06-dubbo-go-sample-server-%E6%94%B6%E5%88%B0%E8%AF%B7%E6%B1%82%E8%BF%94%E5%9B%9E%E5%93%8D%E5%BA%94",children:"0x06 Dubbo-go-sample server \u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x07-mosn-%E6%A1%86%E6%9E%B6%E5%A4%84%E7%90%86%E5%93%8D%E5%BA%94%E5%B9%B6%E5%86%99%E5%9B%9E-remote-%E8%99%9A%E6%8B%9F%E8%BF%9E%E6%8E%A5",children:"0x07 Mosn \u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de Remote \u865a\u62df\u8fde\u63a5"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x08-layotto-%E6%8E%A5%E6%94%B6-rpc-%E5%93%8D%E5%BA%94%E5%B9%B6%E8%AF%BB%E5%8F%96-local-%E8%99%9A%E6%8B%9F%E8%BF%9E%E6%8E%A5",children:"0x08 Layotto \u63a5\u6536 RPC \u54cd\u5e94\u5e76\u8bfb\u53d6 Local \u865a\u62df\u8fde\u63a5"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x09-grpc-sever-%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E5%B8%A7%E8%BF%94%E5%9B%9E%E7%BB%99%E5%AE%A2%E6%88%B7%E7%AB%AF",children:"0x09 Grpc Sever \u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#_0x10-dubbo-go-sample-client-%E6%8E%A5%E6%94%B6%E5%93%8D%E5%BA%94",children:"0x10 Dubbo-go-sample client \u63a5\u6536\u54cd\u5e94"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#%E6%80%BB%E7%BB%93",children:"\u603b\u7ed3"})}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"\u6982\u8ff0",children:"\u6982\u8ff0"}),"\n",(0,o.jsx)(e.p,{children:"Layotto \u4f5c\u4e3a\u533a\u522b\u4e8e\u7f51\u7edc\u4ee3\u7406 Service Mesh \u7684\u5206\u5e03\u5f0f\u539f\u8bed\u96c6\u5408\u4e14\u4f7f\u7528\u6807\u51c6\u534f\u8bae\u7684 Runtime\uff0c\u5177\u6709\u660e\u786e\u548c\u4e30\u5bcc\u7684\u8bed\u4e49 API\uff0c\u800c RPC API \u5c31\u662f\u4f17\u591a API \u4e2d\u7684\u4e00\u79cd\u3002\u901a\u8fc7 RPC API \u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4e0e\u540c\u6837\u4f7f\u7528 Sidecar \u67b6\u6784\u7684\u5e94\u7528\u672c\u5730 Layotto \u5b9e\u4f8b\u8fdb\u884c\u4ea4\u4e92\uff0c\u4ece\u800c\u95f4\u63a5\u7684\u8c03\u7528\u4e0d\u540c\u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u5e76\u53ef\u4ee5\u5229\u7528\u5185\u7f6e\u80fd\u529b\u5b8c\u6210\u5206\u5e03\u5f0f\u8ffd\u8e2a\u548c\u8bca\u65ad\uff0c\u6d41\u91cf\u8c03\u63a7\uff0c\u9519\u8bef\u5904\u7406\uff0c\u5b89\u5168\u94fe\u8def\u7b49\u64cd\u4f5c\u3002\u5e76\u4e14 Layotto \u7684 RPC API \u57fa\u4e8e Mosn \u7684 Grpc handler \u8bbe\u8ba1\uff0c\u9664\u4e86 Http/Grpc\uff0c\u4e0e\u5176\u5b83\u670d\u52a1\u901a\u4fe1\u65f6\u8fd8\u53ef\u4ee5\u5229\u7528Mosn\u7684\u591a\u534f\u8bae\u673a\u5236\uff0c\u4f7f\u7528 X-Protocol \u534f\u8bae\u8fdb\u884c\u5b89\u5168\u53ef\u9760\u901a\u4fe1\u3002\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0cRPC API \u7684\u63a5\u53e3\u4e0e Dapr \u4e00\u81f4\uff0c\u901a\u8fc7 Grpc \u63a5\u53e3 InvokeService \u5373\u53ef\u8fdb\u884c RPC \u8c03\u7528\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"type DaprClient interface {\n    // Invokes a method on a remote Dapr app.\n    InvokeService(ctx context.Context, in *InvokeServiceRequest, opts ...grpc.CallOption) (*v1.InvokeResponse, error)\n    ...\n}\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u6e90\u7801\u5206\u6790",children:"\u6e90\u7801\u5206\u6790"}),"\n",(0,o.jsx)(e.p,{children:"\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u8fd9\u91cc\u4ece\u5916\u5230\u5185\uff0c\u518d\u4ece\u5185\u5230\u5916\uff0c\u7531\u6570\u636e\u6d41\u8f6c\u6620\u5c04\u5230\u6e90\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u4eceClient\u53d1\u8d77\u8bf7\u6c42\uff0c\u7a7f\u8d8a\u4e00\u5c42\u4e00\u5c42\u7684\u903b\u8f91\uff0c\u5230 Server \u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94\uff0c\u518d\u4e00\u5c42\u5c42\u7684\u56de\u5230 Client \u6536\u5230\u54cd\u5e94\uff0c\u4e00\u5c42\u5c42\u6765\u5206\u6790 Layotto \u7684 RPC \u6d41\u7a0b\uff0c\u603b\u5171\u62c6\u5206\u6210\u5341\u6b65\u3002\u53e6\u5916\u56e0\u4e3a Grpc Client \u548c Server \u63e1\u624b\u53ca\u4ea4\u4e92\u76f8\u5173\u7684\u5185\u5bb9\u4e0d\u662f\u672c\u6587\u91cd\u70b9\uff0c\u6240\u4ee5\u5206\u6790\u7684\u76f8\u5bf9\u7b80\u7565\u4e00\u4e9b\uff0c\u5176\u5b83\u6b65\u9aa4\u5185\u5bb9\u76f8\u5bf9\u8be6\u7ec6\u4e00\u4e9b\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u76f4\u63a5\u4ece\u76ee\u5f55\u8df3\u8f6c\u5230\u76f8\u5e94\u6b65\u9aa4\u3002"}),"\n",(0,o.jsx)(e.p,{children:"\u5907\u6ce8\uff1a\u672c\u6587\u57fa\u4e8e commit hash\uff1a1d2bed68c3b2372c34a12aeed41be125a4fdd15a"}),"\n",(0,o.jsx)(e.h3,{id:"0x00-layotto-\u521d\u59cb\u5316-rpc",children:"0x00 Layotto \u521d\u59cb\u5316 RPC"}),"\n",(0,o.jsx)(e.p,{children:"Layotto \u542f\u52a8\u6d41\u7a0b\u6d89\u53ca\u4f17\u591a\u672c\u6d41\u7a0b\uff0c\u5728\u6b64\u53ea\u5206\u6790\u4e0b\u8ddf RPC \u76f8\u5173\u7684\u53ca\u4e0b\u8ff0\u6d41\u7a0b\u7528\u7684\u521d\u59cb\u5316\uff0c\u56e0\u4e3a Layotto \u662f\u5efa\u7acb\u5728 Mosn \u4e4b\u4e0a\uff0c\u6240\u4ee5\u4ece Main \u51fd\u6570\u51fa\u53d1\uff0curfave/cli \u5e93\u4f1a\u8c03\u7528 Mosn \u7684 StageManager \u521d\u59cb\u5316 Mosn, \u8fdb\u800c\u5728 Mosn NetworkFilter \u4e2d\u521d\u59cb\u5316 GrpcServer\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'mosn.io/mosn/pkg/stagemanager.(*StageManager).runInitStage at stage_manager.go\n=>\nmosn.io/mosn/pkg/mosn.(*Mosn).initServer at mosn.go\n=>\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcServerFilterFactory).Init at factory.go\n=>\nmosn.io/mosn/pkg/filter/network/grpc.(*Handler).New at factory.go\n// \u65b0\u5efa\u4e00\u4e2a\u5e26\u6709\u5730\u5740\u7684 Grpc \u670d\u52a1\u5668\u3002\u540c\u4e00\u4e2a\u5730\u5740\u8fd4\u56de\u540c\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u53ea\u80fd\u542f\u52a8\u4e00\u6b21\nfunc (s *Handler) New(addr string, conf json.RawMessage, options ...grpc.ServerOption) (*registerServerWrapper, error) {\n    s.mutex.Lock()\n    defer s.mutex.Unlock()\n    sw, ok := s.servers[addr]\n    if ok {\n        return sw, nil\n    }\n    ln, err := NewListener(addr)\n    if err != nil {\n        log.DefaultLogger.Errorf("create a listener failed: %v", err)\n        return nil, err\n    }\n    // \u8c03\u7528 NewRuntimeGrpcServer\n    srv, err := s.f(conf, options...)\n    if err != nil {\n        log.DefaultLogger.Errorf("create a registered server failed: %v", err)\n        return nil, err\n    }\n    sw = &registerServerWrapper{\n        server: srv,\n        ln:     ln,\n    }\n    s.servers[addr] = sw\n    return sw, nil\n}\n=\nmain.NewRunvtimeGrpcServer at main.go\n=>\nmosn.io/layotto/pkg/runtime.(*MosnRuntime).initRuntime at runtime.go\n=>\nmosn.io/layotto/pkg/runtime.(*MosnRuntime).initRpcs at runtime.go\n=>\nmosn.io/layotto/components/rpc/invoker/mosn.(*mosnInvoker).Init at mosninvoker.go\nfunc (m *mosnInvoker) Init(conf rpc.RpcConfig) error {\n    var config mosnConfig\n    if err := json.Unmarshal(conf.Config, &config); err != nil {\n        return err\n    }\n\n    // \u521d\u59cb\u5316 RPC \u8c03\u7528\u524d\u7684 Filter\n    for _, before := range config.Before {\n        m.cb.AddBeforeInvoke(before)\n    }\n\n    // \u521d\u59cb\u5316 RPC \u8c03\u7528\u540e\u7684 Filter\n    for _, after := range config.After {\n        m.cb.AddAfterInvoke(after)\n    }\n\n    if len(config.Channel) == 0 {\n        return errors.New("missing channel config")\n    }\n\n    // \u521d\u59cb\u5316\u4e0e Mosn \u901a\u4fe1\u4f7f\u7528\u7684\u901a\u9053\u3001\u534f\u8bae\u53ca\u5bf9\u5e94\u7aef\u53e3\n    channel, err := channel.GetChannel(config.Channel[0])\n    if err != nil {\n        return err\n    }\n    m.channel = channel\n    return nil\n}\n...\n// \u5b8c\u6210\u4e00\u4e9b\u5217\u521d\u59cb\u5316\u540e\u5728 grpcServerFilter \u4e2d\u542f\u52a8 Grpc Server\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcServerFilterFactory).Init at factory.go\nfunc (f *grpcServerFilterFactory) Init(param interface{}) error {\n    ...\n    opts := []grpc.ServerOption{\n        grpc.UnaryInterceptor(f.UnaryInterceptorFilter),\n        grpc.StreamInterceptor(f.StreamInterceptorFilter),\n    }\n    // \u7ecf\u8fc7\u4e0a\u8ff0\u521d\u59cb\u5316\uff0c\u5b8c\u6210 Grpc registerServerWrapper \u7684\u521d\u59cb\u5316\n    sw, err := f.handler.New(addr, f.config.GrpcConfig, opts...)\n    if err != nil {\n        return err\n    }\n    // \u542f\u52a8 Grpc sever\n    sw.Start(f.config.GracefulStopTimeout)\n    f.server = sw\n    log.DefaultLogger.Debugf("grpc server filter initialized success")\n    return nil\n}\n...\n// StageManager \u5728 runInitStage \u4e4b\u540e\u8fdb\u5165 runStartStage \u542f\u52a8 Mosn\nfunc (stm *StageManager) runStartStage() {\n    st := time.Now()\n    stm.SetState(Starting)\n    for _, f := range stm.startupStages {\n        f(stm.app)\n    }\n\n    stm.wg.Add(1)\n    // \u5728\u6240\u6709\u542f\u52a8\u9636\u6bb5\u5b8c\u6210\u540e\u542f\u52a8 Mosn\n    stm.app.Start()\n    ...\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x01-dubbo-go-sample-client-\u53d1\u8d77\u8bf7\u6c42",children:"0x01 Dubbo-go-sample client \u53d1\u8d77\u8bf7\u6c42"}),"\n",(0,o.jsxs)(e.p,{children:["\u6839\u636e ",(0,o.jsx)(e.a,{href:"https://mosn.io/layotto/docs/start/rpc/dubbo_json_rpc",children:"Dubbo Json Rpc Example"})," \u4f8b\u5b50\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-shell",children:'go run demo/rpc/dubbo_json_rpc/dubbo_json_client/client.go -d \'{"jsonrpc":"2.0","method":"GetUser","params":["A003"],"id":9527}\'\n'})}),"\n",(0,o.jsx)(e.p,{children:"\u4f7f\u7528 Layotto \u5bf9 App \u63d0\u4f9b\u7684 Grpc API InvokeService \u53d1\u8d77 RPC \u8c03\u7528\uff0c\u7ecf\u8fc7\u6570\u636e\u586b\u5145\u548c\u8fde\u63a5\u5efa\u7acb\u7b49\u6d41\u7a0b\uff0c\u6700\u7ec8\u901a\u8fc7 Grpc clientStream \u4e2d\u8c03\u7528 SendMsg \u5411 Layotto \u53d1\u9001\u6570\u636e\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'\nfunc main() {\n    data := flag.String("d", `{"jsonrpc":"2.0","method":"GetUser","params":["A003"],"id":9527}`, "-d")\n    flag.Parse()\n    \n    conn, err := grpc.Dial("localhost:34904", grpc.WithInsecure())\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    cli := runtimev1pb.NewRuntimeClient(conn)\n    ctx, cancel := context.WithCancel(context.TODO())\n    defer cancel()\n    // \u901a\u8fc7 Grpc \u63a5\u53e3 InvokeService \u8fdb\u884c RPC \u8c03\u7528\n    resp, err := cli.InvokeService(\n        ctx,\n       // \u4f7f\u7528 runtimev1pb.InvokeServiceRequest \u53d1\u8d77 Grpc \u8bf7\u6c42\n        &runtimev1pb.InvokeServiceRequest{\n           // \u8981\u8bf7\u6c42\u7684 server \u63a5\u53e3 ID\n           Id: "org.apache.dubbo.samples.UserProvider",\n            Message: &runtimev1pb.CommonInvokeRequest{\n               // \u8981\u8bf7\u6c42\u7684\u63a5\u53e3\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d\n                Method:        "GetUser",\n                ContentType:   "",\n                Data:          &anypb.Any{Value: []byte(*data)},\n                HttpExtension: &runtimev1pb.HTTPExtension{Verb: runtimev1pb.HTTPExtension_POST},\n            },\n        },\n    )\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    fmt.Println(string(resp.Data.GetValue()))\n}\n=>\nmosn.io/layotto/spec/proto/runtime/v1.(*runtimeClient).InvokeService at runtime.pb.go\n=>\ngoogle.golang.org/grpc.(*ClientConn).Invoke at call.go\n=>\ngoogle.golang.org/grpc.(*clientStream).SendMsg at stream.go\n=>\ngoogle.golang.org/grpc.(*csAttempt).sendMsg at stream.go\n=>\ngoogle.golang.org/grpc/internal/transport.(*http2Client).Write at http2_client.go\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x02-mosn-eventloop-\u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e",children:"0x02 Mosn EventLoop \u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e"}),"\n",(0,o.jsx)(e.p,{children:"\u4e0a\u6587\u8bf4\u8fc7 Layotto \u7684\u5185\u6838\u76f8\u5f53\u4e8e\u662f Mosn\uff0c\u6240\u4ee5\u5f53\u7f51\u7edc\u8fde\u63a5\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u4f1a\u5148\u5230 Mosn \u7684 L4 \u7f51\u7edc\u5c42\u8fdb\u884c\u8bfb\u5199\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"mosn.io/mosn/pkg/network.(*listener).accept at listener.go\n=>\nmosn.io/mosn/pkg/server.(*activeListener).OnAccept at handler.go\n=>\nmosn.io/mosn/pkg/server.(*activeRawConn).ContinueFilterChain at handler.go\n=>\nmosn.io/mosn/pkg/server.(*activeListener).newConnection at handler.go\n=>\nmosn.io/mosn/pkg/network.(*connection).Start at connection.go\n=>\nmosn.io/mosn/pkg/network.(*connection).startRWLoop at connection.go\nfunc (c *connection) startRWLoop(lctx context.Context) {\n    c.internalLoopStarted = true\n\n    utils.GoWithRecover(func() {\n       // \u8bfb\u534f\u7a0b\n        c.startReadLoop()\n    }, func(r interface{}) {\n        c.Close(api.NoFlush, api.LocalClose)\n    })\n\n    if c.checkUseWriteLoop() {\n        c.useWriteLoop = true\n        utils.GoWithRecover(func() {\n           // \u5199\u534f\u7a0b\n            c.startWriteLoop()\n        }, func(r interface{}) {\n            c.Close(api.NoFlush, api.LocalClose)\n        })\n    }\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:"\u5728 startRWLoop \u65b9\u6cd5\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4f1a\u5206\u522b\u5f00\u542f\u4e24\u4e2a\u534f\u7a0b\u6765\u5206\u522b\u5904\u7406\u8be5\u8fde\u63a5\u4e0a\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u5373 startReadLoop \u548c startWriteLoop\uff0c\u5728 startReadLoop \u4e2d\u7ecf\u8fc7\u5982\u4e0b\u6d41\u8f6c\uff0c\u628a\u7f51\u7edc\u5c42\u8bfb\u5230\u7684\u6570\u636e\uff0c\u7531 filterManager \u8fc7\u6ee4\u5668\u7ba1\u7406\u5668\u628a\u6570\u636e\u4ea4\u7531\u8fc7\u6ee4\u5668\u94fe\u8fdb\u884c\u5904\u7406\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'mosn.io/mosn/pkg/network.(*connection).doRead at connection.go\n=>\nmosn.io/mosn/pkg/network.(*connection).onRead at connection.go\n=>\nmosn.io/mosn/pkg/network.(*filterManager).OnRead at filtermanager.go\n=>\nmosn.io/mosn/pkg/network.(*filterManager).onContinueReading at filtermanager.go\nfunc (fm *filterManager) onContinueReading(filter *activeReadFilter) {\n    var index int\n    var uf *activeReadFilter\n\n    if filter != nil {\n        index = filter.index + 1\n    }\n\n    // filterManager\u904d\u5386\u8fc7\u6ee4\u5668\u8fdb\u884c\u6570\u636e\u5904\u7406\n    for ; index < len(fm.upstreamFilters); index++ {\n        uf = fm.upstreamFilters[index]\n        uf.index = index\n        // \u5bf9\u6ca1\u6709\u521d\u59cb\u5316\u7684\u8fc7\u6ee4\u5668\u8c03\u7528\u5176\u521d\u59cb\u5316\u65b9\u6cd5 OnNewConnection\uff0c\u672c\u4f8b\u4e3afunc (f *grpcFilter) OnNewConnection() api.FilterStatus\uff08\u5411 Listener \u53d1\u9001 grpc \u8fde\u63a5\u4ee5\u5524\u9192 Listener \u7684 Accept\uff09\n        if !uf.initialized {\n            uf.initialized = true\n\n            status := uf.filter.OnNewConnection()\n\n            if status == api.Stop {\n                return\n            }\n        }\n\n        buf := fm.conn.GetReadBuffer()\n\n        if buf != nil && buf.Len() > 0 {\n           // \u901a\u77e5\u76f8\u5e94\u8fc7\u6ee4\u5668\u5904\u7406\n            status := uf.filter.OnData(buf)\n\n            if status == api.Stop {\n                return\n            }\n        }\n    }\n}\n=>\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcFilter).OnData at filter.go\n=>\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcFilter).dispatch at filter.go\nfunc (f *grpcFilter) dispatch(buf buffer.IoBuffer) {\n    if log.DefaultLogger.GetLogLevel() >= log.DEBUG {\n        log.DefaultLogger.Debugf("grpc get datas: %d", buf.Len())\n    }\n    // \u53d1\u9001\u6570\u636e\u5524\u9192\u8fde\u63a5\u8bfb\u53d6\n    f.conn.Send(buf)\n    if log.DefaultLogger.GetLogLevel() >= log.DEBUG {\n        log.DefaultLogger.Debugf("read dispatch finished")\n    }\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x03-grpc-sever-\u4f5c\u4e3a-networkfilter-\u5904\u7406\u8bf7\u6c42",children:"0x03 Grpc Sever \u4f5c\u4e3a NetworkFilter \u5904\u7406\u8bf7\u6c42"}),"\n",(0,o.jsx)(e.p,{children:"\u7b2c\u4e00\u9636\u6bb5\u4e2d\u4ece\u539f\u59cb\u8fde\u63a5\u8bfb\u53d6\u6570\u636e\uff0c\u4f1a\u8fdb\u5165 Grpc Serve \u5904\u7406\uff0cServe \u65b9\u6cd5\u901a\u8fc7 net.Listener \u76d1\u542c\u8fde\u63a5\uff0c\u6bcf\u6b21\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u6765\u5904\u7406\u65b0\u7684\u8fde\u63a5\uff08handleRawConn\uff09\uff0c\u5efa\u7acb\u4e00\u4e2a\u57fa\u4e8eHttp2 \u7684 Transport \u8fdb\u884c\u4f20\u8f93\u5c42\u7684 RPC \u8c03\u7528\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"google.golang.org/grpc.(*Server).handleRawConn at server.go\nfunc (s *Server) handleRawConn(lisAddr string, rawConn net.Conn) {\n    // \u6821\u9a8c\u670d\u52a1\u72b6\u6001\n    if s.quit.HasFired() {\n        rawConn.Close()\n        return\n    }\n    rawConn.SetDeadline(time.Now().Add(s.opts.connectionTimeout))\n    conn, authInfo, err := s.useTransportAuthenticator(rawConn)\n    if err != nil {\n       ...\n    }\n    // HTTP2 \u63e1\u624b\uff0c\u521b\u5efa Http2Server \u4e0e\u5ba2\u6237\u7aef\u4ea4\u6362\u5e27\u7684\u521d\u59cb\u5316\u4fe1\u606f\uff0c\u5e27\u548c\u7a97\u53e3\u5927\u5c0f\u7b49\n    st := s.newHTTP2Transport(conn, authInfo)\n    if st == nil {\n        return\n    }\n\n    rawConn.SetDeadline(time.Time{})\n    if !s.addConn(lisAddr, st) {\n        return\n    }\n    // \u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u8fdb\u884c\u6d41\u5904\u7406\n    go func() {\n        s.serveStreams(st)\n        s.removeConn(lisAddr, st)\n    }()\n    ...\n}\n=>\ngoogle.golang.org/grpc.(*Server).serveStreams at server.go\n=>\ngoogle.golang.org/grpc.(*Server).handleStream at server.go\nfunc (s *Server) handleStream(t transport.ServerTransport, stream *transport.Stream, trInfo *traceInfo) {\n    // \u627e\u5230\u5230\u9700\u8981\u8c03\u7528\u7684 FullMethod\uff0c\u6b64\u4f8b\u4e3a spec.proto.runtime.v1.Runtime/InvokeService\n    sm := stream.Method()\n    if sm != \"\" && sm[0] == '/' {\n        sm = sm[1:]\n    }\n    ...\n    service := sm[:pos]\n    method := sm[pos+1:]\n\n    // \u4ece\u6ce8\u518c\u7684 service \u5217\u8868\u4e2d\u627e\u5230\u5bf9\u5e94 serviceInfo \u5bf9\u8c61\n    srv, knownService := s.services[service]\n    if knownService {\n        // \u6839\u636e\u65b9\u6cd5\u540d\u627e\u5230\u5355\u5411\u8bf7\u6c42\u7684 md\u2014\u2014MethodDesc\uff0c\u6b64 demo \u4e3a mosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler\n        if md, ok := srv.methods[method]; ok {\n            s.processUnaryRPC(t, stream, srv, md, trInfo)\n            return\n        }\n        // \u6d41\u5f0f\u8bf7\u6c42\n        if sd, ok := srv.streams[method]; ok {\n            s.processStreamingRPC(t, stream, srv, sd, trInfo)\n            return\n        }\n    }\n    ...\n=>\ngoogle.golang.org/grpc.(*Server).processUnaryRPC at server.go\n=>\nmosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler at runtime.pb.go\n=>\ngoogle.golang.org/grpc.chainUnaryServerInterceptors at server.go\n=>\n// \u670d\u52a1\u7aef\u5355\u5411\u8c03\u7528\u62e6\u622a\u5668\uff0c\u7528\u4ee5\u8c03\u7528 Mosn \u7684 streamfilter\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcServerFilterFactory).UnaryInterceptorFilter at factory.go\n=>\ngoogle.golang.org/grpc.getChainUnaryHandler at server.go\n// \u9012\u5f52\u751f\u6210\u94fe\u5f0fUnaryHandler\nfunc getChainUnaryHandler(interceptors []UnaryServerInterceptor, curr int, info *UnaryServerInfo, finalHandler UnaryHandler) UnaryHandler {\n    if curr == len(interceptors)-1 {\n        return finalHandler\n    }\n\n    return func(ctx context.Context, req interface{}) (interface{}, error) {\n       // finalHandler\u5c31\u662fmosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler\n        return interceptors[curr+1](ctx, req, info, getChainUnaryHandler(interceptors, curr+1, info, finalHandler))\n    }\n}\n"})}),"\n",(0,o.jsx)(e.h3,{id:"0x04-layotto-\u53d1\u9001-rpc-\u8bf7\u6c42\u5e76\u5199\u5165-local-\u865a\u62df\u8fde\u63a5",children:"0x04 Layotto \u53d1\u9001 RPC \u8bf7\u6c42\u5e76\u5199\u5165 Local \u865a\u62df\u8fde\u63a5"}),"\n",(0,o.jsx)(e.p,{children:"\u63a5\u4e0a\u8ff0 0x03 \u6d41\u7a0b\uff0c\u4ece Runtime_InvokeService_Handler \u8d77\uff0c\u7531 GRPC \u9ed8\u8ba4 API \u8f6c\u6362\u4e3a Dapr API\uff0c\u8fdb\u5165 Layotto \u63d0\u4f9b\u7684\u5bf9\u63a5 Mosn \u7684\u8f7b\u91cf RPC \u6846\u67b6\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'mosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler at runtime.pb.go\n=>\nmosn.io/layotto/pkg/grpc/default_api.(*api).InvokeService at api.go\n=>\nmosn.io/layotto/pkg/grpc/dapr.(*daprGrpcAPI).InvokeService at dapr_api.go\n=>\nmosn.io/layotto/components/rpc/invoker/mosn.(*mosnInvoker).Invoke at mosninvoker.go\n// \u8bf7\u6c42 Mosn \u5e95\u5ea7\u548c\u8fd4\u56de\u54cd\u5e94\nfunc (m *mosnInvoker) Invoke(ctx context.Context, req *rpc.RPCRequest) (resp *rpc.RPCResponse, err error) {\n    defer func() {\n        if r := recover(); r != nil {\n            err = fmt.Errorf("[runtime][rpc]mosn invoker panic: %v", r)\n            log.DefaultLogger.Errorf("%v", err)\n        }\n    }()\n\n    // 1. \u5982\u679c\u8d85\u65f6\u65f6\u95f4\u4e3a 0\uff0c\u8bbe\u7f6e\u9ed8\u8ba4 3000ms \u8d85\u65f6\n    if req.Timeout == 0 {\n        req.Timeout = 3000\n    }\n    req.Ctx = ctx\n    log.DefaultLogger.Debugf("[runtime][rpc]request %+v", req)\n    // 2. \u89e6\u53d1\u8bf7\u6c42\u6267\u884c\u524d\u7684\u81ea\u5b9a\u4e49\u903b\u8f91\n    req, err = m.cb.BeforeInvoke(req)\n    if err != nil {\n        log.DefaultLogger.Errorf("[runtime][rpc]before filter error %s", err.Error())\n        return nil, err\n    }\n    // 3. \u6838\u5fc3\u8c03\u7528\uff0c\u4e0b\u6587\u4f1a\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\n    resp, err = m.channel.Do(req)\n    if err != nil {\n        log.DefaultLogger.Errorf("[runtime][rpc]error %s", err.Error())\n        return nil, err\n    }\n    resp.Ctx = req.Ctx\n    // 4. \u89e6\u53d1\u8bf7\u6c42\u8fd4\u56de\u540e\u7684\u81ea\u5b9a\u4e49\u903b\u8f91\n    resp, err = m.cb.AfterInvoke(resp)\n    if err != nil {\n        log.DefaultLogger.Errorf("[runtime][rpc]after filter error %s", err.Error())\n    }\n    return resp, err\n}\n=>\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*httpChannel).Do at httpchannel.go\nfunc (h *httpChannel) Do(req *rpc.RPCRequest) (*rpc.RPCResponse, error) {\n    // 1. \u4f7f\u7528\u4e0a\u4e00\u9636\u6bb5\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u8d85\u65f6\u8bbe\u7f6e context \u8d85\u65f6\n    timeout := time.Duration(req.Timeout) * time.Millisecond\n    ctx, cancel := context.WithTimeout(req.Ctx, timeout)\n    defer cancel()\n\n    // 2. \u521b\u5efa\u8fde\u63a5\u5f97\u5230\uff0c\u542f\u52a8 readloop \u534f\u7a0b\u8fdb\u884c Layotto \u548c Mosn \u7684\u8bfb\u5199\u4ea4\u4e92\uff08\u5177\u4f53\u89c1\u4e0b\u6587\u5206\u6790\uff09\n    conn, err := h.pool.Get(ctx)\n    if err != nil {\n        return nil, err\n    }\n    \n    // 3. \u8bbe\u7f6e\u6570\u636e\u5199\u5165\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4\n    hstate := conn.state.(*hstate)\n    deadline, _ := ctx.Deadline()\n    if err = conn.SetWriteDeadline(deadline); err != nil {\n        hstate.close()\n        h.pool.Put(conn, true)\n        return nil, common.Error(common.UnavailebleCode, err.Error())\n    }\n    // 4. \u56e0\u4e3a\u521d\u59cb\u5316\u65f6\u914d\u7f6e\u7684 Layotto \u4e0e Mosn \u4ea4\u4e92\u4f7f\u7528\u7684\u662f Http \u534f\u8bae\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u6784\u9020 Http \u8bf7\u6c42\n    httpReq := h.constructReq(req)\n    defer fasthttp.ReleaseRequest(httpReq)\n\n    // \u501f\u52a9 fasthttp \u8bf7\u6c42\u4f53\u5199\u5165\u865a\u62df\u8fde\u63a5\n    if _, err = httpReq.WriteTo(conn); err != nil {\n        hstate.close()\n        h.pool.Put(conn, true)\n        return nil, common.Error(common.UnavailebleCode, err.Error())\n    }\n\n    // 5. \u6784\u9020 fasthttp.Response \u7ed3\u6784\u4f53\u8bfb\u53d6\u548c\u89e3\u6790 hstate \u7684\u8fd4\u56de\uff0c\u5e76\u8bbe\u7f6e\u8bfb\u53d6\u8d85\u65f6\u65f6\u95f4\n    httpResp := &fasthttp.Response{}\n    hstate.reader.SetReadDeadline(deadline)\n\n    // \u5728 Mosn \u6570\u636e\u8fd4\u56de\u524d\u8fd9\u91cc\u4f1a\u963b\u585e\uff0creadloop \u534f\u7a0b\u8bfb\u53d6 Mosn \u8fd4\u56de\u7684\u6570\u636e\u4e4b\u540e\u6d41\u7a0b\u89c1\u4e0b\u8ff0 0x08 \u9636\u6bb5\n    if err = httpResp.Read(bufio.NewReader(hstate.reader)); err != nil {\n        hstate.close()\n        h.pool.Put(conn, true)\n        return nil, common.Error(common.UnavailebleCode, err.Error())\n    }\n    h.pool.Put(conn, false)\n    ...\n}\n=>\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*connPool).Get at connpool.go\n// Get is get wrapConn by context.Context\nfunc (p *connPool) Get(ctx context.Context) (*wrapConn, error) {\n    if err := p.waitTurn(ctx); err != nil {\n        return nil, err\n    }\n\n    p.mu.Lock()\n    // 1. \u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\u8fde\u63a5\n    if ele := p.free.Front(); ele != nil {\n        p.free.Remove(ele)\n        p.mu.Unlock()\n        wc := ele.Value.(*wrapConn)\n        if !wc.isClose() {\n            return wc, nil\n        }\n    } else {\n        p.mu.Unlock()\n    }\n\n    // 2. \u521b\u5efa\u65b0\u7684\u8fde\u63a5\n    c, err := p.dialFunc()\n    if err != nil {\n        p.freeTurn()\n        return nil, err\n    }\n    wc := &wrapConn{Conn: c}\n    if p.stateFunc != nil {\n        wc.state = p.stateFunc()\n    }\n    // 3. \u542f\u52a8 readloop \u72ec\u7acb\u534f\u7a0b\u8bfb\u53d6 Mosn \u8fd4\u56de\u7684\u6570\u636e\n    if p.onDataFunc != nil {\n        utils.GoWithRecover(func() {\n            p.readloop(wc)\n        }, nil)\n    }\n    return wc, nil\n}\n=>\n'})}),"\n",(0,o.jsx)(e.p,{children:"\u4e0a\u9762\u7b2c\u4e8c\u6b65\u521b\u5efa\u65b0\u7684\u8fde\u63a5\u9700\u8981\u6ce8\u610f\u4e0b\uff0c\u662f\u8c03\u7528\u4e86 init \u9636\u6bb5\u7684 RegistChannel \u521d\u59cb\u5316\u7684\u534f\u8bae\u4e2d\u7684 dialFunc func() (net.Conn, error)\uff0c\u56e0\u4e3a\u914d\u7f6e\u91cc\u4e0e Mosn \u4ea4\u4e92\u7528\u7684\u662f Http \u534f\u8bae\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f newHttpChanel\uff0c\u76ee\u524d\u8fd8\u652f\u6301 Bolt\uff0cDubbo \u7b49\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'mosn.io/layotto/components/rpc/invoker/mosn/channel.newHttpChannel at httpchannel.go\n// newHttpChannel is used to create rpc.Channel according to ChannelConfig\nfunc newHttpChannel(config ChannelConfig) (rpc.Channel, error) {\n    hc := &httpChannel{}\n    // \u4e3a\u51cf\u5c11\u8fde\u63a5\u521b\u5efa\u5f00\u9500\u7684\u8fde\u63a5\u6c60\uff0c\u5b9a\u4e49\u5728 mosn.io/layotto/components/rpc/invoker/mosn/channel/connpool.go\n    hc.pool = newConnPool(\n        config.Size,\n        // dialFunc\n        func() (net.Conn, error) {\n            _, _, err := net.SplitHostPort(config.Listener)\n            if err == nil {\n                return net.Dial("tcp", config.Listener)\n            }\n           //\u521b\u5efa\u4e00\u5bf9\u865a\u62df\u8fde\u63a5(net.Pipe)\uff0cLayotto \u6301\u6709 local\uff0cMosn \u6301\u6709 remote, Layotto \u5411 local \u5199\u5165\uff0cMosn \u4f1a\u6536\u5230\u6570\u636e, Mosn \u4ece remote\u8bfb\u53d6\uff0c\u6267\u884c filter \u903b\u8f91\u5e76\u8fdb\u884c\u4ee3\u7406\u8f6c\u53d1\uff0c\u518d\u5c06\u54cd\u5e94\u5199\u5230 remote ,\u6700\u540e Layotto \u4ece remote \u8bfb\u53d6\uff0c\u83b7\u5f97\u54cd\u5e94\n            local, remote := net.Pipe()\n            localTcpConn := &fakeTcpConn{c: local}\n            remoteTcpConn := &fakeTcpConn{c: remote}\n           // acceptFunc \u662f\u5b9a\u4e49\u5728 mosn.io/layotto/components/rpc/invoker/mosn/channel.go \u4e2d\u7684\u95ed\u5305\uff0c\u95ed\u5305\u4e2d\u76d1\u542c\u4e86 remote \u865a\u62df\u8fde\u63a5\n            if err := acceptFunc(remoteTcpConn, config.Listener); err != nil {\n                return nil, err\n            }\n            // the goroutine model is:\n            // request goroutine ---\x3e  localTcpConn ---\x3e mosn\n            //        ^                                        |\n            //        |                                        |\n            //        |                                        |\n            //         hstate <-- readloop goroutine     <------\n            return localTcpConn, nil\n        },\n        // stateFunc\n        func() interface{} {\n            // hstate \u662f readloop \u534f\u7a0b\u4e0e request \u534f\u7a0b\u901a\u4fe1\u7684\u7ba1\u9053\uff0c\u662f\u4e00\u5bf9\u8bfb\u5199 net.Conn\uff0c\u8bf7\u6c42\u534f\u7a0b\u4ece reader net.Conn \u4e2d\u8bfb\u6570\u636e\uff0creadloop \u534f\u7a0b\u5e8f\u5f80 writer net.Conn \u5199\u6570\u636e\n            s := &hstate{}\n            s.reader, s.writer = net.Pipe()\n            return s\n        },\n        hc.onData,\n        hc.cleanup,\n    )\n    return hc, nil\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x05-mosn-\u8bfb\u53d6-remote-\u5e76\u6267\u884c-filter-\u548c\u4ee3\u7406\u8f6c\u53d1",children:"0x05 Mosn \u8bfb\u53d6 Remote \u5e76\u6267\u884c Filter \u548c\u4ee3\u7406\u8f6c\u53d1"}),"\n",(0,o.jsx)(e.p,{children:"(1) \u4e0e 0x02 \u7c7b\u4f3c\uff0cfiltermanager \u6267\u884c\u8fc7\u6ee4\u5668\u5904\u7406\u9636\u6bb5\uff0c\u8fd9\u91cc\u4f1a\u5230 proxy \u4e2d\u8fdb\u884c\u4ee3\u7406\u8f6c\u53d1\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"...\nmosn.io/mosn/pkg/network.(*filterManager).onContinueReading at filtermanager.go\n=>\nmosn.io/mosn/pkg/proxy.(*proxy).OnData at proxy.go\nfunc (p *proxy) OnData(buf buffer.IoBuffer) api.FilterStatus {\n    if p.fallback {\n        return api.Continue\n    }\n\n    if p.serverStreamConn == nil {\n        ...\n        p.serverStreamConn = stream.CreateServerStreamConnection(p.context, proto, p.readCallbacks.Connection(), p)\n    }\n    //\u628a\u6570\u636e\u5206\u53d1\u5230\u5bf9\u5e94\u534f\u8bae\u7684\u89e3\u7801\u5668\uff0c\u5728\u8fd9\u91cc\u56e0\u4e3a\u662f POST /org.apache.dubbo.samples.UserProvider HTTP/1.1\uff0c\u6240\u4ee5\u662f mosn.io/mosn/pkg/stream/http.(*serverStreamConnection).serve at stream.go\n    p.serverStreamConn.Dispatch(buf)\n\n    return api.Stop\n}\n=>\n"})}),"\n",(0,o.jsx)(e.p,{children:"(2) serverStreamConnection.serve \u76d1\u542c\u5e76\u5904\u7406\u8bf7\u6c42\u5230 downstream OnReceive\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"mosn.io/mosn/pkg/stream/http.(*serverStream).handleRequest at stream.go\nfunc (s *serverStream) handleRequest(ctx context.Context) {\n    if s.request != nil {\n        // set non-header info in request-line, like method, uri\n        injectCtxVarFromProtocolHeaders(ctx, s.header, s.request.URI())\n        hasData := true\n        if len(s.request.Body()) == 0 {\n            hasData = false\n        }\n\n        if hasData {\n           //\u5728\u6b64\u8fdb\u5165 downstream OnReceive\n            s.receiver.OnReceive(s.ctx, s.header, buffer.NewIoBufferBytes(s.request.Body()), nil)\n        } else {\n            s.receiver.OnReceive(s.ctx, s.header, nil, nil)\n        }\n    }\n}\n=>\nmosn.io/mosn/pkg/proxy.(*downStream).OnReceive at downstream.go\nfunc (s *downStream) OnReceive(ctx context.Context, headers types.HeaderMap, data types.IoBuffer, trailers types.HeaderMap) {\n    ...\n    var task = func() {\n        ...\n\n        phase := types.InitPhase\n        for i := 0; i < 10; i++ {\n            s.cleanNotify()\n\n            phase = s.receive(s.context, id, phase)\n            ...\n            }\n        }\n    }\n\n    if s.proxy.serverStreamConn.EnableWorkerPool() {\n        if s.proxy.workerpool != nil {\n            // use the worker pool for current proxy\n            s.proxy.workerpool.Schedule(task)\n        } else {\n            // use the global shared worker pool\n            pool.ScheduleAuto(task)\n        }\n        return\n    }\n\n    task()\n    return\n\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:"(3) \u4e0a\u8ff0 ScheduleAuto \u8c03\u5ea6\u540e\uff0c\u7ecf\u8fc7 downStream \u7684 reveive \u7684\u5404\u4e2a\u9636\u6bb5\u5904\u7406\uff0c\u7ecf\u8fc7 upstreamRequest\u3001http clientStream \u7b49\u5904\u7406\uff0c\u6700\u7ec8\u4ece\u7f51\u7edc\u5c42\u7684 connection.Write \u53d1\u9001\u6570\u636e\u5e76\u8fdb\u5165 WaitNotify \u9636\u6bb5\u963b\u585e\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'mosn.io/mosn/pkg/sync.(*workerPool).ScheduleAuto at workerpool.go\n=>\nmosn.io/mosn/pkg/sync.(*workerPool).spawnWorker at workerpool.go\n=>\nmosn.io/mosn/pkg/proxy.(*downStream).receive at downstream.go\n=>\nInitPhase=>DownFilter=>MatchRoute=>DownFilterAfterRoute=>ChooseHost=>DownFilterAfterChooseHost=>DownRecvHeader=>DownRecvData\n=>\nmosn.io/mosn/pkg/proxy.(*downStream).receiveData at downstream.go\n=>\nmosn.io/mosn/pkg/proxy.(*upstreamRequest).appendData at upstream.go\n=>\nmosn.io/mosn/pkg/stream/http.(*clientStream).doSend at stream.go\n=>\ngithub.com/valyala/fasthttp.(*Request).WriteTo at http.go\n=>\nmosn.io/mosn/pkg/stream/http.(*streamConnection).Write at stream.go\n>\nmosn.io/mosn/pkg/network.(*connection).Write at connection.go\n=>\nmosn.io/mosn/pkg/proxy.(*downStream).receive at downstream.go\nfunc (s *downStream) receive(ctx context.Context, id uint32, phase types.Phase) types.Phase {\n    for i := 0; i <= int(types.End-types.InitPhase); i++ {\n        s.phase = phase\n        \n        switch phase {\n        ...\n        case types.WaitNotify:\n            s.printPhaseInfo(phase, id)\n            if p, err := s.waitNotify(id); err != nil {\n                return p\n            }\n        \n            if log.Proxy.GetLogLevel() >= log.DEBUG {\n            \tlog.Proxy.Debugf(s.context, "[proxy] [downstream] OnReceive send downstream response %+v", s.downstreamRespHeaders)\n            }\n        ...\n} \n=>\nfunc (s *downStream) waitNotify(id uint32) (phase types.Phase, err error) {\n    if atomic.LoadUint32(&s.ID) != id {\n        return types.End, types.ErrExit\n    }\n\n\tif log.Proxy.GetLogLevel() >= log.DEBUG {\n\t\tlog.Proxy.Debugf(s.context, "[proxy] [downstream] waitNotify begin %p, proxyId = %d", s, s.ID)\n\t}\n\tselect {\n\t// \u963b\u585e\u7b49\u5f85\n\tcase <-s.notify:\n\t}\n\treturn s.processError(id)\n}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x06-dubbo-go-sample-server-\u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94",children:"0x06 Dubbo-go-sample server \u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94"}),"\n",(0,o.jsx)(e.p,{children:"\u8fd9\u91cc\u5c31\u662f dubbo-go-sample server\u7684\u5904\u7406\uff0c\u6682\u4e0d\u5c55\u5f00\uff0c\u8d34\u4e0b\u65e5\u5fd7\u4fe1\u606f\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u56de\u53bb\u7ffb\u770b\u6e90\u7801\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'[2022-04-18/21:03:18 github.com/apache/dubbo-go-samples/rpc/jsonrpc/go-server/pkg.(*UserProvider2).GetUser: user_provider2.go: 53] userID:"A003"\n[2022-04-18/21:03:18 github.com/apache/dubbo-go-samples/rpc/jsonrpc/go-server/pkg.(*UserProvider2).GetUser: user_provider2.go: 56] rsp:&pkg.User{ID:"113", Name:"Moorse", Age:30, sex:0, Birth:703394193, Sex:"MAN"}\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x07-mosn-\u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de-remote-\u865a\u62df\u8fde\u63a5",children:"0x07 Mosn \u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de Remote \u865a\u62df\u8fde\u63a5"}),"\n",(0,o.jsx)(e.p,{children:"\u63a5\u4e0a\u8ff0 0x05 \u7b2c\u4e09\u9636\u6bb5\uff0c\u5728 reveive \u7684\u5faa\u73af\u9636\u6bb5\u7684 UpRecvData \u9636\u6bb5\u8fdb\u5165\u5904\u7406\u54cd\u5e94\u903b\u8f91\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u5904\u7406\u6700\u7ec8 Response \u5199\u56de 0x04 \u4e2d\u7684 remote \u865a\u62df\u8fde\u63a5\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'mosn.io/mosn/pkg/proxy.(*downStream).receive at downstream.go\nfunc (s *downStream) waitNotify(id uint32) (phase types.Phase, err error) {\n    if atomic.LoadUint32(&s.ID) != id {\n        return types.End, types.ErrExit\n    }\n    \n    if log.Proxy.GetLogLevel() >= log.DEBUG {\n        log.Proxy.Debugf(s.context, "[proxy] [downstream] waitNotify begin %p, proxyId = %d", s, s.ID)\n    }\n    // \u8fd4\u56de\u54cd\u5e94\n    select {\n    case <-s.notify:\n    }\n    return s.processError(id)\n}\n=>\nUpFilter\n=>\nUpRecvHeader\n=>\nfunc (s *downStream) receive(ctx context.Context, id uint32, phase types.Phase) types.Phase {\n    for i := 0; i <= int(types.End-types.InitPhase); i++ {\n        s.phase = phase\n\n        switch phase {\n        ...\n        case types.UpRecvData:\n            if s.downstreamRespDataBuf != nil {\n            \ts.printPhaseInfo(phase, id)\n            \ts.upstreamRequest.receiveData(s.downstreamRespTrailers == nil)\n                if p, err := s.processError(id); err != nil {\n              \t   return p\n              }\n           }\n        ...\n}\n=>\nmosn.io/mosn/pkg/proxy.(*upstreamRequest).receiveData at upstream.go\n=>\nmosn.io/mosn/pkg/proxy.(*downStream).onUpstreamData at downstream.go\n=>\nmosn.io/mosn/pkg/proxy.(*downStream).appendData at downstream.go\n=>\nmosn.io/mosn/pkg/stream/http.(*serverStream).AppendData at stream.go\n=>\nmosn.io/mosn/pkg/stream/http.(*serverStream).endStream at stream.go\n=>\nmosn.io/mosn/pkg/stream/http.(*serverStream).doSend at stream.go\n=>\ngithub.com/valyala/fasthttp.(*Response).WriteTo at http.go\n=>\ngithub.com/valyala/fasthttp.writeBufio at http.go\n=>\ngithub.com/valyala/fasthttp.(*statsWriter).Write at http.go\n=>\nmosn.io/mosn/pkg/stream/http.(*streamConnection).Write at stream.go\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x08-layotto-\u63a5\u6536-rpc-\u54cd\u5e94\u5e76\u8bfb\u53d6-local-\u865a\u62df\u8fde\u63a5",children:"0x08 Layotto \u63a5\u6536 RPC \u54cd\u5e94\u5e76\u8bfb\u53d6 Local \u865a\u62df\u8fde\u63a5"}),"\n",(0,o.jsx)(e.p,{children:"\u4e0a\u8ff0 0x04 \u542f\u52a8\u7684 readloop \u534f\u7a0b\u8bfbIO\u88ab\u6fc0\u6d3b\uff0c\u4ece\u8fde\u63a5\u8bfb\u53d6\u6570Mosn \u4f20\u56de\u7684\u6570\u636e\uff0c\u7136\u540e\u4ea4\u7ed9 hstate \u7ba1\u9053\u4e2d\u8f6c\u5904\u7406\u518d\u8fd4\u56de\u7ed9\u8bf7\u6c42\u534f\u7a0b\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'mosn.io/layotto/components/rpc/invoker/mosn/channel.(*connPool).readloop at connpool.go\n// readloop is loop to read connected then exec onDataFunc\nfunc (p *connPool) readloop(c *wrapConn) {\n    var err error\n\n    defer func() {\n        c.close()\n        if p.cleanupFunc != nil {\n            p.cleanupFunc(c, err)\n        }\n    }()\n\n    c.buf = buffer.NewIoBuffer(defaultBufSize)\n    for {\n        // \u4ece\u8fde\u63a5\u8bfb\u53d6\u6570\u636e\n        n, readErr := c.buf.ReadOnce(c)\n        if readErr != nil {\n            err = readErr\n            if readErr == io.EOF {\n                log.DefaultLogger.Debugf("[runtime][rpc]connpool readloop err: %s", readErr.Error())\n            } else {\n                log.DefaultLogger.Errorf("[runtime][rpc]connpool readloop err: %s", readErr.Error())\n            }\n        }\n\n        if n > 0 {\n            // \u5728onDataFunc \u59d4\u6258\u7ed9 hstate \u5904\u7406\u6570\u636e\n            if onDataErr := p.onDataFunc(c); onDataErr != nil {\n                err = onDataErr\n                log.DefaultLogger.Errorf("[runtime][rpc]connpool onData err: %s", onDataErr.Error())\n            }\n        }\n\n        if err != nil {\n            break\n        }\n\n        if c.buf != nil && c.buf.Len() == 0 && c.buf.Cap() > maxBufSize {\n            c.buf.Free()\n            c.buf.Alloc(defaultBufSize)\n        }\n    }\n}\n=>\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*httpChannel).onData at httpchannel.go\n=>\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*hstate).onData at httpchannel.go\n=>\nnet.(*pipe).Write at pipe.go\n=>\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*httpChannel).Do at httpchannel.go\nfunc (h *httpChannel) Do(req *rpc.RPCRequest) (*rpc.RPCResponse, error) {\n    ...\n    // \u63a5\u4e0a\u8ff00x04\u9636\u6bb5\uff0cmosn \u6570\u636e\u8fd4\u56de\u540e\uff0c\u4ece hstate \u8bfb\u53d6 readloop \u534f\u7a0b\u4ece mosn \u8fd4\u56de\u7684\u6570\u636e\n    if err = httpResp.Read(bufio.NewReader(hstate.reader)); err != nil {\n        hstate.close()\n        h.pool.Put(conn, true)\n        return nil, common.Error(common.UnavailebleCode, err.Error())\n    }\n    h.pool.Put(conn, false)\n\n    // \u83b7\u53d6 fasthttp \u7684\u6570\u636e\u90e8\u5206\uff0c\u89e3\u6790\u72b6\u6001\u7801\uff0c\u5931\u8d25\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u548c\u72b6\u6001\u7801\n    body := httpResp.Body()\n    if httpResp.StatusCode() != http.StatusOK {\n        return nil, common.Errorf(common.UnavailebleCode, "http response code %d, body: %s", httpResp.StatusCode(), string(body))\n    }\n    \n    // 6. \u5c06\u7ed3\u679c\u8f6c\u6362\u4e3a rpc.RPCResponse \u8fd4\u56de\n    rpcResp := &rpc.RPCResponse{\n        ContentType: string(httpResp.Header.ContentType()),\n        Data:        body,\n        Header:      map[string][]string{},\n    }\n    httpResp.Header.VisitAll(func(key, value []byte) {\n        rpcResp.Header[string(key)] = []string{string(value)}\n    })\n    return rpcResp, nil\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x09-grpc-sever-\u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef",children:"0x09 Grpc Sever \u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef"}),"\n",(0,o.jsx)(e.p,{children:"Grpc \u5e76\u6ca1\u6709\u76f4\u63a5\u5199\u5165\u6570\u636e\u5230\u8fde\u63a5\uff0c\u800c\u662f\u7528\u534f\u7a0b\u5f02\u6b65 loop \u5faa\u73af\u4ece\u4e00\u4e2a\u7f13\u5b58\u7ed3\u6784\u91cc\u9762\u83b7\u53d6\u5e27\u7136\u540e\u5199\u56de\u5230\u5ba2\u6237\u7aef\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:'google.golang.org/grpc/internal/transport.NewServerTransport at http2_server.go\nfunc NewServerTransport(conn net.Conn, config *ServerConfig) (_ ServerTransport, err error) {\n    ...\n    // \u534f\u7a0b\u5f02\u6b65loop\u5faa\u73af\n    go func() {\n        t.loopy = newLoopyWriter(serverSide, t.framer, t.controlBuf, t.bdpEst)\n        t.loopy.ssGoAwayHandler = t.outgoingGoAwayHandler\n        if err := t.loopy.run(); err != nil {\n            if logger.V(logLevel) {\n                logger.Errorf("transport: loopyWriter.run returning. Err: %v", err)\n            }\n        }\n        t.conn.Close()\n        t.controlBuf.finish()\n        close(t.writerDone)\n    }()\n    go t.keepalive()\n    return t, nil\n}\n=>\ngoogle.golang.org/grpc/internal/transport.(*loopyWriter).run at controlbuf.go\n=>\ngoogle.golang.org/grpc/internal/transport.(*bufWriter).Flush at http_util.go\n=>\nmosn.io/mosn/pkg/filter/network/grpc.(*Connection).Write at conn.go\n=>\nmosn.io/mosn/pkg/network.(*connection).Write at connection.go\n=>\nmosn.io/mosn/pkg/network.(*connection).writeDirectly at connection.go\n=>\nmosn.io/mosn/pkg/network.(*connection).doWrite at connection.go\n'})}),"\n",(0,o.jsx)(e.h3,{id:"0x10-dubbo-go-sample-client-\u63a5\u6536\u54cd\u5e94",children:"0x10 dubbo-go-sample client \u63a5\u6536\u54cd\u5e94"}),"\n",(0,o.jsx)(e.p,{children:"\u63a5\u4e0a\u8ff0 0x01 \u53d1\u9001\u6570\u636e\u4e4b\u540e\u4f1a\u963b\u585e\u5728 Client grpc \u5e95\u5c42\u8bfbIO\u4e2d, Layotto\u7ecf\u8fc7\u4e0a\u8ff0\u4e00\u4e9b\u5217\u5904\u7406\u5c42\u5c42\u8fd4\u56de\u6570\u636e\u6fc0\u6d3bClient\u5e95\u5c42Read IO\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-go",children:"google.golang.org/grpc.(*ClientConn).Invoke at call.go\n=>\ngoogle.golang.org/grpc.(*ClientConn).Invoke at call.go\n=>\ngoogle.golang.org/grpc.(*clientStream).RecvMsg at stream.go\n=>\ngoogle.golang.org/grpc.(*clientStream).withRetry at stream.go\n=>\ngoogle.golang.org/grpc.(*csAttempt).recvMsg at stream.go\n=>\ngoogle.golang.org/grpc.recvAndDecompress at rpc_util.go\n=>\ngoogle.golang.org/grpc.recv at rpc_util.go\n=>\ngoogle.golang.org/grpc.(*parser).recvMsg at rpc_util.go\n=>\ngoogle.golang.org/grpc.(*csAttempt).recvMsg at stream.go\nfunc (p *parser) recvMsg(maxReceiveMessageSize int) (pf payloadFormat, msg []byte, err error) {\n    if _, err := p.r.Read(p.header[:]); err != nil {\n        return 0, nil, err\n    }\n    ...\n}\n"})}),"\n",(0,o.jsx)(e.p,{children:"\u6700\u7ec8\u6536\u5230\u8fd4\u56de\u6570\u636e\uff1a"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{"jsonrpc":"2.0","id":9527,"result":{"id":"113","name":"Moorse","age":30,"time":703394193,"sex":"MAN"}}\n'})}),"\n",(0,o.jsx)(e.h2,{id:"\u603b\u7ed3",children:"\u603b\u7ed3"}),"\n",(0,o.jsxs)(e.p,{children:["Layotto RPC \u5904\u7406\u6d41\u7a0b\u6d89\u53ca GRPC\u3001Dapr\u3001Mosn \u7b49\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u6574\u4f53\u6d41\u7a0b\u8f83\u957f\uff0c\u4e0d\u8fc7\u5355\u7eaf\u770b Layotto \u9488\u5bf9 Mosn \u62bd\u8c61\u7684\u8f7b\u91cf RPC \u6846\u67b6\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u548c\u7b80\u5355\u7684\uff0c\u4e0e Mosn \u96c6\u6210\u7684\u65b9\u5f0f\u4e5f\u6bd4\u8f83\u65b0\u9896\uff0c\u503c\u5f97\u8fdb\u4e00\u6b65\u7814\u8bfb\u3002\u81f3\u6b64 Layotto RPC \u8bf7\u6c42\u5904\u7406\u5c31\u5206\u6790\u5b8c\u4e86\uff0c\u65f6\u95f4\u6709\u9650\uff0c\u6ca1\u6709\u8fdb\u884c\u4e00\u4e9b\u66f4\u5168\u9762\u548c\u6df1\u5165\u7684\u5256\u6790\uff0c\u5982\u6709\u7eb0\u6f0f\u4e4b\u5904\uff0c\u6b22\u8fce\u6307\u6b63\uff0c\u8054\u7cfb\u65b9\u5f0f\uff1a",(0,o.jsx)(e.a,{href:"mailto:rayo.wangzl@gmail.com",children:"rayo.wangzl@gmail.com"}),"\u3002\u53e6\u5916\u5728\u6b64\u4e5f\u5e0c\u671b\u5927\u5bb6\u80fd\u8e0a\u8dc3\u53c2\u4e0e\u6e90\u7801\u5206\u6790\u548c\u5f00\u6e90\u793e\u533a\u6765\uff0c\u4e00\u8d77\u5b66\u4e60\uff0c\u5171\u540c\u8fdb\u6b65\u3002"]})]})}function g(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(p,{...n})}):p(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>s,x:()=>i});var o=r(6540);const t={},a=o.createContext(t);function s(n){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:s(n.components),o.createElement(a.Provider,{value:e},n.children)}}}]);