"use strict";(self.webpackChunklayotto_docusaurus=self.webpackChunklayotto_docusaurus||[]).push([[7901],{6032:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/exploration-and-practice-of-antcloud-native-application-runtime-archsummit-shanghai","metadata":{"permalink":"/layotto/blog/exploration-and-practice-of-antcloud-native-application-runtime-archsummit-shanghai","editUrl":"https://github.com/mosn/layotto/edit/main/docs/blog/exploration-and-practice-of-antcloud-native-application-runtime-archsummit-shanghai.md","source":"@site/blog/exploration-and-practice-of-antcloud-native-application-runtime-archsummit-shanghai.md","title":"\u8682\u8681\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u7684\u63a2\u7d22\u548c\u5b9e\u8df5 - ArchSummit \u4e0a\u6d77","description":"Mesh \u6a21\u5f0f\u7684\u5f15\u5165\u662f\u5b9e\u73b0\u5e94\u7528\u4e91\u539f\u751f\u7684\u5173\u952e\u8def\u5f84\uff0c\u8682\u8681\u96c6\u56e2\u5df2\u5728\u5185\u90e8\u5b9e\u73b0\u5927\u89c4\u6a21\u843d\u5730\u3002\u968f\u7740 Message\u3001DB\u3001Cache Mesh \u7b49\u66f4\u591a\u7684\u4e2d\u95f4\u4ef6\u80fd\u529b\u7684\u4e0b\u6c89\uff0c\u4ece Mesh \u6f14\u8fdb\u800c\u6765\u7684\u5e94\u7528\u8fd0\u884c\u65f6\u5c06\u662f\u4e2d\u95f4\u4ef6\u6280\u672f\u7684\u672a\u6765\u5f62\u6001\u3002\u5e94\u7528\u8fd0\u884c\u65f6\u65e8\u5728\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u7684\u6784\u5efa\u4e91\u539f\u751f\u5e94\u7528\uff0c\u5e2e\u52a9\u5e94\u7528\u548c\u57fa\u7840\u8bbe\u65bd\u8fdb\u4e00\u6b65\u89e3\u8026\uff0c\u800c\u5e94\u7528\u8fd0\u884c\u65f6\u6700\u6838\u5fc3\u662f API \u6807\u51c6\uff0c\u671f\u671b\u793e\u533a\u4e00\u8d77\u5171\u5efa\u3002","date":"2024-07-10T10:04:20.000Z","tags":[],"readingTime":21.32,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"nextItem":{"title":"\u6e90\u7801\u89e3\u6790 4\u5c42\u6d41\u91cf\u6cbb\u7406\uff0ctcp\u6d41\u91cfdump","permalink":"/layotto/blog/tcpcopy_code_analyze"}},"content":">Mesh \u6a21\u5f0f\u7684\u5f15\u5165\u662f\u5b9e\u73b0\u5e94\u7528\u4e91\u539f\u751f\u7684\u5173\u952e\u8def\u5f84\uff0c\u8682\u8681\u96c6\u56e2\u5df2\u5728\u5185\u90e8\u5b9e\u73b0\u5927\u89c4\u6a21\u843d\u5730\u3002\u968f\u7740 Message\u3001DB\u3001Cache Mesh \u7b49\u66f4\u591a\u7684\u4e2d\u95f4\u4ef6\u80fd\u529b\u7684\u4e0b\u6c89\uff0c\u4ece Mesh \u6f14\u8fdb\u800c\u6765\u7684\u5e94\u7528\u8fd0\u884c\u65f6\u5c06\u662f\u4e2d\u95f4\u4ef6\u6280\u672f\u7684\u672a\u6765\u5f62\u6001\u3002\u5e94\u7528\u8fd0\u884c\u65f6\u65e8\u5728\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u7684\u6784\u5efa\u4e91\u539f\u751f\u5e94\u7528\uff0c\u5e2e\u52a9\u5e94\u7528\u548c\u57fa\u7840\u8bbe\u65bd\u8fdb\u4e00\u6b65\u89e3\u8026\uff0c\u800c\u5e94\u7528\u8fd0\u884c\u65f6\u6700\u6838\u5fc3\u662f API \u6807\u51c6\uff0c\u671f\u671b\u793e\u533a\u4e00\u8d77\u5171\u5efa\u3002\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*nergRo8-RI0AAAAAAAAAAAAAARQnAQ)\\n## \u8682\u8681\u96c6\u56e2 Mesh \u5316\u4ecb\u7ecd\\n\\n\u8682\u8681\u662f\u4e00\u5bb6\u6280\u672f\u548c\u521b\u65b0\u9a71\u52a8\u7684\u516c\u53f8\uff0c\u4ece\u6700\u65e9\u6dd8\u5b9d\u91cc\u7684\u4e00\u4e2a\u652f\u4ed8\u5e94\u7528\uff0c\u5230\u73b0\u5728\u670d\u52a1\\n\u5168\u7403\u5341\u4e8c\u4ebf\u7528\u6237\u7684\u5927\u578b\u516c\u53f8\uff0c\u8682\u8681\u7684\u6280\u672f\u67b6\u6784\u6f14\u8fdb\u5927\u6982\u4f1a\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u9636\u6bb5\uff1a\\n\\n2006 \u4e4b\u524d\uff0c\u6700\u65e9\u7684\u652f\u4ed8\u5b9d\u5c31\u662f\u4e00\u4e2a\u96c6\u4e2d\u5f0f\u7684\u5355\u4f53\u5e94\u7528\uff0c\u4e0d\u540c\u7684\u4e1a\u52a1\u505a\u4e86\u6a21\u5757\u5316\u7684\u5f00\u53d1\u3002\\n\\n2007 \u5e74\u7684\u65f6\u5019\uff0c\u968f\u7740\u66f4\u591a\u573a\u666f\u652f\u4ed8\u7684\u63a8\u5e7f\uff0c\u5f00\u59cb\u505a\u4e86\u4e00\u4e0b\u5e94\u7528\u3001\u6570\u636e\u7684\u62c6\u5206\uff0c\u505a\u4e86 SOA \u5316\u7684\u4e00\u4e9b\u6539\u9020\u3002\\n\\n2010 \u5e74\u4e4b\u540e\uff0c\u63a8\u51fa\u4e86\u5feb\u6377\u652f\u4ed8\uff0c\u79fb\u52a8\u652f\u4ed8\uff0c\u652f\u6491\u53cc\u5341\u4e00\uff0c\u8fd8\u6709\u4f59\u989d\u5b9d\u7b49\u73b0\u8c61\u7ea7\u4ea7\u54c1\uff0c\u7528\u6237\u6570\u5230\u4e86\u4ebf\u8fd9\u4e2a\u7ea7\u522b\uff0c\u8682\u8681\u7684\u5e94\u7528\u6570\u4e5f\u6570\u91cf\u7ea7\u7684\u589e\u957f\uff0c\u8682\u8681\u81ea\u7814\u4e86\u5f88\u591a\u5168\u5957\u7684\u5fae\u670d\u52a1\u4e2d\u95f4\u4ef6\u53bb\u652f\u6491\u8682\u8681\u7684\u4e1a\u52a1\uff1b\\n\\n2014 \u5e74\uff0c\u50cf\u501f\u5457\u82b1\u5457\u3001\u7ebf\u4e0b\u652f\u4ed8\u3001\u66f4\u591a\u573a\u666f\u66f4\u591a\u4e1a\u52a1\u5f62\u6001\u7684\u51fa\u73b0\uff0c\u5bf9\u8682\u8681\u7684\u53ef\u7528\u6027\u548c\u7a33\u5b9a\u6027\u63d0\u51fa\u66f4\u9ad8\u7684\u8981\u6c42\uff0c\u8682\u8681\u5bf9\u5fae\u670d\u52a1\u4e2d\u95f4\u4ef6\u8fdb\u884c\u4e86 LDC \u5355\u5143\u5316\u7684\u652f\u6301\uff0c\u652f\u6491\u4e1a\u52a1\u7684\u5f02\u5730\u591a\u6d3b\uff0c\u4ee5\u53ca\u4e3a\u4e86\u652f\u6491\u53cc\u5341\u4e00\u8d85\u5927\u6d41\u91cf\u7684\u6df7\u5408\u4e91\u4e0a\u7684\u5f39\u6027\u6269\u7f29\u5bb9\u3002\\n\\n2018 \u5e74\uff0c\u8682\u8681\u7684\u4e1a\u52a1\u4e0d\u4ec5\u4ec5\u662f\u6570\u5b57\u91d1\u878d\uff0c\u8fd8\u6709\u6570\u5b57\u751f\u6d3b\u3001\u56fd\u9645\u5316\u7b49\u4e00\u4e9b\u65b0\u6218\u7565\u7684\u51fa\u73b0\uff0c\u4fc3\u4f7f\u6211\u4eec\u8981\u6709\u66f4\u52a0\u9ad8\u6548\u7684\u6280\u672f\u67b6\u6784\u80fd\u8ba9\u4e1a\u52a1\u8dd1\u5f97\u66f4\u5feb\u66f4\u7a33\uff0c\u6240\u4ee5\u8682\u8681\u7ed3\u5408\u4e1a\u754c\u6bd4\u8f83\u6d41\u884c\u7684\u4e91\u539f\u751f\u7684\u7406\u5ff5\uff0c\u5728\u5185\u90e8\u8fdb\u884c\u4e86 Service Mesh\u3001Serverless\u3001\u53ef\u4fe1\u539f\u751f\u65b9\u5411\u7684\u4e00\u4e9b\u843d\u5730\u3002\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*KCSVTZWSf8wAAAAAAAAAAAAAARQnAQ)\\n\\n\u53ef\u4ee5\u770b\u5230\u8682\u8681\u7684\u6280\u672f\u67b6\u6784\u4e5f\u662f\u8ddf\u968f\u516c\u53f8\u7684\u4e1a\u52a1\u521b\u65b0\u4e0d\u65ad\u6f14\u8fdb\u7684\uff0c\u524d\u9762\u7684\u4ece\u96c6\u4e2d\u5f0f\u5230 SOA \u518d\u5230\u5fae\u670d\u52a1\u7684\u8fc7\u7a0b\uff0c\u76f8\u4fe1\u641e\u8fc7\u5fae\u670d\u52a1\u7684\u540c\u5b66\u90fd\u6df1\u6709\u4f53\u4f1a\uff0c\u800c\u4ece\u5fae\u670d\u52a1\u5230\u4e91\u539f\u751f\u7684\u5b9e\u8df5\u662f\u8682\u8681\u8fd1\u51e0\u5e74\u81ea\u5df1\u63a2\u7d22\u51fa\u6765\u7684\u3002\\n\\n## \u4e3a\u4ec0\u4e48\u8981\u5f15\u5165 Service Mesh\\n\\n\u8682\u8681\u65e2\u7136\u6709\u4e00\u5957\u5b8c\u6574\u7684\u5fae\u670d\u52a1\u6cbb\u7406\u4e2d\u95f4\u4ef6\uff0c\u90a3\u4e3a\u4ec0\u4e48\u8fd8\u9700\u8981\u5f15\u5165 Service Mesh \u5462\uff1f\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*Sq7oR6eO2QAAAAAAAAAAAAAAARQnAQ)\\n\\n\u62ff\u8682\u8681\u81ea\u7814\u7684\u670d\u52a1\u6846\u67b6 SOFARPC \u4e3a\u4f8b\uff0c\u5b83\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684 SDK\uff0c\u5305\u542b\u4e86\u670d\u52a1\u53d1\u73b0\u3001\u8def\u7531\u3001\u7194\u65ad\u9650\u6d41\u7b49\u4e00\u7cfb\u5217\u80fd\u529b\u3002\u5728\u4e00\u4e2a\u57fa\u672c\u7684 SOFA(Java) \u5e94\u7528\u91cc\uff0c\u4e1a\u52a1\u4ee3\u7801\u96c6\u6210\u4e86 SOFARPC \u7684 SDK\uff0c\u4e24\u8005\u5728\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u8fd0\u884c\u3002\u5728\u8682\u8681\u7684\u5927\u89c4\u6a21\u843d\u5730\u5fae\u670d\u52a1\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u9762\u4e34\u4e86\u5982\u4e0b\u7684\u4e00\u4e9b\u95ee\u9898\uff1a\\n\\n**\u5347\u7ea7\u6210\u672c\u9ad8**\uff1aSDK \u662f\u9700\u8981\u4e1a\u52a1\u4ee3\u7801\u5f15\u5165\u7684\uff0c\u6bcf\u6b21\u7684\u5347\u7ea7\u90fd\u9700\u8981\u5e94\u7528\u4fee\u6539\u4ee3\u7801\u8fdb\u884c\u53d1\u5e03\u3002\u7531\u4e8e\u5e94\u7528\u89c4\u6a21\u8f83\u5927\uff0c\u5728\u4e00\u4e9b\u5927\u7684\u6280\u672f\u53d8\u66f4\u6216\u8005\u5b89\u5168\u95ee\u9898\u4fee\u590d\u7684\u65f6\u5019\u3002\u6bcf\u6b21\u9700\u8981\u6570\u5343\u4e2a\u5e94\u7528\u4e00\u8d77\u5347\u7ea7\uff0c\u8d39\u65f6\u8d39\u529b\u3002\\n**\u7248\u672c\u788e\u7247\u5316**\uff1a\u7531\u4e8e\u5347\u7ea7\u6210\u672c\u9ad8\uff0cSDK \u7248\u672c\u788e\u7247\u5316\u4e25\u91cd\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6211\u4eec\u5199\u4ee3\u7801\u7684\u65f6\u5019\u9700\u8981\u517c\u5bb9\u5386\u53f2\u903b\u8f91\uff0c\u6574\u4f53\u6280\u672f\u6f14\u8fdb\u56f0\u96be\u3002\\n**\u8de8\u8bed\u8a00\u65e0\u6cd5\u6cbb\u7406**\uff1a\u8682\u8681\u7684\u4e2d\u540e\u53f0\u5728\u7ebf\u5e94\u7528\u5927\u591a\u4f7f\u7528 Java \u4f5c\u4e3a\u6280\u672f\u6808\uff0c\u4f46\u662f\u5728\u524d\u53f0\u3001AI\u3001\u5927\u6570\u636e\u7b49\u9886\u57df\u6709\u5f88\u591a\u7684\u8de8\u8bed\u8a00\u5e94\u7528\uff0c\u4f8b\u5982 C++/Python/Golang \u7b49\u7b49\uff0c\u7531\u4e8e\u6ca1\u6709\u5bf9\u5e94\u8bed\u8a00\u7684 SDK\uff0c\u4ed6\u4eec\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u5176\u5b9e\u662f\u7f3a\u5931\u7684\u3002\\n\\n\u6211\u4eec\u6ce8\u610f\u5230\u4e91\u539f\u751f\u91cc\u6709 Service Mesh \u4e00\u4e9b\u7406\u5ff5\u5f00\u59cb\u51fa\u73b0\uff0c\u6240\u4ee5\u5f00\u59cb\u5f80\u8fd9\u4e2a\u65b9\u5411\u63a2\u7d22\u3002\u5728 Service Mesh \u7684\u7406\u5ff5\u91cc\uff0c\u6709\u4e24\u4e2a\u6982\u5ff5\uff0c\u4e00\u4e2a\u662f Control Plane \u63a7\u5236\u5e73\u9762\uff0c\u4e00\u4e2a\u662f Data Plane \u6570\u636e\u5e73\u9762\u3002\u63a7\u5236\u9762\u8fd9\u91cc\u6682\u65f6\u4e0d\u5c55\u5f00\uff0c\u5176\u4e2d\u6570\u636e\u5e73\u9762\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u89e3\u8026\uff0c\u5c06\u4e00\u4e9b\u4e1a\u52a1\u65e0\u9700\u5173\u7cfb\u7684\u590d\u6742\u903b\u8f91\uff08\u5982 RPC \u8c03\u7528\u91cc\u7684\u670d\u52a1\u53d1\u73b0\u3001\u670d\u52a1\u8def\u7531\u3001\u7194\u65ad\u9650\u6d41\u3001\u5b89\u5168\uff09\u62bd\u8c61\u5230\u4e00\u4e2a\u72ec\u7acb\u8fdb\u7a0b\u91cc\u53bb\u3002\u53ea\u8981\u4fdd\u6301\u4e1a\u52a1\u548c\u72ec\u7acb\u8fdb\u7a0b\u7684\u901a\u4fe1\u534f\u8bae\u4e0d\u53d8\uff0c\u8fd9\u4e9b\u80fd\u529b\u7684\u6f14\u8fdb\u53ef\u4ee5\u8ddf\u968f\u8fd9\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\u81ea\u4e3b\u5347\u7ea7\uff0c\u6574\u4e2a Mesh \u5c31\u53ef\u4ee5\u505a\u5230\u7edf\u4e00\u6f14\u8fdb\u3002\u800c\u6211\u4eec\u7684\u8de8\u8bed\u8a00\u5e94\u7528\uff0c\u53ea\u8981\u6d41\u91cf\u662f\u7ecf\u8fc7\u6211\u4eec\u7684 Data Plane \u7684\uff0c\u90fd\u53ef\u4ee5\u4eab\u53d7\u5230\u521a\u624d\u63d0\u5230\u7684\u5404\u79cd\u670d\u52a1\u6cbb\u7406\u76f8\u5173\u7684\u80fd\u529b\uff0c\u5e94\u7528\u5bf9\u5e95\u5c42\u7684\u57fa\u7840\u8bbe\u65bd\u80fd\u529b\u662f\u900f\u660e\u7684\uff0c\u771f\u6b63\u7684\u4e91\u539f\u751f\u7684\u3002\\n\\n## \u8682\u8681 Mesh \u843d\u5730\u8fc7\u7a0b\\n\\n\u6240\u4ee5\u4ece 2017 \u5e74\u5e95\u5f00\u59cb\uff0c\u8682\u8681\u5c31\u5f00\u59cb\u63a2\u7d22 Service Mesh \u7684\u6280\u672f\u65b9\u5411\uff0c\u5e76\u63d0\u51fa\u4e86 \u57fa\u7840\u8bbe\u65bd\u7edf\u4e00\uff0c\u4e1a\u52a1\u65e0\u611f\u5347\u7ea7 \u7684\u613f\u666f\u3002\u4e3b\u8981\u7684\u91cc\u7a0b\u7891\u5c31\u662f\uff1a\\n\\n2017 \u5e74\u5e95\u5f00\u59cb\u6280\u672f\u9884\u7814 Service Mesh \u6280\u672f\uff0c\u5e76\u786e\u5b9a\u4e3a\u672a\u6765\u53d1\u5c55\u65b9\u5411\uff1b\\n\\n2018 \u5e74\u521d\u5f00\u59cb\u7528 Golang \u81ea\u7814 Sidecar MOSN \u5e76\u5f00\u6e90\uff0c\u4e3b\u8981\u652f\u6301 RPC \u5728\u53cc\u5341\u4e00\u5c0f\u8303\u56f4\u8bd5\u70b9\uff1b\\n\\n2019 \u5e74 618\uff0c\u65b0\u589e Message Mesh \u548c DB Mesh \u7684\u5f62\u6001\uff0c\u8986\u76d6\u82e5\u5e72\u6838\u5fc3\u94fe\u8def\uff0c\u652f\u6491 618 \u5927\u4fc3\uff1b\\n\\n2019 \u5e74\u53cc\u5341\u4e00\uff0c\u8986\u76d6\u4e86\u6240\u6709\u5927\u4fc3\u6838\u5fc3\u94fe\u8def\u51e0\u767e\u4e2a\u5e94\u7528\uff0c\u652f\u6491\u5f53\u65f6\u7684\u53cc\u5341\u4e00\u5927\u4fc3\uff1b\\n\\n2020 \u5e74\u53cc\u5341\u4e00\uff0c\u5168\u7ad9\u8d85\u8fc7 80% \u7684\u5728\u7ebf\u5e94\u7528\u63a5\u5165\u4e86 Mesh \u5316\uff0c\u6574\u5957 Mesh \u4f53\u7cfb\u4e5f\u5177\u5907\u4e86 2 \u4e2a\u6708\u4ece\u80fd\u529b\u5f00\u53d1\u5230\u5168\u7ad9\u5347\u7ea7\u5b8c\u6210\u7684\u80fd\u529b\u3002\\n\\n## \u8682\u8681 Mesh \u843d\u5730\u67b6\u6784\\n\\n\u76ee\u524d Mesh \u5316\u5728\u8682\u8681\u843d\u5730\u89c4\u6a21\u662f\u5e94\u7528\u7ea6\u6570\u5343\u4e2a\uff0c\u5bb9\u5668\u6570\u5341\u4e07\u7684\u7ea7\u522b\uff0c\u8fd9\u4e2a\u89c4\u6a21\u7684\u843d\u5730\uff0c\u5728\u4e1a\u754c\u662f\u6570\u4e00\u6570\u4e8c\u7684\uff0c\u6839\u672c\u5c31\u6ca1\u6709\u524d\u4eba\u7684\u8def\u53ef\u4ee5\u5b66\u4e60\uff0c\u6240\u4ee5\u8682\u8681\u5728\u843d\u5730\u8fc7\u7a0b\u4e2d\uff0c\u4e5f\u5efa\u8bbe\u4e00\u5957\u5b8c\u6574\u7684\u7814\u53d1\u8fd0\u7ef4\u4f53\u7cfb\u53bb\u652f\u6491\u8682\u8681\u7684 Mesh \u5316\u3002\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*eAlMT7SMTpMAAAAAAAAAAAAAARQnAQ)\\n\\n\u8682\u8681 Mesh \u67b6\u6784\u5927\u6982\u5982\u56fe\u6240\u793a\uff0c\u5e95\u4e0b\u662f\u6211\u4eec\u7684\u63a7\u5236\u5e73\u9762\uff0c\u91cc\u9762\u90e8\u7f72\u4e86\u670d\u52a1\u6cbb\u7406\u4e2d\u5fc3\u3001PaaS\u3001\u76d1\u63a7\u4e2d\u5fc3\u7b49\u5e73\u53f0\u7684\u670d\u52a1\u7aef\uff0c\u90fd\u662f\u73b0\u6709\u7684\u4e00\u4e9b\u4ea7\u54c1\u3002\u8fd8\u6709\u5c31\u662f\u6211\u4eec\u7684\u8fd0\u7ef4\u4f53\u7cfb\uff0c\u5305\u62ec\u7814\u53d1\u5e73\u53f0\u548c PaaS \u5e73\u53f0\u3002\u90a3\u4e2d\u95f4\u662f\u6211\u4eec\u7684\u4e3b\u89d2\u6570\u636e\u5e73\u9762 MOSN\uff0c\u91cc\u9762\u7ba1\u7406\u4e86 RPC\u3001\u6d88\u606f\u3001MVC\u3001\u4efb\u52a1\u56db\u79cd\u6d41\u91cf\uff0c\u8fd8\u6709\u5065\u5eb7\u68c0\u67e5\u3001\u76d1\u63a7\u3001\u914d\u7f6e\u3001\u5b89\u5168\u3001\u6280\u672f\u98ce\u9669\u90fd\u4e0b\u6c89\u7684\u57fa\u7840\u80fd\u529b\uff0c\u540c\u65f6 MOSN \u4e5f\u5c4f\u853d\u4e86\u4e1a\u52a1\u548c\u57fa\u7840\u5e73\u53f0\u7684\u4e00\u4e9b\u4ea4\u4e92\u3002DBMesh \u5728\u8682\u8681\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u4ea7\u54c1\uff0c\u56fe\u91cc\u5c31\u6ca1\u753b\u51fa\u6765\u3002\u7136\u540e\u6700\u4e0a\u5c42\u662f\u6211\u4eec\u7684\u4e00\u4e9b\u5e94\u7528\uff0c\u76ee\u524d\u652f\u6301 Java\u3001Nodejs \u7b49\u591a\u79cd\u8bed\u8a00\u7684\u63a5\u5165\u3002\\n\u5bf9\u5e94\u7528\u6765\u8bf4\uff0cMesh \u867d\u7136\u80fd\u505a\u5230\u57fa\u7840\u8bbe\u65bd\u89e3\u8026\uff0c\u4f46\u662f\u63a5\u5165\u8fd8\u662f\u9700\u8981\u4e00\u6b21\u989d\u5916\u7684\u5347\u7ea7\u6210\u672c\uff0c\u6240\u4ee5\u4e3a\u4e86\u63a8\u8fdb\u5e94\u7528\u7684\u63a5\u5165\uff0c\u8682\u8681\u505a\u4e86\u6574\u4e2a\u7814\u53d1\u8fd0\u7ef4\u6d41\u7a0b\u7684\u6253\u901a\uff0c\u5305\u62ec\u5728\u73b0\u6709\u6846\u67b6\u4e0a\u505a\u6700\u7b80\u5316\u7684\u63a5\u5165\uff0c\u901a\u8fc7\u5206\u6279\u63a8\u8fdb\u628a\u63a7\u98ce\u9669\u548c\u8fdb\u5ea6\uff0c\u8ba9\u65b0\u5e94\u7528\u9ed8\u8ba4\u63a5\u5165 Mesh \u5316\u7b49\u4e00\u4e9b\u4e8b\u60c5\u3002\\n\\n\u540c\u65f6\u968f\u7740\u4e0b\u6c89\u80fd\u529b\u7684\u8d8a\u6765\u8d8a\u591a\uff0c\u5404\u4e2a\u80fd\u529b\u4e4b\u524d\u4e5f\u9762\u4e34\u4e86\u7814\u53d1\u534f\u4f5c\u7684\u4e00\u4e9b\u95ee\u9898\uff0c\u751a\u81f3\u4e92\u76f8\u5f71\u54cd\u6027\u80fd\u548c\u7a33\u5b9a\u6027\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u5bf9\u4e8e Mesh \u81ea\u8eab\u7684\u7814\u53d1\u6548\u80fd\uff0c\u6211\u4eec\u4e5f\u505a\u4e86\u4e00\u4e0b\u6a21\u5757\u5316\u9694\u79bb\u3001\u65b0\u80fd\u529b\u52a8\u6001\u63d2\u62d4\u3001\u81ea\u52a8\u56de\u5f52\u7b49\u6539\u8fdb\uff0c\u76ee\u524d\u4e00\u4e2a\u4e0b\u6c89\u80fd\u529b\u4ece\u5f00\u53d1\u5230\u5168\u7ad9\u63a8\u5e7f\u5b8c\u6210\u53ef\u4ee5\u5728 2 \u4e2a\u6708\u5185\u5b8c\u6210\u3002\\n\\n## \u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u4e0a\u7684\u63a2\u7d22\\n\\n**\u5927\u89c4\u6a21\u843d\u5730\u540e\u7684\u65b0\u95ee\u9898\u4e0e\u601d\u8003**\\n\\n\u8682\u8681 Mesh \u5927\u89c4\u6a21\u843d\u5730\u4e4b\u540e\uff0c\u76ee\u524d\u6211\u4eec\u9047\u5230\u4e86\u4e00\u4e9b\u65b0\u7684\u95ee\u9898\uff1a\\n\u8de8\u8bed\u8a00 SDK \u7684\u7ef4\u62a4\u6210\u672c\u9ad8\uff1a\u62ff RPC \u4e3e\u4f8b\uff0c\u5927\u90e8\u5206\u903b\u8f91\u5df2\u7ecf\u4e0b\u6c89\u5230\u4e86 MOSN \u91cc\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u90e8\u5206\u901a\u4fe1\u7f16\u89e3\u7801\u534f\u8bae\u7684\u903b\u8f91\u662f\u5728 Java \u7684\u4e00\u4e2a\u8f7b\u91cf\u7ea7 SDK \u91cc\u7684\uff0c\u8fd9\u4e2a SDK \u8fd8\u662f\u6709\u4e00\u5b9a\u7684\u7ef4\u62a4\u6210\u672c\u7684\uff0c\u6709\u591a\u5c11\u4e2a\u8bed\u8a00\u5c31\u6709\u591a\u5c11\u4e2a\u8f7b\u91cf\u7ea7 SDK\uff0c\u4e00\u4e2a\u56e2\u961f\u4e0d\u53ef\u80fd\u6709\u7cbe\u901a\u6240\u6709\u8bed\u8a00\u7684\u7814\u53d1\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8f7b\u91cf\u7ea7 SDK \u7684\u4ee3\u7801\u8d28\u91cf\u5c31\u662f\u4e00\u4e2a\u95ee\u9898\u3002\\n\\n\u4e1a\u52a1\u517c\u5bb9\u4e0d\u540c\u73af\u5883\u7684\u65b0\u573a\u666f\uff1a\u8682\u8681\u7684\u4e00\u90e8\u5206\u5e94\u7528\u662f\u65e2\u90e8\u7f72\u5728\u8682\u8681\u5185\u90e8\uff0c\u4e5f\u5bf9\u5916\u8f93\u51fa\u5230\u91d1\u878d\u673a\u6784\u7684\u3002\u5f53\u5b83\u4eec\u90e8\u7f72\u5230\u8682\u8681\u65f6\uff0c\u5bf9\u63a5\u7684\u662f\u8682\u8681\u7684\u63a7\u5236\u9762\uff0c\u5f53\u5bf9\u63a5\u5230\u94f6\u884c\u7684\u65f6\u5019\uff0c\u5bf9\u63a5\u7684\u662f\u94f6\u884c\u5df2\u6709\u7684\u63a7\u5236\u9762\u3002\u76ee\u524d\u5927\u591a\u6570\u5e94\u7528\u7684\u505a\u6cd5\u662f\u81ea\u5df1\u5728\u4ee3\u7801\u91cc\u5c01\u88c5\u4e00\u5c42\uff0c\u9047\u5230\u4e0d\u652f\u6301\u7684\u7ec4\u4ef6\u5c31\u4e34\u65f6\u652f\u6301\u5bf9\u63a5\u4e00\u4e0b\u3002\\n\\n\u4ece Service Mesh \u5230 Multi-Mesh\uff1a\u8682\u8681\u6700\u65e9\u7684\u573a\u666f\u662f Service Mesh\uff0cMOSN \u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u4ee3\u7406\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u6d41\u91cf\u62e6\u622a\uff0c\u5176\u5b83\u7684\u4e2d\u95f4\u4ef6\u90fd\u662f\u901a\u8fc7\u539f\u59cb\u7684 SDK \u4e0e\u670d\u52a1\u7aef\u8fdb\u884c\u4ea4\u4e92\u3002\u800c\u73b0\u5728\u7684 MOSN \u5df2\u7ecf\u4e0d\u4ec5\u4ec5\u662f Service Mesh \u4e86\uff0c\u800c\u662f Multi-Mesh\uff0c\u56e0\u4e3a\u9664\u4e86 RPC\uff0c\u6211\u4eec\u8fd8\u652f\u6301\u4e86\u66f4\u591a\u4e2d\u95f4\u4ef6\u7684 Mesh \u5316\u843d\u5730\uff0c\u5305\u62ec\u6d88\u606f\u3001\u914d\u7f6e\u3001\u7f13\u5b58\u7684\u7b49\u7b49\u3002\u53ef\u4ee5\u770b\u5230\u6bcf\u4e2a\u4e0b\u6c89\u7684\u4e2d\u95f4\u4ef6\uff0c\u5728\u5e94\u7528\u4fa7\u51e0\u4e4e\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u8f7b\u91cf\u7ea7 SDK \u5b58\u5728\uff0c\u8fd9\u4e2a\u5728\u7ed3\u5408\u521a\u624d\u7684\u7b2c\u4e00\u95ee\u9898\uff0c\u5c31\u53d1\u73b0\u6709\u975e\u5e38\u591a\u7684\u8f7b\u91cf\u7ea7 SDK \u9700\u8981\u7ef4\u62a4\u3002\u4e3a\u4e86\u4fdd\u6301\u529f\u80fd\u4e0d\u4e92\u76f8\u5f71\u54cd\uff0c\u6bcf\u4e2a\u529f\u80fd\u5b83\u4eec\u5f00\u542f\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u534f\u8bae\u53bb\u548c MOSN \u8fdb\u884c\u8c03\u7528\u3002\u4f8b\u5982 RPC \u7528\u7684 RPC \u534f\u8bae\uff0c\u6d88\u606f\u7528\u7684 MQ \u534f\u8bae\uff0c\u7f13\u5b58\u7528\u7684 Redis \u534f\u8bae\u3002\u7136\u540e\u73b0\u5728\u7684 MOSN \u5176\u5b9e\u4e5f\u4e0d\u4ec5\u4ec5\u662f\u9762\u5411\u6d41\u91cf\u4e86\uff0c\u4f8b\u5982\u914d\u7f6e\u5c31\u662f\u66b4\u9732\u4e86\u4e00\u4e0b API \u7ed9\u4e1a\u52a1\u4ee3\u7801\u53bb\u4f7f\u7528\u3002\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*80o8SYwyHJoAAAAAAAAAAAAAARQnAQ)\\n\\n\u4e3a\u4e86\u89e3\u51b3\u521a\u624d\u7684\u95ee\u9898\u548c\u573a\u666f\uff0c\u6211\u4eec\u5c31\u5728\u601d\u8003\u5982\u4e0b\u7684\u51e0\u4e2a\u70b9\uff1a\\n\\n1.\u4e0d\u540c\u4e2d\u95f4\u4ef6\u3001\u4e0d\u540c\u8bed\u8a00\u7684 SDK \u80fd\u5426\u98ce\u683c\u7edf\u4e00\uff1f\\n\\n2.\u5404\u4e2a\u4e0b\u6c89\u80fd\u529b\u7684\u4ea4\u4e92\u534f\u8bae\u80fd\u5426\u7edf\u4e00\uff1f\\n\\n3.\u6211\u4eec\u7684\u4e2d\u95f4\u4ef6\u4e0b\u6c89\u662f\u9762\u5411\u7ec4\u4ef6\u8fd8\u662f\u9762\u5411\u80fd\u529b\uff1f\\n\\n4.\u5e95\u5c42\u7684\u5b9e\u73b0\u662f\u5426\u53ef\u4ee5\u66ff\u6362\uff1f\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*hsZBQJg0VnoAAAAAAAAAAAAAARQnAQ)\\n\\n## \u8682\u8681\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u67b6\u6784\\n\\n\u4ece\u53bb\u5e74\u7684 3 \u6708\u4efd\u5f00\u59cb\uff0c\u7ecf\u8fc7\u5185\u90e8\u7684\u591a\u8f6e\u8ba8\u8bba\uff0c\u4ee5\u53ca\u5bf9\u4e1a\u754c\u4e00\u4e9b\u65b0\u7406\u5ff5\u7684\u8c03\u7814\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u4e2a\u201c\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u201d\uff08\u4e0b\u79f0\u8fd0\u884c\u65f6\uff09\u7684\u6982\u5ff5\u3002\u987e\u540d\u601d\u4e49\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2a\u8fd0\u884c\u65f6\u80fd\u591f\u5305\u542b\u5e94\u7528\u6240\u5173\u5fc3\u7684\u6240\u6709\u5206\u5e03\u5f0f\u80fd\u529b\uff0c\u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u5feb\u901f\u7684\u6784\u5efa\u4e91\u539f\u751f\u5e94\u7528\uff0c\u5e2e\u52a9\u5e94\u7528\u548c\u57fa\u7840\u8bbe\u65bd\u8fdb\u4e00\u6b65\u89e3\u8026\uff01\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*iqQoTYAma4YAAAAAAAAAAAAAARQnAQ)\\n\\n\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u8bbe\u8ba1\u91cc\u6838\u5fc3\u7684\u51e0\u4e2a\u70b9\u5982\u4e0b\uff1a\\n\\n**\u7b2c\u4e00**\uff0c\u7531\u4e8e\u6709\u4e86 MOSN \u89c4\u6a21\u5316\u843d\u5730\u7684\u7ecf\u9a8c\u548c\u914d\u5957\u7684\u8fd0\u7ef4\u4f53\u7cfb\uff0c\u6211\u4eec\u51b3\u5b9a\u57fa\u4e8e MOSN \u5185\u6838\u53bb\u5f00\u53d1\u6211\u4eec\u7684\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u3002\\n\\n**\u7b2c\u4e8c**\uff0c\u9762\u5411\u80fd\u529b\uff0c\u800c\u4e0d\u662f\u9762\u5411\u7ec4\u4ef6\uff0c\u7edf\u4e00\u5b9a\u4e49\u51fa\u8fd9\u4e2a\u8fd0\u884c\u65f6\u7684 API \u80fd\u529b\u3002\\n\\n**\u7b2c\u4e09**\uff0c\u4e1a\u52a1\u4ee3\u7801\u548c Runtime API \u4e4b\u95f4\u7684\u4ea4\u4e92\u91c7\u7528\u7edf\u4e00\u7684 gRPC \u534f\u8bae\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u4e1a\u52a1\u7aef\u4fa7\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 proto \u6587\u4ef6\u53bb\u53cd\u5411\u751f\u6210\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u76f4\u63a5\u8fdb\u884c\u8c03\u7528\u3002\\n\\n**\u7b2c\u56db**\uff0c\u80fd\u529b\u540e\u9762\u5bf9\u5e94\u7684\u7ec4\u4ef6\u5b9e\u73b0\u662f\u53ef\u4ee5\u66ff\u6362\u7684\uff0c\u4f8b\u5982\u6ce8\u518c\u670d\u52a1\u7684\u63d0\u4f9b\u8005\u53ef\u4ee5\u662f SOFARegistry\uff0c\u4e5f\u53ef\u4ee5\u662f Nacos \u6216\u8005 Zookeeper\u3002\\n\\n\\n**\u8fd0\u884c\u65f6\u80fd\u529b\u62bd\u8c61**\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*hWIVR6ccduYAAAAAAAAAAAAAARQnAQ)\\n\\n\u4e3a\u4e86\u62bd\u8c61\u51fa\u4e91\u539f\u751f\u5e94\u7528\u6700\u9700\u8981\u7684\u4e00\u4e9b\u80fd\u529b\uff0c\u6211\u4eec\u5148\u5b9a\u4e86\u51e0\u4e2a\u539f\u5219\uff1a\\n\\n1.\u5173\u6ce8\u5206\u5e03\u5f0f\u5e94\u7528\u6240\u9700\u7684 API \u548c\u573a\u666f\u800c\u4e0d\u662f\u7ec4\u4ef6\uff1b\\n2.API \u7b26\u5408\u76f4\u89c9\uff0c\u5f00\u7bb1\u5373\u7528\uff0c\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e\uff1b\\n3.API \u4e0d\u7ed1\u5b9a\u5b9e\u73b0\uff0c\u5b9e\u73b0\u5dee\u5f02\u5316\u4f7f\u7528\u6269\u5c55\u5b57\u6bb5\u3002\\n\\n\u6709\u4e86\u539f\u5219\u4e4b\u540e\uff0c\u6211\u4eec\u5c31\u62bd\u8c61\u51fa\u4e86\u4e09\u7ec4 API\uff0c\u5206\u522b\u662f\u5e94\u7528\u8c03\u7528\u8fd0\u884c\u65f6\u7684 mosn.proto\uff0c\u8fd0\u884c\u65f6\u8c03\u7528\u5e94\u7528\u7684 appcallback.proto\uff0c\u8fd0\u884c\u65f6\u8fd0\u7ef4\u76f8\u5173\u7684 actuator.proto\u3002\u4f8b\u5982 RPC \u8c03\u7528\u3001\u53d1\u6d88\u606f\u3001\u8bfb\u7f13\u5b58\u3001\u8bfb\u914d\u7f6e\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u5e94\u7528\u5230\u8fd0\u884c\u65f6\u7684\uff0c\u800c RPC  \u6536\u8bf7\u6c42\u3001\u6536\u6d88\u606f\u3001\u63a5\u6536\u4efb\u52a1\u8c03\u5ea6\u8fd9\u4e9b\u5c5e\u4e8e\u8fd0\u884c\u65f6\u8c03\u5e94\u7528\u7684\uff0c\u5176\u5b83\u76d1\u63a7\u68c0\u67e5\u3001\u7ec4\u4ef6\u7ba1\u7406\u3001\u6d41\u91cf\u63a7\u5236\u8fd9\u4e9b\u5219\u5c5e\u4e8e\u8fd0\u884c\u65f6\u8fd0\u7ef4\u76f8\u5173\u7684\u3002\\n\\n\u8fd9\u4e09\u4e2a proto \u7684\u793a\u4f8b\u53ef\u4ee5\u770b\u4e0b\u56fe\uff1a\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*J76nQoLLYWgAAAAAAAAAAAAAARQnAQ)\\n\\n**\u8fd0\u884c\u65f6\u7ec4\u4ef6\u7ba1\u63a7**\\n\\n\u53e6\u5916\u4e00\u65b9\u9762\uff0c\u4e3a\u4e86\u5b9e\u73b0\u8fd0\u884c\u65f6\u7684\u5b9e\u73b0\u53ef\u66ff\u6362\uff0c\u6211\u4eec\u4e5f\u5728 MOSN \u63d0\u4e86\u4e24\u4e2a\u6982\u5ff5\uff0c\u6211\u4eec\u628a\u4e00\u4e2a\u4e2a\u5206\u5e03\u5f0f\u80fd\u529b\u79f0\u4e3a Service\uff0c\u7136\u540e\u6709\u4e0d\u540c\u7684 Component \u53bb\u5b9e\u73b0\u8fd9\u4e2a Service\uff0c\u4e00\u4e2a Service \u53ef\u4ee5\u6709\u591a\u4e2a\u7ec4\u4ef6\u5b9e\u73b0\u5b83\uff0c\u4e00\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a Service\u3002\u4f8b\u5982\u56fe\u91cc\u7684\u793a\u4f8b\u5c31\u662f\u6709\u201cMQ-pub\u201d \u8fd9\u4e2a\u53d1\u6d88\u606f\u7684 Service \u6709 SOFAMQ \u548c Kafka \u4e24\u4e2a Component \u53bb\u5b9e\u73b0\uff0c\u800c Kafka Component \u5219\u5b9e\u73b0\u4e86\u53d1\u6d88\u606f\u548c\u5065\u5eb7\u68c0\u67e5\u4e24\u4e2a Service\u3002\\n\u5f53\u4e1a\u52a1\u771f\u6b63\u901a\u8fc7 gRPC \u751f\u6210\u7684\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u6570\u636e\u5c31\u4f1a\u901a\u8fc7 gRPC \u534f\u8bae\u53d1\u9001\u7ed9 Runtime\uff0c\u5e76\u4e14\u5206\u53d1\u5230\u540e\u9762\u4e00\u4e2a\u5177\u4f53\u7684\u5b9e\u73b0\u4e0a\u53bb\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u5e94\u7528\u53ea\u9700\u8981\u4f7f\u7528\u540c\u4e00\u5957 API\uff0c\u901a\u8fc7\u8bf7\u6c42\u91cc\u7684\u53c2\u6570\u6216\u8005\u8fd0\u884c\u65f6\u7684\u914d\u7f6e\uff0c\u5c31\u5bf9\u63a5\u5230\u4e0d\u540c\u7684\u5b9e\u73b0\u3002\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*dK9rRLTvtlMAAAAAAAAAAAAAARQnAQ)\\n\\n**\u8fd0\u884c\u65f6\u548c Mesh \u7684\u5bf9\u6bd4**\\n\\n\u7efc\u4e0a\u6240\u8ff0\uff0c \u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u548c\u521a\u624d Mesh \u7b80\u5355\u5bf9\u6bd4\u5982\u4e0b\uff1a\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*xyu9T74SD9MAAAAAAAAAAAAAARQnAQ)\\n\\n\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u843d\u5730\u573a\u666f\\n\u4ece\u53bb\u5e74\u4e2d\u5f00\u59cb\u7814\u53d1\uff0c\u8fd0\u884c\u65f6\u76ee\u524d\u5728\u8682\u8681\u5185\u90e8\u4e3b\u8981\u843d\u5730\u4e86\u4e0b\u9762\u51e0\u4e2a\u573a\u666f\u3002\\n\\n**\u5f02\u6784\u6280\u672f\u6808\u63a5\u5165**\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*8UJhRbBg3zsAAAAAAAAAAAAAARQnAQ)\\n\\n\u5728\u8682\u8681\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u7684\u5e94\u7528\u9664\u4e86 RPC \u670d\u52a1\u6cbb\u7406\u3001\u6d88\u606f\u7b49\u7684\u9700\u6c42\u4e4b\u5916\uff0c\u8fd8\u5e0c\u671b\u4f7f\u7528\u4e0a\u8682\u8681\u7edf\u4e00\u7684\u4e2d\u95f4\u4ef6\u7b49\u57fa\u7840\u8bbe\u65bd\u80fd\u529b\uff0cJava \u548c Nodejs \u662f\u6709\u5bf9\u5e94\u7684 SDK \u7684\uff0c\u800c\u5176\u4ed6\u8bed\u8a00\u662f\u6ca1\u6709\u7684\u5bf9\u5e94\u7684 SDK \u7684\u3002\u6709\u4e86\u5e94\u7528\u8fd0\u884c\u65f6\u4e4b\u540e\uff0c\u8fd9\u4e9b\u5f02\u6784\u8bed\u8a00\u5c31\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 gRPC Client \u8c03\u7528\u8fd0\u884c\u65f6\uff0c\u5bf9\u63a5\u4e0a\u8682\u8681\u7684\u57fa\u7840\u8bbe\u65bd\u3002\\n\\n**\u89e3\u9664\u5382\u5546\u7ed1\u5b9a**\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*eVoqRbkTFFwAAAAAAAAAAAAAARQnAQ)\\n\\n\u521a\u624d\u63d0\u5230\uff0c\u8682\u8681\u7684\u533a\u5757\u94fe\u3001\u98ce\u63a7\u3001\u667a\u80fd\u5ba2\u670d\u3001\u91d1\u878d\u4e2d\u53f0\u7b49\u7b49\u4e1a\u52a1\u662f\u65e2\u5728\u4e3b\u7ad9\u90e8\u7f72\uff0c\u53c8\u6709\u963f\u91cc\u4e91\u6216\u8005\u4e13\u6709\u4e91\u90e8\u7f72\u7684\u573a\u666f\u3002\u6709\u4e86\u8fd0\u884c\u65f6\u4e4b\u540e\uff0c\u5e94\u7528\u53ef\u4ee5\u4e00\u5957\u4ee3\u7801\u548c\u8fd0\u884c\u65f6\u4e00\u8d77\u51fa\u4e00\u4e2a\u955c\u50cf\uff0c\u901a\u8fc7\u914d\u7f6e\u53bb\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u5e95\u5c42\u7684\u5b9e\u73b0\uff0c\u4e0d\u8ddf\u5177\u4f53\u7684\u5b9e\u73b0\u7ed1\u5b9a\u3002\u4f8b\u5982\u5728\u8682\u8681\u5185\u90e8\u5bf9\u63a5\u7684\u662f SOFARegistry \u548c SOFAMQ \u7b49\u4ea7\u54c1\uff0c\u800c\u5230\u4e91\u4e0a\u5bf9\u63a5\u7684\u662f Nacos\u3001RocketMQ \u7b49\u4ea7\u54c1\uff0c\u5230\u4e13\u6709\u4e91\u5bf9\u63a5\u7684\u53c8\u662f Zookeeper\u3001Kafka \u7b49\u3002\u8fd9\u4e2a\u573a\u666f\u6211\u4eec\u6b63\u5728\u843d\u5730\u5f53\u4e2d\u3002\u5f53\u7136\u8fd9\u4e2a\u4e5f\u53ef\u4ee5\u7528\u5728\u9057\u7559\u7cfb\u7edf\u6cbb\u7406\u4e0a\uff0c\u4f8b\u5982\u4ece SOFAMQ 1.0 \u5347\u7ea7\u5230 SOFAMQ 2.0\uff0c\u63a5\u4e86\u8fd0\u884c\u65f6\u7684\u5e94\u7528\u4e5f\u65e0\u9700\u5347\u7ea7\u3002\\n\\n**FaaS \u51b7\u542f\u9884\u70ed\u6c60**\\n\\nFaaS \u51b7\u542f\u9884\u70ed\u6c60\u4e5f\u662f\u6211\u4eec\u8fd1\u671f\u5728\u63a2\u7d22\u7684\u4e00\u4e2a\u573a\u666f\uff0c\u5927\u5bb6\u77e5\u9053 FaaS \u91cc\u7684 Function \u5728\u51b7\u542f\u7684\u65f6\u5019\uff0c\u662f\u9700\u8981\u4ece\u521b\u5efa Pod \u5230\u4e0b\u8f7d Function \u518d\u5230\u542f\u52a8\u7684\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u6bd4\u8f83\u957f\u3002\u6709\u4e86\u8fd0\u884c\u65f6\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u524d\u628a Pod \u521b\u5efa\u51fa\u6765\u5e76\u542f\u52a8\u597d\u8fd0\u884c\u65f6\uff0c\u7b49\u5230\u5e94\u7528\u542f\u52a8\u7684\u65f6\u5019\u5176\u5b9e\u5df2\u7ecf\u975e\u5e38\u7b80\u5355\u7684\u5e94\u7528\u903b\u8f91\u4e86\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\u53d1\u73b0\u53ef\u4ee5\u5c06\u4ece 5s \u7f29\u77ed 80% \u5230 1s\u3002\u8fd9\u4e2a\u65b9\u5411\u6211\u4eec\u8fd8\u4f1a\u6301\u7eed\u63a2\u7d22\u5f53\u4e2d\u3002\\n\\n## \u89c4\u5212\u548c\u5c55\u671b\\n\\n**API \u5171\u5efa**\\n\\n\u8fd0\u884c\u65f6\u91cc\u6700\u4e3b\u8981\u7684\u4e00\u90e8\u5206\u5c31\u662f API \u7684\u5b9a\u4e49\uff0c\u4e3a\u4e86\u843d\u5730\u5185\u90e8\uff0c\u6211\u4eec\u5df2\u7ecf\u6709\u4e00\u5957\u8f83\u4e3a\u5b8c\u6574\u7684 API\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u770b\u5230\u4e1a\u754c\u7684\u5f88\u591a\u4ea7\u54c1\u6709\u7c7b\u4f3c\u7684\u8bc9\u6c42\uff0c\u4f8b\u5982 dapr\u3001envoy \u7b49\u7b49\u3002\u6240\u4ee5\u63a5\u4e0b\u6765\u6211\u4eec\u4f1a\u53bb\u505a\u7684\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u8054\u5408\u5404\u4e2a\u793e\u533a\u53bb\u63a8\u51fa\u4e00\u5957\u5927\u5bb6\u90fd\u8ba4\u53ef\u7684\u4e91\u539f\u751f\u5e94\u7528 API\u3002\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*d2BORogVotoAAAAAAAAAAAAAARQnAQ)\\n\\n**\u6301\u7eed\u5f00\u6e90**\\n\\n\u53e6\u5916\u6211\u4eec\u8fd1\u671f\u4e5f\u4f1a\u5c06\u5185\u90e8\u7684\u8fd0\u884c\u65f6\u5b9e\u8df5\u9010\u6b65\u5f00\u53d1\u51fa\u6765\uff0c\u9884\u8ba1\u4e94\u516d\u6708\u4efd\u4f1a\u53d1\u5e03 0.1 \u7248\u672c\uff0c\u5e76\u4fdd\u6301\u6bcf\u6708\u53d1\u5e03\u4e00\u4e2a\u5c0f\u7248\u672c\u7684\u8282\u594f\uff0c\u4e89\u53d6\u5e74\u5e95\u4e4b\u524d\u53d1\u5e03 1.0 \u7248\u672c\u3002\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*Kgr9QLc5TH4AAAAAAAAAAAAAARQnAQ)\\n\\n## \u603b\u7ed3\\n\\n**\u6700\u540e\u505a\u4e00\u4e0b\u5c0f\u7ed3\uff1a**\\n\\n1.Service Mesh \u6a21\u5f0f\u7684\u5f15\u5165\u662f\u5b9e\u73b0\u5e94\u7528\u539f\u4e91\u751f\u7684\u5173\u952e\u8def\u5f84\uff1b\\n\\n2.\u4efb\u4f55\u4e2d\u95f4\u4ef6\u517c\u53ef Mesh \u5316\uff0c\u4f46\u7814\u53d1\u6548\u7387\u95ee\u9898\u4f9d\u7136\u90e8\u5206\u5b58\u5728\uff1b\\n\\n3.Mesh \u5927\u89c4\u6a21\u843d\u5730\u662f\u5de5\u7a0b\u5316\u7684\u4e8b\u60c5\uff0c\u9700\u8981\u5b8c\u6574\u7684\u914d\u5957\u4f53\u7cfb\uff1b\\n\\n4.\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u5c06\u662f\u4e2d\u95f4\u4ef6\u7b49\u57fa\u7840\u6280\u672f\u7684\u672a\u6765\u5f62\u6001\uff0c\u8fdb\u4e00\u6b65\u89e3\u8026\u5e94\u7528\u4e0e\u5206\u5e03\u5f0f\u80fd\u529b\uff1b\\n\\n5.\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u6838\u5fc3\u662f API\uff0c\u671f\u671b\u793e\u533a\u5171\u5efa\u4e00\u4e2a\u6807\u51c6\u3002\\n\\n\u5ef6\u4f38\u9605\u8bfb\\n\\n- [\u5e26\u4f60\u8d70\u8fdb\u4e91\u539f\u751f\u6280\u672f\uff1a\u4e91\u539f\u751f\u5f00\u653e\u8fd0\u7ef4\u4f53\u7cfb\u63a2\u7d22\u548c\u5b9e\u8df5](https://mp.weixin.qq.com/s?__biz=MzUzMzU5Mjc1Nw==&mid=2247488044&idx=1&sn=ef6300d4b451723aa5001cd3deb17fbc&chksm=faa0fdf6cdd774e03ccd9130099674720a81e7e109ecf810af147e08778c6582636769646490&scene=21)\\n\\n- [\u79ef\u8dec\u6b65\u81f3\u5343\u91cc\uff1aQUIC \u534f\u8bae\u5728\u8682\u8681\u96c6\u56e2\u843d\u5730\u4e4b\u7efc\u8ff0](https://mp.weixin.qq.com/s?__biz=MzUzMzU5Mjc1Nw==&mid=2247487717&idx=1&sn=ca9452cdc10989f61afbac2f012ed712&chksm=faa0ff3fcdd77629d8e5c8f6c42af3b4ea227ee3da3d5cdf297b970f51d18b8b1580aac786c3&scene=21)\\n\\n- [Rust \u5927\u5c55\u62f3\u811a\u7684\u65b0\u5174\u9886\u57df\uff1a\u673a\u5bc6\u8ba1\u7b97](https://mp.weixin.qq.com/s?__biz=MzUzMzU5Mjc1Nw==&mid=2247487576&idx=1&sn=0d0575395476db930dab4e0f75e863e5&chksm=faa0ff82cdd77694a6fc42e47d6f20c20310b26cedc13f104f979acd1f02eb5a37ea9cdc8ea5&scene=21)\\n\\n- [Protocol Extension Base On Wasm\u2014\u2014\u534f\u8bae\u6269\u5c55\u7bc7](https://mp.weixin.qq.com/s?__biz=MzUzMzU5Mjc1Nw==&mid=2247487546&idx=1&sn=72c3f1ede27ca4ace7988e11ca20d5f9&chksm=faa0ffe0cdd776f6d17323466b500acee50a371663f18da34d8e4cbe32304d7681cf58ff9b45&scene=21)"},{"id":"/tcpcopy_code_analyze","metadata":{"permalink":"/layotto/blog/tcpcopy_code_analyze","editUrl":"https://github.com/mosn/layotto/edit/main/docs/blog/tcpcopy_code_analyze.md","source":"@site/blog/tcpcopy_code_analyze.md","title":"\u6e90\u7801\u89e3\u6790 4\u5c42\u6d41\u91cf\u6cbb\u7406\uff0ctcp\u6d41\u91cfdump","description":"\u4f5c\u8005\u7b80\u4ecb\uff1a","date":"2024-07-10T10:04:20.000Z","tags":[],"readingTime":4.28,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"\u8682\u8681\u4e91\u539f\u751f\u5e94\u7528\u8fd0\u884c\u65f6\u7684\u63a2\u7d22\u548c\u5b9e\u8df5 - ArchSummit \u4e0a\u6d77","permalink":"/layotto/blog/exploration-and-practice-of-antcloud-native-application-runtime-archsummit-shanghai"},"nextItem":{"title":"MOSN \u5b50\u9879\u76ee Layotto\uff1a\u5f00\u542f\u670d\u52a1\u7f51\u683c+\u5e94\u7528\u8fd0\u884c\u65f6\u65b0\u7bc7\u7ae0","permalink":"/layotto/blog/mosn-subproject-layotto-opening-a-new-chapter-in-service-grid-application-runtime"}},"content":">\u4f5c\u8005\u7b80\u4ecb\uff1a\\n>\u9f9a\u4e2d\u5f3a\uff0c\u662f\u5f00\u6e90\u793e\u533a\u7684\u7231\u597d\u8005\uff0c\u81f4\u529b\u4e8e\u62e5\u62b1\u5f00\u6e90\u3002\\n> \\n>\u5199\u4f5c\u65f6\u95f4: 2022\u5e744\u670826\u65e5\\n\\n\\n## Overview\\n\u6b64\u6587\u6863\u7684\u76ee\u7684\u5728\u4e8e\u5206\u6790 tcp \u6d41\u91cf dump \u7684\u5b9e\u73b0\\n\\n## \u524d\u63d0\uff1a\\n\u6587\u6863\u5185\u5bb9\u6240\u6d89\u53ca\u4ee3\u7801\u7248\u672c\u5982\u4e0b\\n\\n[https://github.com/mosn/layotto](https://github.com/mosn/layotto)\\n\\nLayotto   0e97e970dc504e0298017bd956d2841c44c0810b\uff08main\u5206\u652f\uff09\\n\\n## \u6e90\u7801\u5206\u6790\\n\\n### \u4ee3\u7801\u5747\u5728\uff1a [tcpcopy\u4ee3\u7801](https://github.com/mosn/layotto/tree/main/pkg/filter/network/tcpcopy)\\n\\n### model.go\u5206\u6790\\n\u6b64\u7c7b\u662f tcpcopy \u7684\u914d\u7f6e\u5bf9\u8c61\u7684\u6838\u5fc3\u7c7b\\n\\n```go\\ntype DumpConfig struct {\\n\\tSwitch     string  `json:\\"switch\\"`       // dump \u5f00\u5173.\u914d\u7f6e\u503c\uff1a\'ON\' \u6216 \'OFF\'\\n\\tInterval   int     `json:\\"interval\\"`     // dump \u91c7\u6837\u95f4\u9694\uff0c \u5355\u4f4d: \u79d2\\n\\tDuration   int     `json:\\"duration\\"`     // \u5355\u4e2a\u91c7\u6837\u5468\u671f\uff0c \u5355\u4f4d: \u79d2\\n\\tCpuMaxRate float64 `json:\\"cpu_max_rate\\"` // cpu \u6700\u5927\u4f7f\u7528\u7387\u3002\u5f53\u8d85\u8fc7\u6b64\u9608\u503c,dump \u529f\u80fd\u5c06\u505c\u6b62\\n\\tMemMaxRate float64 `json:\\"mem_max_rate\\"` // mem \u6700\u5927\u4f7f\u7528\u7387\u3002\u5f53\u8d85\u8fc7\u6b64\u9608\u503c,dump \u529f\u80fd\u5c06\u505c\u6b62\\n}\\n\\ntype DumpUploadDynamicConfig struct {\\n\\tUnique_sample_window string             // \u6307\u5b9a\u91c7\u6837\u7a97\u53e3\\n\\tBusinessType         _type.BusinessType // \u4e1a\u52a1\u7c7b\u578b\\n\\tPort                 string             // \u7aef\u53e3\\n\\tBinary_flow_data     []byte             // \u4e8c\u8fdb\u5236\u6570\u636e\\n\\tPortrait_data        string             // \u7528\u6237\u4e0a\u4f20\u7684\u6570\u636e\\n}\\n```\\n\\n### persistence.go\u5206\u6790\\n\u6b64\u7c7b\u662f tcpcopy \u7684 dump \u6301\u4e45\u5316\u6838\u5fc3\u5904\u7406\u7c7b\\n\\n```go\\n// \u8be5\u65b9\u6cd5\u5728 tcpcopy.go \u4e2d OnData \u4e2d\u8c03\u7528\\nfunc IsPersistence() bool {\\n\\t// \u5224\u65ad dump \u5f00\u5173\u662f\u5426\u5f00\u542f\\n\\tif !strategy.DumpSwitch {\\n\\t\\tif log.DefaultLogger.GetLogLevel() >= log.DEBUG {\\n\\t\\t\\tlog.DefaultLogger.Debugf(\\"%s the dump switch is %t\\", model.LogDumpKey, strategy.DumpSwitch)\\n\\t\\t}\\n\\t\\treturn false\\n\\t}\\n\\n\\t// \u5224\u65ad\u662f\u5426\u5728\u91c7\u6837\u7a97\u53e3\u4e2d\\n\\tif atomic.LoadInt32(&strategy.DumpSampleFlag) == 0 {\\n\\t\\tif log.DefaultLogger.GetLogLevel() >= log.DEBUG {\\n\\t\\t\\tlog.DefaultLogger.Debugf(\\"%s the dump sample flag is %d\\", model.LogDumpKey, strategy.DumpSampleFlag)\\n\\t\\t}\\n\\t\\treturn false\\n\\t}\\n\\n\\t// \u5224\u65ad\u662f\u5426 dump \u529f\u80fd\u505c\u6b62\uff08\u83b7\u53d6\u7cfb\u7edf\u8d1f\u8f7d\u5224\u65ad\u5904\u7406\u5668\u548c\u5185\u5b58\u662f\u5426\u8d85\u8fc7 tcpcopy \u7684\u9608\u503c\uff0c\u5982\u679c\u8d85\u8fc7\u5219\u505c\u6b62\uff09\\n\\tif !strategy.IsAvaliable() {\\n\\t\\tif log.DefaultLogger.GetLogLevel() >= log.DEBUG {\\n\\t\\t\\tlog.DefaultLogger.Debugf(\\"%s the system usages are beyond max rate.\\", model.LogDumpKey)\\n\\t\\t}\\n\\t\\treturn false\\n\\t}\\n\\n\\treturn true\\n}\\n\\n// \u6839\u636e\u914d\u7f6e\u4fe1\u606f\u6301\u4e45\u5316\u6570\u636e\\nfunc persistence(config *model.DumpUploadDynamicConfig) {\\n\\t// 1.\u6301\u4e45\u5316\u4e8c\u8fdb\u5236\u6570\u636e\\n\\tif config.Binary_flow_data != nil && config.Port != \\"\\" {\\n\\t\\tif GetTcpcopyLogger().GetLogLevel() >= log.INFO {\\n\\t\\t\\tGetTcpcopyLogger().Infof(\\"[%s][%s]% x\\", config.Unique_sample_window, config.Port, config.Binary_flow_data)\\n\\t\\t}\\n\\t}\\n\\tif config.Portrait_data != \\"\\" && config.BusinessType != \\"\\" {\\n\\t\\t// 2. \u6301\u4e45\u5316\u7528\u6237\u5b9a\u4e49\u7684\u6570\u636e\\n\\t\\tif GetPortraitDataLogger().GetLogLevel() >= log.INFO {\\n\\t\\t\\tGetPortraitDataLogger().Infof(\\"[%s][%s][%s]%s\\", config.Unique_sample_window, config.BusinessType, config.Port, config.Portrait_data)\\n\\t\\t}\\n\\n\\t\\t// 3. \u589e\u91cf\u6301\u4e45\u5316\u5185\u5b58\u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\u7684\u53d8\u52a8\u5185\u5bb9\\n\\t\\tbuf, err := configmanager.DumpJSON()\\n\\t\\tif err != nil {\\n\\t\\t\\tif log.DefaultLogger.GetLogLevel() >= log.DEBUG {\\n\\t\\t\\t\\tlog.DefaultLogger.Debugf(\\"[dump] Failed to load mosn config mem.\\")\\n\\t\\t\\t}\\n\\t\\t\\treturn\\n\\t\\t}\\n\\t\\t// 3.1. \u5982\u679c\u6570\u636e\u53d8\u5316\u5219 dump \\n\\t\\ttmpMd5ValueOfMemDump := common.CalculateMd5ForBytes(buf)\\n\\t\\tmemLogger := GetMemLogger()\\n\\t\\tif tmpMd5ValueOfMemDump != md5ValueOfMemDump ||\\n\\t\\t\\t(tmpMd5ValueOfMemDump == md5ValueOfMemDump && common.GetFileSize(getMemConfDumpFilePath()) <= 0) {\\n\\t\\t\\tmd5ValueOfMemDump = tmpMd5ValueOfMemDump\\n\\t\\t\\tif memLogger.GetLogLevel() >= log.INFO {\\n\\t\\t\\t\\tmemLogger.Infof(\\"[%s]%s\\", config.Unique_sample_window, buf)\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tif memLogger.GetLogLevel() >= log.INFO {\\n\\t\\t\\t\\tmemLogger.Infof(\\"[%s]%+v\\", config.Unique_sample_window, incrementLog)\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n```\\n\\n### tcpcopy.go\u5206\u6790\\n\u6b64\u7c7b\u4e3a\u662f tcpcopy \u7684\u6838\u5fc3\u7c7b\u3002\\n\\n```go\\n// \u5411 Mosn \u6ce8\u518c NetWork \\nfunc init() {\\n\\tapi.RegisterNetwork(\\"tcpcopy\\", CreateTcpcopyFactory)\\n}\\n\\n// \u8fd4\u56de tcpcopy \u5de5\u5382\\nfunc CreateTcpcopyFactory(cfg map[string]interface{}) (api.NetworkFilterChainFactory, error) {\\n\\ttcpConfig := &config{}\\n\\t// dump \u7b56\u7565\u8f6c\u9759\u6001\u914d\u7f6e\\n\\tif stg, ok := cfg[\\"strategy\\"]; ok {\\n\\t...\\n\\t}\\n\\t// TODO extract some other fields\\n\\treturn &tcpcopyFactory{\\n\\t\\tcfg: tcpConfig,\\n\\t}, nil\\n}\\n\\n// \u4f9b pkg/configmanager/parser.go \u8c03\u7528\u6dfb\u52a0\u6216\u8005\u66f4\u65b0Network filter factory\\nfunc (f *tcpcopyFactory) Init(param interface{}) error {\\n\\t// \u8bbe\u7f6e\u76d1\u542c\u7684\u5730\u5740\u548c\u7aef\u53e3\u914d\u7f6e\\n\\t...\\n\\treturn nil\\n}\\n\\n// \u5b9e\u73b0\u7684\u662f ReadFilter \u7684 OnData \u63a5\u53e3\uff0c\u6bcf\u6b21\u4ece\u8fde\u63a5\u62ff\u5230\u6570\u636e\u90fd\u8fdb\u65b9\u6cd5\u8fdb\u884c\u5904\u7406\\nfunc (f *tcpcopyFactory) OnData(data types.IoBuffer) (res api.FilterStatus) {\\n\\t// \u5224\u65ad\u5f53\u524d\u8bf7\u6c42\u6570\u636e\u662f\u5426\u9700\u8981\u91c7\u6837 dump \\n\\tif !persistence.IsPersistence() {\\n\\t\\treturn api.Continue\\n\\t}\\n\\n\\t// \u5f02\u6b65\u7684\u91c7\u6837 dump\\n\\tconfig := model.NewDumpUploadDynamicConfig(strategy.DumpSampleUuid, \\"\\", f.cfg.port, data.Bytes(), \\"\\")\\n\\tpersistence.GetDumpWorkPoolInstance().Schedule(config)\\n\\treturn api.Continue\\n}\\n```\\n\\n\\n\u6700\u540e\u6211\u4eec\u518d\u6765\u56de\u987e\u4e00\u4e0b\u6574\u4f53\u6d41\u7a0b\u8d70\u5411:\\n\\n1. \u4ece tcpcopy.go \u7684\u521d\u59cb\u5316\u51fd\u6570init() \u5f00\u59cb,\u7a0b\u5e8f\u5411 CreateGRPCServerFilterFactory \u4f20\u5165 CreateTcpcopyFactory.\\n\\n2. Mosn \u521b\u5efa\u51fa\u4e00\u4e2afilter chain(\u4ee3\u7801\u4f4d\u7f6e[factory.go](https://github.com/mosn/mosn/tree/master/pkg/filter/network/proxy/factory.go)) ,\u901a\u8fc7\u5faa\u73af\u8c03\u7528CreateFilterChain\u5c06\u6240\u6709\u7684filter\u52a0\u5165\u5230\u94fe\u8def\u7ed3\u6784\u5305\u62ec\u672c\u6587\u7684 tcpcopy.\\n\\n3. \u5f53\u6d41\u91cf\u901a\u8fc7 mosn \u5c06\u4f1a\u8fdb\u5165\u5230 tcpcopy.go \u7684 OnData \u65b9\u6cd5\u8fdb\u884c tcpdump \u7684\u903b\u8f91\u5904\u7406."},{"id":"/mosn-subproject-layotto-opening-a-new-chapter-in-service-grid-application-runtime","metadata":{"permalink":"/layotto/blog/mosn-subproject-layotto-opening-a-new-chapter-in-service-grid-application-runtime","editUrl":"https://github.com/mosn/layotto/edit/main/docs/blog/mosn-subproject-layotto-opening-a-new-chapter-in-service-grid-application-runtime/index.md","source":"@site/blog/mosn-subproject-layotto-opening-a-new-chapter-in-service-grid-application-runtime/index.md","title":"MOSN \u5b50\u9879\u76ee Layotto\uff1a\u5f00\u542f\u670d\u52a1\u7f51\u683c+\u5e94\u7528\u8fd0\u884c\u65f6\u65b0\u7bc7\u7ae0","description":"\u4f5c\u8005\u7b80\u4ecb\uff1a","date":"2024-07-10T10:04:20.000Z","tags":[],"readingTime":31.89,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"\u6e90\u7801\u89e3\u6790 4\u5c42\u6d41\u91cf\u6cbb\u7406\uff0ctcp\u6d41\u91cfdump","permalink":"/layotto/blog/tcpcopy_code_analyze"},"nextItem":{"title":"\u6e90\u7801\u89e3\u6790 7\u5c42\u6d41\u91cf\u6cbb\u7406,\u63a5\u53e3\u9650\u6d41","permalink":"/layotto/blog/code/flowcontrol/flowcontrol_code_analyze"}},"content":">\u4f5c\u8005\u7b80\u4ecb\uff1a\\n\u9a6c\u632f\u519b\uff0c\u82b1\u540d\u53e4\u4eca\uff0c\u5728\u57fa\u7840\u67b6\u6784\u9886\u57df\u8015\u8018\u591a\u5e74\uff0c\u5bf9 Service Mesh \u6709\u6df1\u5ea6\u5b9e\u8df5\u7ecf\u9a8c\uff0c\u76ee\u524d\u5728\u8682\u8681\u96c6\u56e2\u4e2d\u95f4\u4ef6\u56e2\u961f\u8d1f\u8d23 MOSN\u3001Layotto \u7b49\u9879\u76ee\u7684\u5f00\u53d1\u5de5\u4f5c\u3002\\nLayotto \u5b98\u65b9 GitHub \u5730\u5740:[https://github.com/mosn/layotto](https://github.com/mosn/layotto)\\n\\n\u70b9\u51fb\u94fe\u63a5\u5373\u53ef\u89c2\u770b\u73b0\u573a\u89c6\u9891\uff1a[https://www.bilibili.com/video/BV1hq4y1L7FY/](https://www.bilibili.com/video/BV1hq4y1L7FY/)\\n\\nService Mesh \u5728\u5fae\u670d\u52a1\u9886\u57df\u5df2\u7ecf\u975e\u5e38\u6d41\u884c\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u516c\u53f8\u5f00\u59cb\u5728\u5185\u90e8\u843d\u5730\uff0c\u8682\u8681\u4ece Service Mesh \u521a\u51fa\u73b0\u7684\u65f6\u5019\u5f00\u59cb\uff0c\u5c31\u4e00\u76f4\u5728\u8fd9\u4e2a\u65b9\u5411\u4e0a\u5927\u529b\u6295\u5165\uff0c\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u5185\u90e8\u7684 Mesh \u65b9\u6848\u5df2\u7ecf\u8986\u76d6\u6570\u5343\u4e2a\u5e94\u7528\u3001\u6570\u5341\u4e07\u5bb9\u5668\u5e76\u4e14\u7ecf\u8fc7\u4e86\u591a\u6b21\u5927\u4fc3\u8003\u9a8c\uff0cService Mesh \u5e26\u6765\u7684\u4e1a\u52a1\u89e3\u8026\uff0c\u5e73\u6ed1\u5347\u7ea7\u7b49\u4f18\u52bf\u5927\u5927\u63d0\u9ad8\u4e86\u4e2d\u95f4\u4ef6\u7684\u8fed\u4ee3\u6548\u7387\u3002\\n\\n\u5728\u5927\u89c4\u6a21\u843d\u5730\u4ee5\u540e\uff0c\u6211\u4eec\u53c8\u9047\u5230\u4e86\u65b0\u7684\u95ee\u9898\uff0c\u672c\u6587\u4e3b\u8981\u5bf9 Service Mesh \u5728\u8682\u8681\u5185\u90e8\u843d\u5730\u60c5\u51b5\u8fdb\u884c\u56de\u987e\u603b\u7ed3\uff0c\u5e76\u5206\u4eab\u5bf9 Service Mesh \u843d\u5730\u540e\u9047\u5230\u7684\u65b0\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u3002\\n\\n## \u4e00\u3001Service Mesh \u56de\u987e\u4e0e\u603b\u7ed3\\n\\n### A\u3001Service Mesh \u7684\u521d\u8877\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*p8tGTbpLRegAAAAAAAAAAAAAARQnAQ)\\n\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u57fa\u7840\u67b6\u6784\u56e2\u961f\u4e00\u822c\u4f1a\u4e3a\u5e94\u7528\u63d0\u4f9b\u4e00\u4e2a\u5c01\u88c5\u4e86\u5404\u79cd\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u7684 SDK\uff0c\u8fd9\u79cd\u505a\u6cd5\u867d\u7136\u4fdd\u969c\u4e86\u5e94\u7528\u7684\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u7f3a\u70b9\u4e5f\u975e\u5e38\u660e\u663e\uff0c\u6bcf\u6b21\u57fa\u7840\u67b6\u6784\u56e2\u961f\u8fed\u4ee3\u4e00\u4e2a\u65b0\u529f\u80fd\u90fd\u9700\u8981\u4e1a\u52a1\u65b9\u53c2\u4e0e\u5347\u7ea7\u624d\u80fd\u4f7f\u7528\uff0c\u5c24\u5176\u662f bugfix \u7248\u672c\uff0c\u5f80\u5f80\u9700\u8981\u5f3a\u63a8\u4e1a\u52a1\u65b9\u5347\u7ea7\uff0c\u8fd9\u91cc\u9762\u7684\u75db\u82e6\u7a0b\u5ea6\u6bcf\u4e00\u4e2a\u57fa\u7840\u67b6\u6784\u56e2\u961f\u6210\u5458\u90fd\u6df1\u6709\u4f53\u4f1a\u3002\\n\\n\u4f34\u968f\u7740\u5347\u7ea7\u7684\u56f0\u96be\uff0c\u968f\u4e4b\u800c\u6765\u7684\u5c31\u662f\u5e94\u7528\u4f7f\u7528\u7684 SDK \u7248\u672c\u5dee\u522b\u975e\u5e38\u5927\uff0c\u751f\u4ea7\u73af\u5883\u540c\u65f6\u8dd1\u7740\u5404\u79cd\u7248\u672c\u7684 SDK\uff0c\u8fd9\u79cd\u73b0\u8c61\u53c8\u4f1a\u8ba9\u65b0\u529f\u80fd\u7684\u8fed\u4ee3\u5fc5\u987b\u8003\u8651\u5404\u79cd\u517c\u5bb9\uff0c\u5c31\u597d\u50cf\u5e26\u7740\u67b7\u9501\u524d\u8fdb\u4e00\u822c\uff0c\u8fd9\u6837\u968f\u7740\u4e0d\u65ad\u8fed\u4ee3\uff0c\u4f1a\u8ba9\u4ee3\u7801\u7ef4\u62a4\u975e\u5e38\u56f0\u96be\uff0c\u6709\u4e9b\u7956\u4f20\u903b\u8f91\u66f4\u662f\u4e00\u4e0d\u5c0f\u5fc3\u5c31\u4f1a\u6389\u5751\u91cc\u3002\\n\\n\u540c\u65f6\u8fd9\u79cd\u201c\u91cd\u201dSDK \u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u5bfc\u81f4\u5f02\u6784\u8bed\u8a00\u7684\u6cbb\u7406\u80fd\u529b\u975e\u5e38\u8584\u5f31\uff0c\u5982\u679c\u60f3\u4e3a\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e00\u4e2a\u529f\u80fd\u5b8c\u6574\u4e14\u80fd\u6301\u7eed\u8fed\u4ee3\u7684 SDK \u5176\u4e2d\u7684\u6210\u672c\u53ef\u60f3\u800c\u77e5\u3002\\n\\n18 \u5e74\u7684\u65f6\u5019\uff0cService Mesh \u5728\u56fd\u5185\u6301\u7eed\u706b\u7206\uff0c\u8fd9\u79cd\u67b6\u6784\u7406\u5ff5\u65e8\u5728\u628a\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u8ddf\u4e1a\u52a1\u89e3\u8026\uff0c\u8ba9\u4e24\u8005\u901a\u8fc7\u8fdb\u7a0b\u7ea7\u522b\u7684\u901a\u4fe1\u65b9\u5f0f\u8fdb\u884c\u4ea4\u4e92\u3002\u5728\u8fd9\u79cd\u67b6\u6784\u6a21\u5f0f\u4e0b\uff0c\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u4ece\u5e94\u7528\u4e2d\u5265\u79bb\uff0c\u8fd0\u884c\u5728\u72ec\u7acb\u7684\u8fdb\u7a0b\u4e2d\uff0c\u8fed\u4ee3\u5347\u7ea7\u8ddf\u4e1a\u52a1\u8fdb\u7a0b\u65e0\u5173\uff0c\u8fd9\u5c31\u53ef\u4ee5\u8ba9\u5404\u79cd\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u5feb\u901f\u8fed\u4ee3\uff0c\u5e76\u4e14\u7531\u4e8e\u5347\u7ea7\u6210\u672c\u4f4e\uff0c\u56e0\u6b64\u6bcf\u4e2a\u7248\u672c\u90fd\u53ef\u4ee5\u5168\u90e8\u5347\u7ea7\uff0c\u89e3\u51b3\u4e86\u5386\u53f2\u5305\u88b1\u95ee\u9898\uff0c\u540c\u65f6 SDK \u53d8\u201c\u8f7b\u201d\u76f4\u63a5\u964d\u4f4e\u4e86\u5f02\u6784\u8bed\u8a00\u7684\u6cbb\u7406\u95e8\u69db\uff0c\u518d\u4e5f\u4e0d\u7528\u4e3a\u9700\u8981\u7ed9\u5404\u4e2a\u8bed\u8a00\u5f00\u53d1\u76f8\u540c\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u7684 SDK \u5934\u75bc\u4e86\u3002\\n\\n### B\u3001Service Mesh \u843d\u5730\u73b0\u72b6\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*rRG_TYlHMqYAAAAAAAAAAAAAARQnAQ)\\n\u8682\u8681\u5f88\u5feb\u610f\u8bc6\u5230\u4e86 Service Mesh \u7684\u4ef7\u503c\uff0c\u5168\u529b\u6295\u5165\u5230\u8fd9\u4e2a\u65b9\u5411\uff0c\u7528 Go \u8bed\u8a00\u5f00\u53d1\u4e86 MOSN \u8fd9\u6837\u53ef\u4ee5\u5bf9\u6807 envoy \u7684\u4f18\u79c0\u6570\u636e\u9762\uff0c\u5168\u6743\u8d1f\u8d23\u670d\u52a1\u8def\u7531\uff0c\u8d1f\u8f7d\u5747\u8861\uff0c\u7194\u65ad\u9650\u6d41\u7b49\u80fd\u529b\u7684\u5efa\u8bbe\uff0c\u5927\u5927\u52a0\u5feb\u4e86\u516c\u53f8\u5185\u90e8\u843d\u5730 Service Mesh \u7684\u8fdb\u5ea6\u3002\\n\\n\u73b0\u5728 MOSN \u5728\u8682\u8681\u5185\u90e8\u5df2\u7ecf\u8986\u76d6\u4e86\u6570\u5343\u4e2a\u5e94\u7528\u3001\u6570\u5341\u4e07\u5bb9\u5668\uff0c\u65b0\u521b\u5efa\u7684\u5e94\u7528\u9ed8\u8ba4\u63a5\u5165 MOSN\uff0c\u5f62\u6210\u95ed\u73af\u3002\u800c\u4e14\u5728\u5927\u5bb6\u6700\u5173\u5fc3\u7684\u8d44\u6e90\u5360\u7528\u3001\u6027\u80fd\u635f\u8017\u65b9\u9762 MOSN \u4e5f\u4ea4\u51fa\u4e86\u4e00\u4efd\u8ba9\u4eba\u6ee1\u610f\u7684\u7b54\u5377\uff1a\\n1.  RT \u5c0f\u4e8e 0.2ms\\n\\n2.  CPU \u5360\u7528\u589e\u52a0 0%~2%\\n\\n3.  \u5185\u5b58\u6d88\u8017\u589e\u957f\u5c0f\u4e8e 15M\\n\\n\u7531\u4e8e Service Mesh \u964d\u4f4e\u4e86\u5f02\u6784\u8bed\u8a00\u7684\u670d\u52a1\u6cbb\u7406\u95e8\u69db\uff0cNodeJS\u3001C++\u7b49\u5f02\u6784\u6280\u672f\u6808\u4e5f\u5728\u6301\u7eed\u63a5\u5165\u5230 MOSN \u4e2d\u3002\\n\\n\u5728\u770b\u5230 RPC \u80fd\u529b Mesh \u5316\u5e26\u6765\u7684\u5de8\u5927\u6536\u76ca\u4e4b\u540e\uff0c\u8682\u8681\u5185\u90e8\u8fd8\u628a MQ\uff0cCache\uff0cConfig \u7b49\u4e2d\u95f4\u4ef6\u80fd\u529b\u90fd\u8fdb\u884c\u4e86 Mesh \u5316\u6539\u9020\uff0c\u4e0b\u6c89\u5230 MOSN\uff0c\u63d0\u9ad8\u4e86\u4e2d\u95f4\u4ef6\u4ea7\u54c1\u6574\u4f53\u7684\u8fed\u4ee3\u6548\u7387\u3002\\n\\n### C\u3001\u65b0\u7684\u6311\u6218\\n\\n1. \u5e94\u7528\u8ddf\u57fa\u7840\u8bbe\u65bd\u5f3a\u7ed1\u5b9a\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*nKxcTKLp4EoAAAAAAAAAAAAAARQnAQ)\\n\u4e00\u4e2a\u73b0\u4ee3\u5206\u5e03\u5f0f\u5e94\u7528\uff0c\u5f80\u5f80\u4f1a\u540c\u65f6\u4f9d\u8d56 RPC\u3001Cache\u3001MQ\u3001Config \u7b49\u5404\u79cd\u5206\u5e03\u5f0f\u80fd\u529b\u6765\u5b8c\u6210\u4e1a\u52a1\u903b\u8f91\u7684\u5904\u7406\u3002\\n\\n\u5f53\u521d\u770b\u5230 RPC \u4e0b\u6c89\u7684\u7ea2\u5229\u4ee5\u540e\uff0c\u5176\u4ed6\u5404\u79cd\u80fd\u529b\u4e5f\u90fd\u5feb\u901f\u4e0b\u6c89\u3002\u521d\u671f\uff0c\u5927\u5bb6\u90fd\u4f1a\u4ee5\u81ea\u5df1\u6700\u719f\u6089\u7684\u65b9\u5f0f\u6765\u5f00\u53d1\uff0c\u8fd9\u5c31\u5bfc\u81f4\u6ca1\u6709\u7edf\u4e00\u7684\u89c4\u5212\u7ba1\u7406\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5e94\u7528\u4f9d\u8d56\u4e86\u5404\u79cd\u57fa\u7840\u8bbe\u65bd\u7684 SDK\uff0c\u800c\u6bcf\u79cd SDK \u53c8\u4ee5\u81ea\u5df1\u7279\u6709\u7684\u65b9\u5f0f\u8ddf MOSN \u8fdb\u884c\u4ea4\u4e92\uff0c\u4f7f\u7528\u7684\u5f80\u5f80\u90fd\u662f\u7531\u539f\u751f\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u7684\u79c1\u6709\u534f\u8bae\uff0c\u8fd9\u76f4\u63a5\u5bfc\u81f4\u4e86\u590d\u6742\u7684\u4e2d\u95f4\u4ef6\u80fd\u529b\u867d\u7136\u4e0b\u6c89\uff0c\u4f46\u5e94\u7528\u672c\u8d28\u4e0a\u8fd8\u662f\u88ab\u7ed1\u5b9a\u5230\u4e86\u57fa\u7840\u8bbe\u65bd\uff0c\u6bd4\u5982\u60f3\u628a\u7f13\u5b58\u4ece Redis \u8fc1\u79fb\u5230 Memcache \u7684\u8bdd\uff0c\u4ecd\u65e7\u9700\u8981\u4e1a\u52a1\u65b9\u5347\u7ea7 SDK\uff0c\u8fd9\u79cd\u95ee\u9898\u5728\u5e94\u7528\u4e0a\u4e91\u7684\u5927\u8d8b\u52bf\u4e0b\u8868\u73b0\u7684\u66f4\u4e3a\u7a81\u51fa\uff0c\u8bd5\u60f3\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u8981\u90e8\u7f72\u5728\u4e91\u4e0a\uff0c\u7531\u4e8e\u8be5\u5e94\u7528\u4f9d\u8d56\u4e86\u5404\u79cd\u57fa\u7840\u8bbe\u65bd\uff0c\u52bf\u5fc5\u8981\u5148\u628a\u6574\u4e2a\u57fa\u7840\u8bbe\u65bd\u642c\u5230\u4e91\u4e0a\u624d\u80fd\u8ba9\u5e94\u7528\u987a\u5229\u90e8\u7f72\uff0c\u8fd9\u5176\u4e2d\u7684\u6210\u672c\u53ef\u60f3\u800c\u77e5\u3002\\n\u56e0\u6b64\u5982\u4f55\u8ba9\u5e94\u7528\u8ddf\u57fa\u7840\u8bbe\u65bd\u89e3\u7ed1\uff0c\u4f7f\u5176\u5177\u5907\u53ef\u79fb\u690d\u80fd\u529b\uff0c\u80fd\u591f\u65e0\u611f\u77e5\u8de8\u5e73\u53f0\u90e8\u7f72\u662f\u6211\u4eec\u9762\u4e34\u7684\u7b2c\u4e00\u4e2a\u95ee\u9898\u3002\\n\\n2. \u5f02\u6784\u8bed\u8a00\u63a5\u5165\u6210\u672c\u9ad8\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*oIdQQZmgtyUAAAAAAAAAAAAAARQnAQ)\\n\u4e8b\u5b9e\u8bc1\u660e Service Mesh \u786e\u5b9e\u964d\u4f4e\u4e86\u5f02\u6784\u8bed\u8a00\u7684\u63a5\u5165\u95e8\u69db\uff0c\u4f46\u5728\u8d8a\u6765\u8d8a\u591a\u7684\u57fa\u7840\u80fd\u529b\u4e0b\u6c89\u5230 MOSN \u4ee5\u540e\uff0c\u6211\u4eec\u9010\u6e10\u610f\u8bc6\u5230\u4e3a\u4e86\u8ba9\u5e94\u7528\u8ddf MOSN \u4ea4\u4e92\uff0c\u5404\u79cd SDK \u91cc\u90fd\u9700\u8981\u5bf9\u901a\u4fe1\u534f\u8bae\uff0c\u5e8f\u5217\u5316\u534f\u8bae\u8fdb\u884c\u5f00\u53d1\uff0c\u5982\u679c\u518d\u52a0\u4e0a\u9700\u8981\u5bf9\u5404\u79cd\u5f02\u6784\u8bed\u8a00\u90fd\u63d0\u4f9b\u76f8\u540c\u7684\u529f\u80fd\uff0c\u90a3\u7ef4\u62a4\u96be\u5ea6\u5c31\u4f1a\u6210\u500d\u4e0a\u6da8\uff0c\\n\\nService Mesh \u8ba9\u91cd SDK \u6210\u4e3a\u4e86\u5386\u53f2\uff0c\u4f46\u5bf9\u4e8e\u73b0\u5728\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u767e\u82b1\u9f50\u653e\u3001\u5404\u79cd\u5e94\u7528\u53c8\u5f3a\u4f9d\u8d56\u57fa\u7840\u8bbe\u65bd\u7684\u573a\u666f\u6765\u8bf4\uff0c\u6211\u4eec\u53d1\u73b0\u73b0\u6709\u7684 SDK \u8fd8\u4e0d\u591f\u8584\uff0c\u5f02\u6784\u8bed\u8a00\u63a5\u5165\u7684\u95e8\u69db\u8fd8\u4e0d\u591f\u4f4e\uff0c\u5982\u4f55\u8fdb\u4e00\u6b65\u964d\u4f4e\u5f02\u6784\u8bed\u8a00\u7684\u63a5\u5165\u95e8\u69db\u662f\u6211\u4eec\u9762\u4e34\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\u3002\\n\\n## \u4e8c\u3001Multi Runtime \u7406\u8bba\u6982\u8ff0\\n\\n### A\u3001\u4ec0\u4e48\u662f Runtime?\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*hQT-Spc5rI4AAAAAAAAAAAAAARQnAQ)\\n20 \u5e74\u521d\u7684\u65f6\u5019\uff0cBilgin lbryam \u53d1\u8868\u4e86\u4e00\u7bc7\u540d\u4e3a\\nMulti-Runtime Microservices Architecture\\n\u7684\u6587\u7ae0\uff0c\u91cc\u9762\u5bf9\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u4e00\u9636\u6bb5\u7684\u5f62\u6001\u8fdb\u884c\u4e86\u8ba8\u8bba\u3002\\n\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4f5c\u8005\u628a\u5206\u5e03\u5f0f\u670d\u52a1\u7684\u9700\u6c42\u8fdb\u884c\u4e86\u62bd\u8c61\uff0c\u603b\u5171\u5206\u4e3a\u4e86\u56db\u5927\u7c7b\uff1a\\n1.  \u751f\u547d\u5468\u671f\uff08Lifecycle\uff09\\n    \u4e3b\u8981\u6307\u5e94\u7528\u7684\u7f16\u8bd1\u3001\u6253\u5305\u3001\u90e8\u7f72\u7b49\u4e8b\u60c5\uff0c\u5728\u4e91\u539f\u751f\u7684\u5927\u8d8b\u52bf\u4e0b\u57fa\u672c\u88ab docker\u3001kubernetes \u627f\u5305\u3002\\n\\n2.  \u7f51\u7edc\uff08Networking\uff09\\n    \u53ef\u9760\u7684\u7f51\u7edc\u662f\u5fae\u670d\u52a1\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u57fa\u672c\u4fdd\u969c\uff0cService Mesh \u6b63\u662f\u5728\u8fd9\u65b9\u9762\u505a\u4e86\u5c1d\u8bd5\uff0c\u76ee\u524d MOSN\u3001envoy \u7b49\u6d41\u884c\u7684\u6570\u636e\u9762\u7684\u7a33\u5b9a\u6027\u3001\u5b9e\u7528\u6027\u90fd\u5df2\u7ecf\u5f97\u5230\u4e86\u5145\u5206\u9a8c\u8bc1\u3002\\n\\n3.  \u72b6\u6001\uff08State\uff09\\n     \u5206\u5e03\u5f0f\u7cfb\u7edf\u9700\u8981\u7684\u670d\u52a1\u7f16\u6392\uff0c\u5de5\u4f5c\u6d41\uff0c\u5206\u5e03\u5f0f\u5355\u4f8b\uff0c\u8c03\u5ea6\uff0c\u5e42\u7b49\u6027\uff0c\u6709\u72b6\u6001\u7684\u9519\u8bef\u6062\u590d\uff0c\u7f13\u5b58\u7b49\u64cd\u4f5c\u90fd\u53ef\u4ee5\u7edf\u4e00\u5f52\u4e3a\u5e95\u5c42\u7684\u72b6\u6001\u7ba1\u7406\u3002\\n\\n4.  \u7ed1\u5b9a\uff08Binding\uff09\\n     \u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u4e0d\u4ec5\u9700\u8981\u8ddf\u5176\u4ed6\u7cfb\u7edf\u901a\u4fe1\uff0c\u8fd8\u9700\u8981\u96c6\u6210\u5404\u79cd\u5916\u90e8\u7cfb\u7edf\uff0c\u56e0\u6b64\u5bf9\u4e8e\u534f\u8bae\u8f6c\u6362\uff0c\u591a\u79cd\u4ea4\u4e92\u6a21\u578b\u3001\u9519\u8bef\u6062\u590d\u6d41\u7a0b\u7b49\u529f\u80fd\u4e5f\u90fd\u6709\u5f3a\u4f9d\u8d56\u3002\\n\\n\u660e\u786e\u4e86\u9700\u6c42\u4ee5\u540e\uff0c\u501f\u9274\u4e86 Service Mesh \u7684\u601d\u8def\uff0c\u4f5c\u8005\u5bf9\u5206\u5e03\u5f0f\u670d\u52a1\u7684\u67b6\u6784\u6f14\u8fdb\u8fdb\u884c\u4e86\u5982\u4e0b\u603b\u7ed3\uff1a\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*rwS2Q5yMp_sAAAAAAAAAAAAAARQnAQ)\\n\u7b2c\u4e00\u9636\u6bb5\u5c31\u662f\u628a\u5404\u79cd\u57fa\u7840\u8bbe\u65bd\u80fd\u529b\u4ece\u5e94\u7528\u4e2d\u5265\u79bb\u89e3\u8026\uff0c\u901a\u901a\u53d8\u6210\u72ec\u7acb sidecar \u6a21\u578b\u4f34\u968f\u7740\u5e94\u7528\u4e00\u8d77\u8fd0\u884c\u3002\\n\\n\u7b2c\u4e8c\u9636\u6bb5\u662f\u628a\u5404\u79cd sidecar \u63d0\u4f9b\u7684\u80fd\u529b\u7edf\u4e00\u62bd\u8c61\u6210\u82e5\u5e72\u4e2a Runtime\uff0c\u8fd9\u6837\u5e94\u7528\u4ece\u9762\u5411\u57fa\u7840\u7ec4\u4ef6\u5f00\u53d1\u5c31\u6f14\u53d8\u6210\u4e86\u9762\u5411\u5404\u79cd\u5206\u5e03\u5f0f\u80fd\u529b\u5f00\u53d1\uff0c\u5f7b\u5e95\u5c4f\u853d\u6389\u4e86\u5e95\u5c42\u5b9e\u73b0\u7ec6\u8282\uff0c\u800c\u4e14\u7531\u4e8e\u662f\u9762\u5411\u80fd\u529b\uff0c\u9664\u4e86\u8c03\u7528\u63d0\u4f9b\u5404\u79cd\u80fd\u529b\u7684 API \u4e4b\u5916\uff0c\u5e94\u7528\u518d\u4e5f\u4e0d\u9700\u8981\u4f9d\u8d56\u5404\u79cd\u5404\u6837\u57fa\u7840\u8bbe\u65bd\u63d0\u4f9b\u7684 SDK \u4e86\u3002\\n\\n\u4f5c\u8005\u7684\u601d\u8def\u8ddf\u6211\u4eec\u5e0c\u671b\u89e3\u51b3\u7684\u95ee\u9898\u4e00\u81f4\uff0c\u6211\u4eec\u51b3\u5b9a\u4f7f\u7528 Runtime \u7684\u7406\u5ff5\u6765\u89e3\u51b3 Service Mesh \u53d1\u5c55\u5230\u73b0\u5728\u6240\u9047\u5230\u7684\u65b0\u95ee\u9898\u3002\\n\\n### B\u3001Service Mesh vs Runtime\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*srPVSYTEHc4AAAAAAAAAAAAAARQnAQ)\\n\u4e3a\u4e86\u8ba9\u5927\u5bb6\u5bf9 Runtime \u6709\u4e00\u4e2a\u66f4\u52a0\u6e05\u6670\u7684\u8ba4\u8bc6\uff0c\u4e0a\u56fe\u9488\u5bf9 Service Mesh \u8ddf Runtime \u4e24\u79cd\u7406\u5ff5\u7684\u5b9a\u4f4d\u3001\u4ea4\u4e92\u65b9\u5f0f\u3001\u901a\u4fe1\u534f\u8bae\u4ee5\u53ca\u80fd\u529b\u4e30\u5bcc\u5ea6\u8fdb\u884c\u4e86\u603b\u7ed3\uff0c\u53ef\u4ee5\u770b\u5230\u76f8\u6bd4 Service Mesh \u800c\u8a00\uff0cRuntime \u63d0\u4f9b\u4e86\u8bed\u4e49\u660e\u786e\u3001\u80fd\u529b\u4e30\u5bcc\u7684 API\uff0c\u53ef\u4ee5\u8ba9\u5e94\u7528\u8ddf\u5b83\u7684\u4ea4\u4e92\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u76f4\u63a5\u3002\\n\\n## \u4e09\u3001MOSN \u5b50\u9879\u76ee Layotto\\n\\n### A\u3001dapr \u8c03\u7814\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*Ab9HSYIK7CQAAAAAAAAAAAAAARQnAQ)\\ndapr \u662f\u793e\u533a\u4e2d\u4e00\u6b3e\u77e5\u540d\u7684 Runtime \u5b9e\u73b0\u4ea7\u54c1\uff0c\u6d3b\u8dc3\u5ea6\u4e5f\u6bd4\u8f83\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u9996\u5148\u8c03\u7814\u4e86 dapr \u7684\u60c5\u51b5\uff0c\u53d1\u73b0 dapr \u5177\u6709\u5982\u4e0b\u4f18\u52bf\uff1a\\n1.  \u63d0\u4f9b\u4e86\u591a\u79cd\u5206\u5e03\u5f0f\u80fd\u529b\uff0cAPI \u5b9a\u4e49\u6e05\u6670\uff0c\u57fa\u672c\u80fd\u6ee1\u8db3\u4e00\u822c\u7684\u4f7f\u7528\u573a\u666f\u3002\\n\\n2.  \u9488\u5bf9\u5404\u79cd\u80fd\u529b\u90fd\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u5b9e\u73b0\u7ec4\u4ef6\uff0c\u57fa\u672c\u6db5\u76d6\u4e86\u5e38\u7528\u7684\u4e2d\u95f4\u4ef6\u4ea7\u54c1\uff0c\u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u7531\u9009\u62e9\u3002\\n\\n\u5f53\u8003\u8651\u5982\u4f55\u5728\u516c\u53f8\u5185\u90e8\u843d\u5730 dapr \u65f6\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u4e24\u79cd\u65b9\u6848\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff1a\\n\\n1.  \u66ff\u6362\uff1a\u5e9f\u5f03\u6389\u73b0\u5728\u7684 MOSN\uff0c\u7528 dapr \u8fdb\u884c\u66ff\u6362\uff0c\u8fd9\u79cd\u65b9\u6848\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a\\n\\na.  dapr \u867d\u7136\u63d0\u4f9b\u4e86\u5f88\u591a\u5206\u5e03\u5f0f\u80fd\u529b\uff0c\u4f46\u76ee\u524d\u5e76\u4e0d\u5177\u5907 Service Mesh \u5305\u542b\u7684\u4e30\u5bcc\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u3002\\n\\nb.  MOSN \u5728\u516c\u53f8\u5185\u90e8\u5df2\u7ecf\u5927\u89c4\u6a21\u843d\u5730\uff0c\u5e76\u4e14\u7ecf\u8fc7\u4e86\u591a\u6b21\u5927\u4fc3\u8003\u9a8c\uff0c\u76f4\u63a5\u7528 dapr \u6765\u66ff\u6362 MOSN \u7a33\u5b9a\u6027\u6709\u5f85\u9a8c\u8bc1\u3002\\n\\n2.  \u5171\u5b58\uff1a\u65b0\u589e\u4e00\u4e2a dapr \u5bb9\u5668\uff0c\u8ddf MOSN \u4ee5\u4e24\u4e2a sidecar \u7684\u6a21\u5f0f\u8fdb\u884c\u90e8\u7f72\u3002\u8fd9\u79cd\u65b9\u6848\u540c\u6837\u5b58\u5728\u4e24\u4e2a\u95ee\u9898\uff1a\\n\\na.  \u5f15\u5165\u4e00\u4e2a\u65b0\u7684 sidecar\uff0c\u6211\u4eec\u5c31\u9700\u8981\u8003\u8651\u5b83\u914d\u5957\u7684\u5347\u7ea7\u3001\u76d1\u63a7\u3001\u6ce8\u5165\u7b49\u7b49\u4e8b\u60c5\uff0c\u8fd0\u7ef4\u6210\u672c\u98d9\u5347\u3002\\n\\nb.  \u591a\u7ef4\u62a4\u4e00\u4e2a\u5bb9\u5668\u610f\u5473\u7740\u591a\u4e86\u4e00\u5c42\u6302\u6389\u7684\u98ce\u9669\uff0c\u8fd9\u4f1a\u964d\u4f4e\u73b0\u5728\u7684\u7cfb\u7edf\u53ef\u7528\u6027\u3002\\n\\n\u540c\u6837\u7684\uff0c\u5982\u679c\u4f60\u76ee\u524d\u6b63\u5728\u4f7f\u7528 envoy \u4f5c\u4e3a\u6570\u636e\u9762\uff0c\u4e5f\u4f1a\u9762\u4e34\u4e0a\u8ff0\u95ee\u9898\u3002\\n\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u628a Runtime \u8ddf Service Mesh \u4e24\u8005\u7ed3\u5408\u8d77\u6765\uff0c\u901a\u8fc7\u4e00\u4e2a\u5b8c\u6574\u7684 sidecar \u8fdb\u884c\u90e8\u7f72\uff0c\u5728\u4fdd\u8bc1\u7a33\u5b9a\u6027\u3001\u8fd0\u7ef4\u6210\u672c\u4e0d\u53d8\u7684\u524d\u63d0\u4e0b\uff0c\u6700\u5927\u7a0b\u5ea6\u590d\u7528\u73b0\u6709\u7684\u5404\u79cd Mesh \u80fd\u529b\u3002\u6b64\u5916\u6211\u4eec\u8fd8\u5e0c\u671b\u8fd9\u90e8\u5206 Runtime \u80fd\u529b\u9664\u4e86\u8ddf MOSN \u7ed3\u5408\u8d77\u6765\u4e4b\u5916\uff0c\u672a\u6765\u4e5f\u53ef\u4ee5\u8ddf envoy \u7ed3\u5408\u8d77\u6765\uff0c\u89e3\u51b3\u66f4\u591a\u573a\u666f\u4e2d\u7684\u95ee\u9898\uff0cLayotto \u5c31\u662f\u5728\u8fd9\u6837\u7684\u80cc\u666f\u4e0b\u8bde\u751f\u3002\\n\\n### B\u3001Layotto \u67b6\u6784\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*sdGoSYB_XFUAAAAAAAAAAAAAARQnAQ)\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0cLayotto \u662f\u6784\u5efa\u5728 MOSN \u4e4b\u4e0a\uff0c\u5728\u4e0b\u5c42\u5bf9\u63a5\u4e86\u5404\u79cd\u57fa\u7840\u8bbe\u65bd\uff0c\u5411\u4e0a\u5c42\u5e94\u7528\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\uff0c\u5177\u6709\u5404\u79cd\u5404\u6837\u5206\u5e03\u5f0f\u80fd\u529b\u7684\u6807\u51c6 API\u3002\u5bf9\u4e8e\u63a5\u5165 Layotto \u7684\u5e94\u7528\u6765\u8bf4\uff0c\u5f00\u53d1\u8005\u4e0d\u518d\u9700\u8981\u5173\u5fc3\u5e95\u5c42\u5404\u79cd\u7ec4\u4ef6\u7684\u5b9e\u73b0\u5dee\u5f02\uff0c\u53ea\u9700\u8981\u5173\u6ce8\u5e94\u7528\u9700\u8981\u4ec0\u4e48\u6837\u7684\u80fd\u529b\uff0c\u7136\u540e\u8c03\u7528\u5bf9\u5e94\u80fd\u529b\u7684 API \u5373\u53ef\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f7b\u5e95\u8ddf\u5e95\u5c42\u57fa\u7840\u8bbe\u65bd\u89e3\u7ed1\u3002\\n\\n\u5bf9\u5e94\u7528\u6765\u8bf4\uff0c\u4ea4\u4e92\u5206\u4e3a\u4e24\u5757\uff0c\u4e00\u4e2a\u662f\u4f5c\u4e3a gRPC Client \u8c03\u7528 Layotto \u7684\u6807\u51c6 API\uff0c\u4e00\u4e2a\u662f\u4f5c\u4e3a gRPC Server \u6765\u5b9e\u73b0 Layotto \u7684\u56de\u8c03\uff0c\u5f97\u5229\u4e8egRPC \u4f18\u79c0\u7684\u8de8\u8bed\u8a00\u652f\u6301\u80fd\u529b\uff0c\u5e94\u7528\u4e0d\u518d\u9700\u8981\u5173\u5fc3\u901a\u4fe1\u3001\u5e8f\u5217\u5316\u7b49\u7ec6\u8282\u95ee\u9898\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\u5f02\u6784\u6280\u672f\u6808\u7684\u4f7f\u7528\u95e8\u69db\u3002\\n\\n\u9664\u4e86\u9762\u5411\u5e94\u7528\uff0cLayotto \u4e5f\u5411\u8fd0\u7ef4\u5e73\u53f0\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u53ef\u4ee5\u628a\u5e94\u7528\u8ddf sidecar \u7684\u8fd0\u884c\u72b6\u6001\u53cd\u9988\u7ed9\u8fd0\u7ef4\u5e73\u53f0\uff0c\u65b9\u4fbf SRE \u540c\u5b66\u53ca\u65f6\u4e86\u89e3\u5e94\u7528\u7684\u8fd0\u884c\u72b6\u6001\u5e76\u9488\u5bf9\u4e0d\u540c\u72b6\u6001\u505a\u51fa\u4e0d\u540c\u7684\u4e3e\u63aa\uff0c\u8be5\u529f\u80fd\u8003\u8651\u5230\u8ddf k8s \u7b49\u5df2\u6709\u7684\u5e73\u53f0\u96c6\u6210\uff0c\u56e0\u6b64\u6211\u4eec\u63d0\u4f9b\u4e86 HTTP \u534f\u8bae\u7684\u8bbf\u95ee\u65b9\u5f0f\u3002\\n\\n\u9664\u4e86 Layotto \u672c\u8eab\u8bbe\u8ba1\u4ee5\u5916\uff0c\u9879\u76ee\u8fd8\u6d89\u53ca\u4e24\u5757\u6807\u51c6\u5316\u5efa\u8bbe\uff0c\u9996\u5148\u60f3\u8981\u5236\u5b9a\u4e00\u5957\u8bed\u4e49\u660e\u786e\uff0c\u9002\u7528\u573a\u666f\u5e7f\u6cdb\u7684 API \u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\u60c5\uff0c\u4e3a\u6b64\u6211\u4eec\u8ddf\u963f\u91cc\u3001 dapr \u793e\u533a\u8fdb\u884c\u4e86\u5408\u4f5c\uff0c\u5e0c\u671b\u80fd\u591f\u63a8\u8fdb Runtime API \u6807\u51c6\u5316\u7684\u5efa\u8bbe\uff0c\u5176\u6b21\u5bf9\u4e8e dapr \u793e\u533a\u5df2\u7ecf\u5b9e\u73b0\u7684\u5404\u79cd\u80fd\u529b\u7684 Components \u6765\u8bf4\uff0c\u6211\u4eec\u7684\u539f\u5219\u662f\u4f18\u5148\u590d\u7528\u3001\u5176\u6b21\u5f00\u53d1\uff0c\u5c3d\u91cf\u4e0d\u628a\u7cbe\u529b\u6d6a\u8d39\u5728\u5df2\u6709\u7684\u7ec4\u4ef6\u4e0a\u9762\uff0c\u91cd\u590d\u9020\u8f6e\u5b50\u3002\\n\\n\u6700\u540e Layotto \u76ee\u524d\u867d\u7136\u662f\u6784\u5efa\u5728 MOSN \u4e4b\u4e0a\uff0c\u672a\u6765\u6211\u4eec\u5e0c\u671b Layotto \u53ef\u4ee5\u8dd1\u5728 envoy \u4e0a\uff0c\u8fd9\u6837\u53ea\u8981\u5e94\u7528\u63a5\u5165\u4e86 Service Mesh\uff0c\u65e0\u8bba\u6570\u636e\u9762\u4f7f\u7528\u7684\u662f MOSN \u8fd8\u662f envoy\uff0c\u90fd\u53ef\u4ee5\u5728\u4e0a\u9762\u589e\u52a0 Runtime\u80fd\u529b\u3002\\n\\n### C\u3001Layotto \u7684\u79fb\u690d\u6027\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*2DrSQJ6GL8cAAAAAAAAAAAAAARQnAQ)\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u4e00\u65e6\u5b8c\u6210 Runtime API \u7684\u6807\u51c6\u5316\u5efa\u8bbe\uff0c\u63a5\u5165 Layotto \u7684\u5e94\u7528\u5929\u7136\u5177\u5907\u4e86\u53ef\u79fb\u690d\u6027\uff0c\u5e94\u7528\u4e0d\u9700\u8981\u4efb\u4f55\u6539\u9020\u5c31\u53ef\u4ee5\u5728\u79c1\u6709\u4e91\u4ee5\u53ca\u5404\u79cd\u516c\u6709\u4e91\u4e0a\u90e8\u7f72\uff0c\u5e76\u4e14\u7531\u4e8e\u4f7f\u7528\u7684\u662f\u6807\u51c6 API\uff0c\u5e94\u7528\u4e5f\u53ef\u4ee5\u65e0\u9700\u4efb\u4f55\u6539\u9020\u5c31\u5728 Layotto \u8ddf dapr \u4e4b\u95f4\u81ea\u7531\u5207\u6362\u3002\\n\\n### D\u3001\u540d\u5b57\u542b\u4e49\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*CCckTZ_gRsMAAAAAAAAAAAAAARQnAQ)\\n\u4ece\u4e0a\u9762\u7684\u67b6\u6784\u56fe\u53ef\u4ee5\u770b\u51fa\uff0cLayotto \u9879\u76ee\u672c\u8eab\u662f\u5e0c\u671b\u5c4f\u853d\u57fa\u7840\u8bbe\u65bd\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u5411\u4e0a\u5c42\u5e94\u7528\u7edf\u4e00\u63d0\u4f9b\u5404\u79cd\u5206\u5e03\u5f0f\u80fd\u529b\uff0c\u8fd9\u79cd\u505a\u6cd5\u5c31\u597d\u50cf\u662f\u5728\u5e94\u7528\u8ddf\u57fa\u7840\u8bbe\u65bd\u4e4b\u95f4\u52a0\u4e86\u4e00\u5c42\u62bd\u8c61\uff0c\u56e0\u6b64\u6211\u4eec\u501f\u9274\u4e86 OSI \u5bf9\u7f51\u7edc\u5b9a\u4e49\u4e03\u5c42\u6a21\u578b\u7684\u601d\u8def\uff0c\u5e0c\u671b Layotto \u53ef\u4ee5\u4f5c\u4e3a\u7b2c\u516b\u5c42\u5bf9\u5e94\u7528\u63d0\u4f9b\u670d\u52a1\uff0cotto \u662f\u610f\u5927\u5229\u8bed\u4e2d8\u7684\u610f\u601d\uff0cLayer otto \u5c31\u662f\u7b2c\u516b\u5c42\u7684\u610f\u601d\uff0c\u7b80\u5316\u4e86\u4e00\u4e0b\u53d8\u6210\u4e86 Layotto\uff0c\u540c\u65f6\u9879\u76ee\u4ee3\u53f7 L8\uff0c\u4e5f\u662f\u7b2c\u516b\u5c42\u7684\u610f\u601d\uff0c\u8fd9\u4e2a\u4ee3\u53f7\u4e5f\u662f\u8bbe\u8ba1\u6211\u4eec\u9879\u76ee LOGO \u65f6\u7075\u611f\u7684\u6765\u6e90\u3002\\n\\n\u4ecb\u7ecd\u5b8c\u9879\u76ee\u7684\u6574\u4f53\u60c5\u51b5\uff0c\u4e0b\u9762\u5bf9\u5176\u4e2d\u56db\u4e2a\u4e3b\u8981\u529f\u80fd\u7684\u5b9e\u73b0\u7ec6\u8282\u8fdb\u884c\u8bf4\u660e\u3002\\n\\n### E\u3001\u914d\u7f6e\u539f\u8bed\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*mfkRQZH3oNwAAAAAAAAAAAAAARQnAQ)\\n\u9996\u5148\u662f\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u914d\u7f6e\u529f\u80fd\uff0c\u5e94\u7528\u4e00\u822c\u4f7f\u7528\u914d\u7f6e\u4e2d\u5fc3\u6765\u505a\u5f00\u5173\u6216\u8005\u52a8\u6001\u8c03\u6574\u5e94\u7528\u7684\u8fd0\u884c\u72b6\u6001\u3002Layotto \u4e2d\u914d\u7f6e\u6a21\u5757\u7684\u5b9e\u73b0\u5305\u62ec\u4e24\u90e8\u5206\uff0c\u4e00\u4e2a\u662f\u5bf9\u5982\u4f55\u5b9a\u4e49\u914d\u7f6e\u8fd9\u79cd\u80fd\u529b\u7684 API \u7684\u601d\u8003\uff0c\u4e00\u4e2a\u662f\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u4e0b\u9762\u9010\u4e2a\u6765\u770b\u3002\\n\\n\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u80fd\u6ee1\u8db3\u5927\u90e8\u5206\u5b9e\u9645\u751f\u4ea7\u8bc9\u6c42\u7684\u914d\u7f6e API \u5e76\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0cdapr \u76ee\u524d\u4e5f\u7f3a\u5931\u8fd9\u4e2a\u80fd\u529b\uff0c\u56e0\u6b64\u6211\u4eec\u8ddf\u963f\u91cc\u4ee5\u53ca dapr \u793e\u533a\u4e00\u8d77\u5408\u4f5c\uff0c\u4e3a\u5982\u4f55\u5b9a\u4e49\u4e00\u7248\u5408\u7406\u7684\u914d\u7f6e API \u8fdb\u884c\u4e86\u6fc0\u70c8\u8ba8\u8bba\u3002\\n\\n\u76ee\u524d\u8ba8\u8bba\u7ed3\u679c\u8fd8\u6ca1\u6709\u6700\u7ec8\u786e\u5b9a\uff0c\u56e0\u6b64 Layotto \u662f\u57fa\u4e8e\u6211\u4eec\u63d0\u7ed9\u793e\u533a\u7684\u7b2c\u4e00\u7248\u8349\u6848\u8fdb\u884c\u5b9e\u73b0\uff0c\u4e0b\u9762\u5bf9\u6211\u4eec\u7684\u8349\u6848\u8fdb\u884c\u7b80\u8981\u8bf4\u660e\u3002\\n\\n\u6211\u4eec\u5148\u5b9a\u4e49\u4e86\u4e00\u822c\u914d\u7f6e\u6240\u9700\u7684\u57fa\u672c\u5143\u7d20\uff1a\\n\\n1.  appId\uff1a\u8868\u793a\u914d\u7f6e\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\\n\\n2.  key\uff1a\u914d\u7f6e\u7684 key\\n\\n3.  content\uff1a\u914d\u7f6e\u7684\u503c\\n\\n4.  group\uff1a\u914d\u7f6e\u6240\u5c5e\u7684\u5206\u7ec4\uff0c\u5982\u679c\u4e00\u4e2a appId \u4e0b\u9762\u7684\u914d\u7f6e\u8fc7\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u4e9b\u914d\u7f6e\u8fdb\u884c\u5206\u7ec4\u5f52\u7c7b\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u3002\\n\\n\u6b64\u5916\u6211\u4eec\u8ffd\u52a0\u4e86\u4e24\u79cd\u9ad8\u7ea7\u7279\u6027\uff0c\u7528\u6765\u9002\u914d\u66f4\u52a0\u590d\u6742\u7684\u914d\u7f6e\u4f7f\u7528\u573a\u666f\uff1a\\n\\n1.  label\uff0c\u7528\u4e8e\u7ed9\u914d\u7f6e\u6253\u6807\u7b7e\uff0c\u6bd4\u5982\u8be5\u914d\u7f6e\u5c5e\u4e8e\u54ea\u4e2a\u73af\u5883\uff0c\u5728\u8fdb\u884c\u914d\u7f6e\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u4f7f\u7528 label + key \u6765\u67e5\u8be2\u914d\u7f6e\u3002\\n\\n2.  tags\uff0c\u7528\u6237\u7ed9\u914d\u7f6e\u8ffd\u52a0\u7684\u4e00\u4e9b\u9644\u52a0\u4fe1\u606f\uff0c\u5982\u63cf\u8ff0\u4fe1\u606f\u3001\u521b\u5efa\u8005\u4fe1\u606f\uff0c\u6700\u540e\u4fee\u6539\u65f6\u95f4\u7b49\u7b49\uff0c\u65b9\u4fbf\u914d\u7f6e\u7684\u7ba1\u7406\uff0c\u5ba1\u8ba1\u7b49\u3002\\n\\n\u5bf9\u4e8e\u4e0a\u8ff0\u5b9a\u4e49\u7684\u914d\u7f6e API \u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u76ee\u524d\u652f\u6301\u67e5\u8be2\u3001\u8ba2\u9605\u3001\u5220\u9664\u3001\u521b\u5efa\u3001\u4fee\u6539\u4e94\u79cd\u64cd\u4f5c\uff0c\u5176\u4e2d\u8ba2\u9605\u914d\u7f6e\u53d8\u66f4\u540e\u7684\u63a8\u9001\u4f7f\u7528\u7684\u662f gRPC \u7684 stream \u7279\u6027\uff0c\u800c\u5e95\u5c42\u5b9e\u73b0\u8fd9\u4e9b\u914d\u7f6e\u80fd\u529b\u7684\u7ec4\u4ef6\uff0c\u6211\u4eec\u9009\u62e9\u4e86\u56fd\u5185\u6d41\u884c\u7684 apollo\uff0c\u540e\u9762\u4e5f\u4f1a\u6839\u636e\u9700\u6c42\u589e\u52a0\u5176\u4ed6\u5b9e\u73b0\u3002\\n\\n### F\u3001Pub/Sub \u539f\u8bed\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*YJs-R6WFhkgAAAAAAAAAAAAAARQnAQ)\\n\u5bf9\u4e8e Pub/Sub \u80fd\u529b\u7684\u652f\u6301\uff0c\u6211\u4eec\u8c03\u7814\u4e86 dapr \u73b0\u5728\u7684\u5b9e\u73b0\uff0c\u53d1\u73b0\u57fa\u672c\u4e0a\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u56e0\u6b64\u6211\u4eec\u76f4\u63a5\u590d\u7528\u4e86 dapr \u7684 API \u4ee5\u53ca components\uff0c\u53ea\u662f\u5728 Layotto \u91cc\u9762\u505a\u4e86\u9002\u914d\uff0c\u8fd9\u4e3a\u6211\u4eec\u8282\u7701\u4e86\u5927\u91cf\u7684\u91cd\u590d\u52b3\u52a8\uff0c\u6211\u4eec\u5e0c\u671b\u8ddf dapr \u793e\u533a\u4fdd\u6301\u4e00\u79cd\u5408\u4f5c\u5171\u5efa\u7684\u601d\u8def\uff0c\u800c\u4e0d\u662f\u91cd\u590d\u9020\u8f6e\u5b50\u3002\\n\\n\u5176\u4e2d Pub \u529f\u80fd\u662f App \u8c03\u7528 Layotto \u63d0\u4f9b\u7684 PublishEvent \u63a5\u53e3\uff0c\u800c Sub \u529f\u80fd\u5219\u662f\u5e94\u7528\u901a\u8fc7 gRPC Server \u7684\u5f62\u5f0f\u5b9e\u73b0\u4e86 ListTopicSubscriptions \u8ddf OnTopicEvent \u4e24\u4e2a\u63a5\u53e3\uff0c\u4e00\u4e2a\u7528\u6765\u544a\u8bc9 Layotto \u5e94\u7528\u9700\u8981\u8ba2\u9605\u54ea\u4e9b topic\uff0c\u4e00\u4e2a\u7528\u4e8e\u63a5\u6536 topic \u53d8\u5316\u65f6 Layotto \u7684\u56de\u8c03\u4e8b\u4ef6\u3002\\n\\ndapr \u5bf9\u4e8e Pub/Sub \u7684\u5b9a\u4e49\u57fa\u672c\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u4f46\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u4ecd\u6709\u4e0d\u8db3\uff0cdapr \u91c7\u7528\u4e86 CloudEvent \u6807\u51c6\uff0c\u56e0\u6b64 Pub \u63a5\u53e3\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u8fd9\u65e0\u6cd5\u6ee1\u8db3\u6211\u4eec\u751f\u4ea7\u573a\u666f\u4e2d\u8981\u6c42 Pub \u6d88\u606f\u4ee5\u540e\u670d\u52a1\u7aef\u8fd4\u56de\u5bf9\u5e94\u7684 messageID \u7684\u9700\u6c42\uff0c\u8fd9\u4e00\u70b9\u6211\u4eec\u5df2\u7ecf\u628a\u9700\u6c42\u63d0\u4ea4\u7ed9\u4e86 dapr \u793e\u533a\uff0c\u8fd8\u5728\u7b49\u5f85\u53cd\u9988\uff0c\u8003\u8651\u5230\u793e\u533a\u5f02\u6b65\u534f\u4f5c\u7684\u673a\u5236\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u5148\u793e\u533a\u4e00\u6b65\u589e\u52a0\u8fd4\u56de\u7ed3\u679c\uff0c\u7136\u540e\u518d\u8ddf\u793e\u533a\u63a2\u8ba8\u4e00\u79cd\u66f4\u597d\u7684\u517c\u5bb9\u65b9\u6848\u3002\\n\\n### G\u3001RPC \u539f\u8bed\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*i-JnSaeZbJ4AAAAAAAAAAAAAARQnAQ)\\nRPC \u7684\u80fd\u529b\u5927\u5bb6\u4e0d\u4f1a\u964c\u751f\uff0c\u8fd9\u53ef\u80fd\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u6700\u6700\u57fa\u7840\u7684\u9700\u6c42\uff0c\u5bf9\u4e8e RPC \u63a5\u53e3\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u540c\u6837\u53c2\u8003\u4e86 dapr \u793e\u533a\u7684\u5b9a\u4e49\uff0c\u53d1\u73b0\u5b8c\u5168\u53ef\u4ee5\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\uff0c\u56e0\u6b64\u63a5\u53e3\u5b9a\u4e49\u5c31\u76f4\u63a5\u590d\u7528 dapr \u7684\uff0c\u4f46\u76ee\u524d dapr \u63d0\u4f9b\u7684 RPC \u5b9e\u73b0\u65b9\u6848\u8fd8\u6bd4\u8f83\u8584\u5f31\uff0c\u800c MOSN \u7ecf\u8fc7\u591a\u5e74\u8fed\u4ee3\uff0c\u80fd\u529b\u5df2\u7ecf\u975e\u5e38\u6210\u719f\u5b8c\u5584\uff0c\u56e0\u6b64\u6211\u4eec\u5927\u80c6\u628a Runtime \u8ddf Service Mesh \u4e24\u79cd\u601d\u8def\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u628a MOSN \u672c\u8eab\u4f5c\u4e3a\u6211\u4eec\u5b9e\u73b0 RPC \u80fd\u529b\u7684\u4e00\u4e2a Component\uff0c\u8fd9\u6837 Layotto \u5728\u6536\u5230 RPC \u8bf7\u6c42\u4ee5\u540e\u4ea4\u7ed9 MOSN \u8fdb\u884c\u5b9e\u9645\u6570\u636e\u4f20\u8f93\uff0c\u8fd9\u79cd\u65b9\u6848\u53ef\u4ee5\u901a\u8fc7 istio \u52a8\u6001\u6539\u53d8\u8def\u7531\u89c4\u5219\uff0c\u964d\u7ea7\u9650\u6d41\u7b49\u7b49\u8bbe\u7f6e\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u590d\u7528\u4e86 Service Mesh \u7684\u5404\u79cd\u80fd\u529b\uff0c\u8fd9\u4e5f\u8bf4\u660e Runtime \u4e0d\u662f\u8981\u63a8\u7ffb Service Mesh\uff0c\u800c\u662f\u8981\u5728\u6b64\u57fa\u7840\u4e0a\u7ee7\u7eed\u5411\u524d\u8fc8\u4e00\u6b65\u3002\\n\\n\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\u4e0a\uff0c\u4e3a\u4e86\u66f4\u597d\u7684\u8ddf MOSN \u878d\u5408\uff0c\u6211\u4eec\u5728 RPC \u7684\u5b9e\u73b0\u4e0a\u9762\u52a0\u4e86\u4e00\u5c42 Channel\uff0c\u9ed8\u8ba4\u652f\u6301dubbo\uff0cbolt\uff0chttp \u4e09\u79cd\u5e38\u89c1\u7684 RPC \u534f\u8bae\uff0c\u5982\u679c\u4ecd\u7136\u4e0d\u80fd\u6ee1\u8db3\u7528\u6237\u573a\u666f\uff0c\u6211\u4eec\u8fd8\u8ffd\u52a0\u4e86 Before/After \u4e24\u79cd Filter\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u505a\u81ea\u5b9a\u4e49\u6269\u5c55\uff0c\u5b9e\u73b0\u534f\u8bae\u8f6c\u6362\u7b49\u9700\u6c42\u3002\\n\\n### H\u3001Actuator \u539f\u8bed\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*E_Q-T4d_bm4AAAAAAAAAAAAAARQnAQ)\\n\u5728\u5b9e\u9645\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u9664\u4e86\u5e94\u7528\u6240\u9700\u8981\u7684\u5404\u79cd\u5206\u5e03\u5f0f\u80fd\u529b\u4ee5\u5916\uff0cPaaS \u7b49\u8fd0\u7ef4\u5e73\u53f0\u5f80\u5f80\u9700\u8981\u4e86\u89e3\u5e94\u7528\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u57fa\u4e8e\u8fd9\u79cd\u9700\u6c42\uff0c\u6211\u4eec\u62bd\u8c61\u4e86\u4e00\u5957 Actuator \u63a5\u53e3\uff0c\u76ee\u524d dapr \u8fd8\u6ca1\u6709\u63d0\u4f9b\u8fd9\u65b9\u9762\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u6211\u4eec\u6839\u636e\u5185\u90e8\u7684\u9700\u6c42\u573a\u666f\u8fdb\u884c\u4e86\u8bbe\u8ba1\uff0c\u65e8\u5728\u628a\u5e94\u7528\u5728\u542f\u52a8\u671f\u3001\u8fd0\u884c\u671f\u7b49\u9636\u6bb5\u5404\u79cd\u5404\u6837\u7684\u4fe1\u606f\u66b4\u9732\u51fa\u53bb\uff0c\u65b9\u4fbf PaaS \u4e86\u89e3\u5e94\u7528\u7684\u8fd0\u884c\u60c5\u51b5\u3002\\n\\nLayotto \u628a\u66b4\u9732\u4fe1\u606f\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\\n\\n1.  Health\uff1a\u8be5\u6a21\u5757\u5224\u65ad\u5e94\u7528\u5f53\u524d\u8fd0\u884c\u72b6\u6001\u662f\u5426\u5065\u5eb7\uff0c\u6bd4\u5982\u67d0\u4e2a\u5f3a\u4f9d\u8d56\u7684\u7ec4\u4ef6\u5982\u679c\u521d\u59cb\u5316\u5931\u8d25\u5c31\u9700\u8981\u8868\u793a\u4e3a\u975e\u5065\u5eb7\u72b6\u6001\uff0c\u800c\u5bf9\u4e8e\u5065\u5eb7\u68c0\u67e5\u7684\u7c7b\u578b\u6211\u4eec\u53c2\u8003\u4e86 k8s\uff0c\u5206\u4e3a\uff1a\\n\\na.  Readiness\uff1a\u8868\u793a\u5e94\u7528\u542f\u52a8\u5b8c\u6210\uff0c\u53ef\u4ee5\u5f00\u59cb\u5904\u7406\u8bf7\u6c42\u3002\\n\\nb.  Liveness\uff1a\u8868\u793a\u5e94\u7528\u5b58\u6d3b\u72b6\u6001\uff0c\u5982\u679c\u4e0d\u5b58\u6d3b\u5219\u9700\u8981\u5207\u6d41\u7b49\u3002\\n\\n2.  Info\uff1a\u8be5\u6a21\u5757\u9884\u671f\u4f1a\u66b4\u9732\u5e94\u7528\u7684\u4e00\u4e9b\u4f9d\u8d56\u4fe1\u606f\u51fa\u53bb\uff0c\u5982\u5e94\u7528\u4f9d\u8d56\u7684\u670d\u52a1\uff0c\u8ba2\u9605\u7684\u914d\u7f6e\u7b49\u7b49\uff0c\u7528\u4e8e\u6392\u67e5\u95ee\u9898\u3002\\n\\nHealth \u5bf9\u5916\u66b4\u9732\u7684\u5065\u5eb7\u72b6\u6001\u5206\u4e3a\u4ee5\u4e0b\u4e09\u79cd\uff1a\\n\\n1.  INIT\uff1a\u8868\u793a\u5e94\u7528\u8fd8\u5728\u542f\u52a8\u4e2d\uff0c\u5982\u679c\u5e94\u7528\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u8fd4\u56de\u8be5\u503c\uff0c\u8fd9\u4e2a\u65f6\u5019 PaaS \u5e73\u53f0\u5e94\u8be5\u7ee7\u7eed\u7b49\u5f85\u5e94\u7528\u5b8c\u6210\u542f\u52a8\u3002\\n\\n2.  UP\uff1a\u8868\u793a\u5e94\u7528\u542f\u52a8\u6b63\u5e38\uff0c\u5982\u679c\u5e94\u7528\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u8fd4\u56de\u8be5\u503c\uff0c\u610f\u5473\u7740 PasS \u5e73\u53f0\u53ef\u4ee5\u5f00\u59cb\u653e\u5165\u6d41\u91cf\u3002\\n\\n3.  DOWN\uff1a\u8868\u793a\u5e94\u7528\u542f\u52a8\u5931\u8d25\uff0c\u5982\u679c\u5e94\u7528\u53d1\u5e03\u8fc7\u7a0b\u4e2d\u8fd4\u56de\u8be5\u503c\uff0c\u610f\u5473\u7740 PaaS \u9700\u8981\u505c\u6b62\u53d1\u5e03\u5e76\u901a\u77e5\u5e94\u7528 owner\u3002\\n\\n\u5230\u8fd9\u91cc\u5173\u4e8e Layotto \u76ee\u524d\u5728 Runtime \u65b9\u5411\u4e0a\u7684\u63a2\u7d22\u57fa\u672c\u8bb2\u5b8c\u4e86\uff0c\u6211\u4eec\u901a\u8fc7\u5b9a\u4e49\u660e\u786e\u8bed\u4e49\u7684 API\uff0c\u4f7f\u7528 gRPC \u8fd9\u79cd\u6807\u51c6\u7684\u4ea4\u4e92\u534f\u8bae\u89e3\u51b3\u4e86\u76ee\u524d\u9762\u4e34\u7684\u57fa\u7840\u8bbe\u65bd\u5f3a\u7ed1\u5b9a\u3001\u5f02\u6784\u8bed\u8a00\u63a5\u5165\u6210\u672c\u9ad8\u4e24\u5927\u95ee\u9898\u3002\u968f\u7740\u672a\u6765 API \u6807\u51c6\u5316\u7684\u5efa\u8bbe\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u8ba9\u63a5\u5165 Layotto \u7684\u5e94\u7528\u65e0\u611f\u77e5\u7684\u5728\u5404\u79cd\u79c1\u6709\u4e91\u3001\u516c\u6709\u4e91\u4e0a\u9762\u90e8\u7f72\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u80fd\u8ba9\u5e94\u7528\u5728 Layotto\uff0cdapr \u4e4b\u95f4\u81ea\u7531\u5207\u6362\uff0c\u63d0\u9ad8\u7814\u53d1\u6548\u7387\u3002\\n\\n\u76ee\u524d Serverless \u9886\u57df\u4e5f\u662f\u767e\u82b1\u9f50\u653e\uff0c\u6ca1\u6709\u4e00\u79cd\u7edf\u4e00\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u6b64 Layotto \u9664\u4e86\u5728\u4e0a\u8ff0 Runtime \u65b9\u5411\u4e0a\u7684\u6295\u5165\u4ee5\u5916\uff0c\u8fd8\u5728 Serverless \u65b9\u5411\u4e0a\u4e5f\u8fdb\u884c\u4e86\u4e00\u4e9b\u5c1d\u8bd5\uff0c\u4e0b\u9762\u5c31\u5c1d\u8bd5\u65b9\u6848\u8fdb\u884c\u4ecb\u7ecd\u3002\\n\\n## \u56db\u3001WebAssembly \u7684\u63a2\u7d22\\n\\n### A\u3001WebAssembly \u7b80\u4ecb\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*-ACRSpqbuJ0AAAAAAAAAAAAAARQnAQ)\\nWebAssembly\uff0c\u7b80\u79f0 WASM\uff0c\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6307\u4ee4\u96c6\uff0c\u6700\u521d\u662f\u8dd1\u5728\u6d4f\u89c8\u5668\u4e0a\u6765\u89e3\u51b3 JavaScript \u7684\u6027\u80fd\u95ee\u9898\uff0c\u4f46\u7531\u4e8e\u5b83\u826f\u597d\u7684\u5b89\u5168\u6027\uff0c\u9694\u79bb\u6027\u4ee5\u53ca\u8bed\u8a00\u65e0\u5173\u6027\u7b49\u4f18\u79c0\u7279\u6027\uff0c\u5f88\u5feb\u4eba\u4eec\u4fbf\u5f00\u59cb\u8ba9\u5b83\u8dd1\u5728\u6d4f\u89c8\u5668\u4e4b\u5916\u7684\u5730\u65b9\uff0c\u968f\u7740 WASI \u5b9a\u4e49\u7684\u51fa\u73b0\uff0c\u53ea\u9700\u8981\u4e00\u4e2a WASM \u8fd0\u884c\u65f6\uff0c\u5c31\u53ef\u4ee5\u8ba9 WASM \u6587\u4ef6\u968f\u5904\u6267\u884c\u3002\\n\\n\u65e2\u7136 WebAssembly \u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4ee5\u5916\u7684\u5730\u65b9\u8fd0\u884c\uff0c\u90a3\u4e48\u6211\u4eec\u662f\u5426\u80fd\u628a\u5b83\u7528\u5728 Serverless \u9886\u57df\uff1f\u76ee\u524d\u5df2\u7ecf\u6709\u4eba\u5728\u8fd9\u65b9\u9762\u505a\u4e86\u4e00\u4e9b\u5c1d\u8bd5\uff0c\u4e0d\u8fc7\u5982\u679c\u8fd9\u79cd\u65b9\u6848\u771f\u7684\u60f3\u843d\u5730\u7684\u8bdd\uff0c\u9996\u5148\u8981\u8003\u8651\u7684\u5c31\u662f\u5982\u4f55\u89e3\u51b3\u8fd0\u884c\u4e2d\u7684 WebAssembly \u5bf9\u5404\u79cd\u57fa\u7840\u8bbe\u65bd\u7684\u4f9d\u8d56\u95ee\u9898\u3002\\n\\n### B\u3001WebAssembly \u843d\u5730\u539f\u7406\\n\\n\u76ee\u524d MOSN \u901a\u8fc7\u96c6\u6210 WASM Runtime \u7684\u65b9\u5f0f\u8ba9 WASM \u8dd1\u5728 MOSN \u4e0a\u9762\uff0c\u4ee5\u6b64\u6765\u6ee1\u8db3\u5bf9 MOSN \u505a\u81ea\u5b9a\u4e49\u6269\u5c55\u7684\u9700\u6c42\u3002\u540c\u65f6\uff0cLayotto \u4e5f\u662f\u6784\u5efa\u5728 MOSN \u4e4b\u4e0a\uff0c\u56e0\u6b64\u6211\u4eec\u8003\u8651\u628a\u4e8c\u8005\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u5b9e\u73b0\u65b9\u6848\u5982\u4e0b\u56fe\u6240\u793a\uff1a\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*U7UDRYyBOvIAAAAAAAAAAAAAARQnAQ)\\n\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528 Go/C++/Rust \u7b49\u5404\u79cd\u5404\u6837\u81ea\u5df1\u559c\u6b22\u7684\u8bed\u8a00\u6765\u5f00\u53d1\u5e94\u7528\u4ee3\u7801\uff0c\u7136\u540e\u628a\u5b83\u4eec\u7f16\u8bd1\u6210 WASM \u6587\u4ef6\u8dd1\u5728 MOSN \u4e0a\u9762\uff0c\u5f53 WASM \u5f62\u6001\u7684\u5e94\u7528\u5728\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u4f9d\u8d56\u5404\u79cd\u5206\u5e03\u5f0f\u80fd\u529b\u65f6\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u5730\u51fd\u6570\u8c03\u7528\u7684\u65b9\u5f0f\u8c03\u7528 Layotto \u63d0\u4f9b\u7684\u6807\u51c6 API\uff0c\u8fd9\u6837\u76f4\u63a5\u89e3\u51b3\u4e86 WASM \u5f62\u6001\u5e94\u7528\u7684\u4f9d\u8d56\u95ee\u9898\u3002\\n\\n\u76ee\u524d Layotto \u63d0\u4f9b\u4e86 Go \u8ddf Rust \u7248 WASM \u7684\u5b9e\u73b0\uff0c\u867d\u7136\u53ea\u652f\u6301 demo \u7ea7\u529f\u80fd\uff0c\u4f46\u5df2\u7ecf\u8db3\u591f\u8ba9\u6211\u4eec\u770b\u5230\u8fd9\u79cd\u65b9\u6848\u7684\u6f5c\u5728\u4ef7\u503c\u3002\\n\\n\u6b64\u5916\uff0cWASM \u793e\u533a\u76ee\u524d\u8fd8\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u6709\u5f88\u591a\u5730\u65b9\u9700\u8981\u5b8c\u5584\uff0c\u6211\u4eec\u4e5f\u7ed9\u793e\u533a\u63d0\u4ea4\u4e86\u4e00\u4e9b PR\u5171\u540c\u5efa\u8bbe\uff0c\u4e3a WASM \u6280\u672f\u7684\u843d\u5730\u6dfb\u7816\u52a0\u74e6\u3002\\n\\n### C\u3001WebAssembly \u843d\u5730\u5c55\u671b\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*NzwKRY2GZPcAAAAAAAAAAAAAARQnAQ)\\n\u867d\u7136\u73b0\u5728 Layotto \u4e2d\u5bf9 WASM \u7684\u4f7f\u7528\u8fd8\u5904\u4e8e\u8bd5\u9a8c\u9636\u6bb5\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u5b83\u6700\u7ec8\u53ef\u4ee5\u6210\u4e3a Serverless \u7684\u4e00\u79cd\u5b9e\u73b0\u5f62\u6001\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5e94\u7528\u901a\u8fc7\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u5f00\u53d1\uff0c\u7136\u540e\u7edf\u4e00\u7f16\u8bd1\u6210 WASM \u6587\u4ef6\uff0c\u6700\u540e\u8dd1\u5728 Layotto+MOSN \u4e0a\u9762\uff0c\u800c\u5bf9\u4e8e\u5e94\u7528\u7684\u8fd0\u7ef4\u7ba1\u7406\u7edf\u4e00\u7531 k8s\u3001docker\u3001prometheus \u7b49\u4ea7\u54c1\u8d1f\u8d23\u3002\\n\\n## \u4e94\u3001\u793e\u533a\u89c4\u5212\\n\\n\u6700\u540e\u6765\u770b\u4e0b Layotto \u5728\u793e\u533a\u7684\u505a\u7684\u4e00\u4e9b\u4e8b\u60c5\u3002\\n\\n### A\u3001Layotto vs Dapr\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*OpQTRqoMpK0AAAAAAAAAAAAAARQnAQ)\\n\u4e0a\u56fe\u5217\u51fa\u4e86 Layotto \u8ddf dapr \u73b0\u6709\u7684\u80fd\u529b\u5bf9\u6bd4\uff0c\u5728 Layotto \u7684\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u501f\u9274 dapr \u7684\u601d\u8def\uff0c\u59cb\u7ec8\u4ee5\u4f18\u5148\u590d\u7528\u3001\u5176\u6b21\u5f00\u53d1\u4e3a\u539f\u5219\uff0c\u65e8\u5728\u8fbe\u6210\u5171\u5efa\u7684\u76ee\u6807\uff0c\u800c\u5bf9\u4e8e\u6b63\u5728\u5efa\u8bbe\u6216\u8005\u672a\u6765\u8981\u5efa\u8bbe\u7684\u80fd\u529b\u6765\u8bf4\uff0c\u6211\u4eec\u8ba1\u5212\u4f18\u5148\u5728 Layotto \u4e0a\u843d\u5730\uff0c\u7136\u540e\u518d\u63d0\u7ed9\u793e\u533a\uff0c\u5408\u5e76\u5230\u6807\u51c6 API\uff0c\u9274\u4e8e\u793e\u533a\u5f02\u6b65\u534f\u4f5c\u7684\u673a\u5236\uff0c\u6c9f\u901a\u6210\u672c\u8f83\u9ad8\uff0c\u56e0\u6b64\u77ed\u671f\u5185\u53ef\u80fd Layotto \u7684 API \u4f1a\u5148\u4e8e\u793e\u533a\uff0c\u4f46\u957f\u671f\u6765\u770b\u4e00\u5b9a\u4f1a\u7edf\u4e00\u3002\\n\\n### B\u3001API \u5171\u5efa\u8ba1\u5212\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*GAe8QqZ03eoAAAAAAAAAAAAAARQnAQ)\\n\u5173\u4e8e\u5982\u4f55\u5b9a\u4e49\u4e00\u5957\u6807\u51c6\u7684 API \u4ee5\u53ca\u5982\u4f55\u8ba9 Layotto \u53ef\u4ee5\u8dd1\u5728 envoy \u4e0a\u7b49\u7b49\u4e8b\u9879\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u5404\u4e2a\u793e\u533a\u8fdb\u884c\u4e86\u6df1\u5165\u8ba8\u8bba\uff0c\u5e76\u4e14\u4ee5\u540e\u4e5f\u8fd8\u4f1a\u7ee7\u7eed\u63a8\u8fdb\u3002\\n\\n### C\u3001Roadmap\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*iUV3Q7S3VLEAAAAAAAAAAAAAARQnAQ)\\nLayotto \u5728\u76ee\u524d\u4e3b\u8981\u652f\u6301 RPC\u3001Config\u3001Pub/Sub\u3001Actuator \u56db\u5927\u529f\u80fd\uff0c\u9884\u8ba1\u5728\u4e5d\u6708\u4f1a\u628a\u7cbe\u529b\u6295\u5165\u5230\u5206\u5e03\u5f0f\u9501\u3001State\u3001\u53ef\u89c2\u6d4b\u6027\u4e0a\u9762\uff0c\u5341\u4e8c\u6708\u4efd\u4f1a\u652f\u6301 Layotto \u63d2\u4ef6\u5316\uff0c\u4e5f\u5c31\u662f\u8ba9\u5b83\u53ef\u4ee5\u8dd1\u5728 envoy \u4e0a\uff0c\u540c\u65f6\u5e0c\u671b\u5bf9 WebAssembly \u7684\u63a2\u7d22\u4f1a\u6709\u8fdb\u4e00\u6b65\u7684\u4ea7\u51fa\u3002\\n\\n### D\u3001\u6b63\u5f0f\u5f00\u6e90\\n\\n>![](https://gw.alipayobjects.com/mdn/rms_1c90e8/afts/img/A*S6mdTqAapLQAAAAAAAAAAAAAARQnAQ)\\n\u524d\u9762\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Layotto \u9879\u76ee\uff0c\u6700\u91cd\u8981\u7684\u8fd8\u662f\u8be5\u9879\u76ee\u4eca\u5929\u4f5c\u4e3a MOSN \u7684\u5b50\u9879\u76ee\u6b63\u5f0f\u5f00\u6e90\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u6587\u6863\u4ee5\u53ca demo \u793a\u4f8b\u65b9\u4fbf\u5927\u5bb6\u5feb\u901f\u4e0a\u624b\u4f53\u9a8c\u3002\\n\\n\u5bf9\u4e8e API \u6807\u51c6\u5316\u7684\u5efa\u8bbe\u662f\u4e00\u4ef6\u9700\u8981\u957f\u671f\u63a8\u52a8\u7684\u4e8b\u60c5\uff0c\u540c\u65f6\u6807\u51c6\u5316\u610f\u5473\u7740\u4e0d\u662f\u6ee1\u8db3\u4e00\u4e24\u79cd\u573a\u666f\uff0c\u800c\u662f\u5c3d\u53ef\u80fd\u7684\u9002\u914d\u5927\u591a\u6570\u4f7f\u7528\u573a\u666f\uff0c\u4e3a\u6b64\u6211\u4eec\u5e0c\u671b\u66f4\u591a\u7684\u4eba\u53ef\u4ee5\u53c2\u4e0e\u5230 Layotto \u9879\u76ee\u4e2d\uff0c\u63cf\u8ff0\u4f60\u7684\u4f7f\u7528\u573a\u666f\uff0c\u8ba8\u8bba API \u7684\u5b9a\u4e49\u65b9\u6848\uff0c\u4e00\u8d77\u63d0\u4ea4\u7ed9\u793e\u533a\uff0c\u6700\u7ec8\u8fbe\u6210 Write once, Run anywhere \u7684\u7ec8\u6781\u76ee\u6807\uff01"},{"id":"/code/flowcontrol/flowcontrol_code_analyze","metadata":{"permalink":"/layotto/blog/code/flowcontrol/flowcontrol_code_analyze","editUrl":"https://github.com/mosn/layotto/edit/main/docs/blog/code/flowcontrol/flowcontrol_code_analyze.md","source":"@site/blog/code/flowcontrol/flowcontrol_code_analyze.md","title":"\u6e90\u7801\u89e3\u6790 7\u5c42\u6d41\u91cf\u6cbb\u7406,\u63a5\u53e3\u9650\u6d41","description":"\u4f5c\u8005\u7b80\u4ecb\uff1a","date":"2024-07-10T10:04:20.000Z","tags":[],"readingTime":2.42,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"MOSN \u5b50\u9879\u76ee Layotto\uff1a\u5f00\u542f\u670d\u52a1\u7f51\u683c+\u5e94\u7528\u8fd0\u884c\u65f6\u65b0\u7bc7\u7ae0","permalink":"/layotto/blog/mosn-subproject-layotto-opening-a-new-chapter-in-service-grid-application-runtime"},"nextItem":{"title":"Layotto \u6e90\u7801\u89e3\u6790 \u2014\u2014 \u5904\u7406 RPC \u8bf7\u6c42","permalink":"/layotto/blog/code/layotto-rpc"}},"content":">\u4f5c\u8005\u7b80\u4ecb\uff1a\\n>\u5f20\u6668\uff0c\u662f\u5f00\u6e90\u793e\u533a\u7684\u7231\u597d\u8005\uff0c\u81f4\u529b\u4e8e\u62e5\u62b1\u5f00\u6e90\uff0c\u5e0c\u671b\u80fd\u548c\u793e\u533a\u7684\u5404\u4f4d\u5f00\u6e90\u7231\u597d\u8005\u4e92\u76f8\u4ea4\u6d41\u4e92\u76f8\u8fdb\u6b65\u548c\u6210\u957f\u3002\\n> \\n>\u5199\u4f5c\u65f6\u95f4: 2022\u5e744\u670820\u65e5\\n\\n\\n## Overview\\n\u6b64\u6587\u6863\u7684\u76ee\u7684\u5728\u4e8e\u5206\u6790\u63a5\u53e3\u9650\u6d41\u7684\u5b9e\u73b0\\n\\n## \u524d\u63d0\uff1a\\n\u6587\u6863\u5185\u5bb9\u6240\u6d89\u53ca\u4ee3\u7801\u7248\u672c\u5982\u4e0b\\n\\n[https://github.com/mosn/mosn](https://github.com/mosn/mosn)\\n\\nMosn   d11b5a638a137045c2fbb03d9d8ca36ecc0def11\uff08develop\u5206\u652f\uff09\\n\\n## \u6e90\u7801\u5206\u6790\\n### \u603b\u4f53\u5206\u6790\\n\u53c2\u8003 <br />[https://mosn.io/docs/concept/extensions/](https://mosn.io/docs/concept/extensions/)\\n\\nMosn \u7684 Stream Filter \u6269\u5c55\u673a\u5236\\n\\n![01.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*tSn4SpIkAa4AAAAAAAAAAAAAARQnAQ)\\n\\n### \u4ee3\u7801\u5747\u5728\uff1a [flowcontrol\u4ee3\u7801](https://github.com/mosn/mosn/tree/master/pkg/filter/stream/flowcontrol)\\n\\n### stream_filter_factory.go\u5206\u6790\\n\u6b64\u7c7b\u4e3a\u4e00\u4e2a\u5de5\u5382\u7c7b\uff0c\u7528\u4e8e\u521b\u5efa StreamFilter\\n\\n\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u91cf\u7528\u4f5c\u9ed8\u8ba4\u503c\\n\\n![02.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*PAWCTL6MS40AAAAAAAAAAAAAARQnAQ)\\n\\n\u5b9a\u4e49\u4e86\u9650\u6d41\u914d\u7f6e\u7c7b\u7528\u4f5c\u52a0\u8f7dyaml\u5b9a\u4e49\u5e76\u4e14\u89e3\u6790\u751f\u4ea7\u51fa\u5bf9\u5e94\u7684\u529f\u80fd\\n\\n![03.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*Ua32SokhILEAAAAAAAAAAAAAARQnAQ)\\n\\ninit() \u521d\u59cb\u5316\u5185\u90e8\u5c31\u662f\u5c06 name \u548c \u5bf9\u5e94\u6784\u9020\u51fd\u6570\u5b58\u50a8\u5230 filter\u62e6\u622a\u5de5\u5382\u7684map\u4e2d\\n\\n![04.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*kb3qRqWnqxYAAAAAAAAAAAAAARQnAQ)\\n\\n\u7740\u91cd\u8bb2\u4e00\u4e0b createRpcFlowControlFilterFactory  \u751f\u4ea7\u51farpc\u6d41\u63a7\u5de5\u5382\\n\\n![05.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*u5rkS54zkgAAAAAAAAAAAAAAARQnAQ)\\n\\n\u5728\u67e5\u770bstreamFilter\u4e4b\u524d\u6211\u4eec\u6765\u770b\u770b\u5de5\u5382\u7c7b\u662f\u5982\u4f55\u751f\u4ea7\u51fa\u9650\u6d41\u5668\u7684\\n\\n![06.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*cj0nT5O69OYAAAAAAAAAAAAAARQnAQ)\\n\\n\u9650\u6d41\u5668\u52a0\u5165\u5230\u9650\u6d41\u94fe\u8def\u7ed3\u6784\u4e2d\u6309\u7167\u8bbe\u5b9a\u987a\u5e8f\u4f9d\u6b21\u751f\u6548\u3002\\n\\nCreateFilterChain \u65b9\u6cd5\u5c06\u591a\u4e2afilter \u52a0\u5165\u5230\u94fe\u8def\u7ed3\u6784\u4e2d\\n\\n![07.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*a8ClQ76odpEAAAAAAAAAAAAAARQnAQ)\\n\\n\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6709\u5404\u79cd\u5404\u6837\u7684\u5de5\u5382\u7c7b\u5305\u62ec\u6211\u4eec\u4eca\u5929\u7814\u7a76\u7684\u9650\u6d41\u5de5\u5382\u7c7b\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3\\n\\n![08.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*sBDbT44r2vgAAAAAAAAAAAAAARQnAQ)\\n\\n### Stream_filter.go\u5206\u6790\\n![09.png](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*wsw3RKe1GH8AAAAAAAAAAAAAARQnAQ)\\n\\n## \u6574\u4f53\u6d41\u7a0b\uff1a\\n\u6700\u540e\u6211\u4eec\u518d\u6765\u56de\u987e\u4e00\u4e0b\u6574\u4f53\u6d41\u7a0b\u8d70\u5411:\\n\\n1. \u4ecestream_filter_factory.go\u7684\u521d\u59cb\u5316\u51fd\u6570init() \u5f00\u59cb,\u7a0b\u5e8f\u5411creatorStreamFactory(map\u7c7b\u578b)\u63d2\u5165\u4e86 createRpcFlowControlFilterFactory.\\n\\n2. Mosn \u521b\u5efa\u51fa\u4e00\u4e2afilter chain(\u4ee3\u7801\u4f4d\u7f6e[factory.go](https://github.com/mosn/mosn/tree/master/pkg/streamfilter/factory.go)) ,\u901a\u8fc7\u5faa\u73af\u8c03\u7528CreateFilterChain\u5c06\u6240\u6709\u7684filter\u52a0\u5165\u5230\u94fe\u8def\u7ed3\u6784\u5305\u62ec\u6211\u4eec\u4eca\u5929\u7684\u4e3b\u4eba\u516c\u9650\u6d41\u5668.\\n\\n3. \u521b\u5efa\u9650\u6d41\u5668 NewStreamFilter().\\n\\n4. \u5f53\u6d41\u91cf\u901a\u8fc7mosn \u5c06\u4f1a\u8fdb\u5165\u5230\u9650\u6d41\u5668\u7684\u65b9\u6cd5 OnReceive() \u4e2d\u5e76\u6700\u7ec8\u501f\u52a9sentinel\u5b9e\u73b0\u9650\u6d41\u903b\u8f91(\u662f\u5426\u5df2\u7ecf\u8fbe\u5230\u9608\u503c,\u662f\u653e\u884c\u6d41\u91cf\u8fd8\u662f\u62e6\u622a\u6d41\u91cf, StreamFilterStop or StreamFilterContinue)."},{"id":"/code/layotto-rpc","metadata":{"permalink":"/layotto/blog/code/layotto-rpc","editUrl":"https://github.com/mosn/layotto/edit/main/docs/blog/code/layotto-rpc/index.md","source":"@site/blog/code/layotto-rpc/index.md","title":"Layotto \u6e90\u7801\u89e3\u6790 \u2014\u2014 \u5904\u7406 RPC \u8bf7\u6c42","description":"\u672c\u6587\u4e3b\u8981\u4ee5 Dubbo Json RPC \u4e3a\u4f8b\u6765\u5206\u6790 Layotto RPC \u5904\u7406\u6d41\u7a0b\u3002","date":"2024-07-10T10:04:20.000Z","tags":[],"readingTime":23.85,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"\u6e90\u7801\u89e3\u6790 7\u5c42\u6d41\u91cf\u6cbb\u7406,\u63a5\u53e3\u9650\u6d41","permalink":"/layotto/blog/code/flowcontrol/flowcontrol_code_analyze"},"nextItem":{"title":"\u6e90\u7801\u89e3\u6790  layotto\u542f\u52a8\u6d41\u7a0b","permalink":"/layotto/blog/code/start_process/start_process"}},"content":">\u672c\u6587\u4e3b\u8981\u4ee5 Dubbo Json RPC \u4e3a\u4f8b\u6765\u5206\u6790 Layotto RPC \u5904\u7406\u6d41\u7a0b\u3002\\n> \\n>\u4f5c\u8005\uff1a[\u738b\u5fd7\u9f99](https://github.com/rayowang) | 2022\u5e744\u670821\u65e5\\n\\n- [\u6982\u8ff0](#\u6982\u8ff0)\\n- [\u6e90\u7801\u5206\u6790](#\u6e90\u7801\u5206\u6790)\\n  * [0x00 Layotto \u521d\u59cb\u5316 RPC](#_0x00-layotto-\u521d\u59cb\u5316-rpc)\\n  * [0x01 Dubbo-go-sample client \u53d1\u8d77\u8bf7\u6c42](#_0x01-dubbo-go-sample-client-\u53d1\u8d77\u8bf7\u6c42)\\n  * [0x02 Mosn EventLoop \u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e](#_0x02-mosn-eventloop-\u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e)\\n  * [0x03 Grpc Sever \u4f5c\u4e3a NetworkFilter \u5904\u7406\u8bf7\u6c42](#_0x03-grpc-sever-\u4f5c\u4e3a-networkfilter-\u5904\u7406\u8bf7\u6c42)\\n  * [0x04 Layotto \u53d1\u9001 RPC \u8bf7\u6c42\u5e76\u5199\u5165 Local \u865a\u62df\u8fde\u63a5](#_0x04-layotto-\u53d1\u9001-rpc-\u8bf7\u6c42\u5e76\u5199\u5165-local-\u865a\u62df\u8fde\u63a5)\\n  * [0x05 Mosn \u8bfb\u53d6 Remote \u5e76\u6267\u884c Filter \u548c\u4ee3\u7406\u8f6c\u53d1](#_0x05-mosn-\u8bfb\u53d6-remote-\u5e76\u6267\u884c-filter-\u548c\u4ee3\u7406\u8f6c\u53d1)\\n  * [0x06 Dubbo-go-sample server \u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94](#_0x06-dubbo-go-sample-server-\u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94)\\n  * [0x07 Mosn \u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de Remote \u865a\u62df\u8fde\u63a5](#_0x07-mosn-\u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de-remote-\u865a\u62df\u8fde\u63a5)\\n  * [0x08 Layotto \u63a5\u6536 RPC \u54cd\u5e94\u5e76\u8bfb\u53d6 Local \u865a\u62df\u8fde\u63a5](#_0x08-layotto-\u63a5\u6536-rpc-\u54cd\u5e94\u5e76\u8bfb\u53d6-local-\u865a\u62df\u8fde\u63a5)\\n  * [0x09 Grpc Sever \u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef](#_0x09-grpc-sever-\u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef)\\n  * [0x10 Dubbo-go-sample client \u63a5\u6536\u54cd\u5e94](#_0x10-dubbo-go-sample-client-\u63a5\u6536\u54cd\u5e94)\\n- [\u603b\u7ed3](#\u603b\u7ed3)\\n\\n## \u6982\u8ff0\\nLayotto \u4f5c\u4e3a\u533a\u522b\u4e8e\u7f51\u7edc\u4ee3\u7406 Service Mesh \u7684\u5206\u5e03\u5f0f\u539f\u8bed\u96c6\u5408\u4e14\u4f7f\u7528\u6807\u51c6\u534f\u8bae\u7684 Runtime\uff0c\u5177\u6709\u660e\u786e\u548c\u4e30\u5bcc\u7684\u8bed\u4e49 API\uff0c\u800c RPC API \u5c31\u662f\u4f17\u591a API \u4e2d\u7684\u4e00\u79cd\u3002\u901a\u8fc7 RPC API \u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4e0e\u540c\u6837\u4f7f\u7528 Sidecar \u67b6\u6784\u7684\u5e94\u7528\u672c\u5730 Layotto \u5b9e\u4f8b\u8fdb\u884c\u4ea4\u4e92\uff0c\u4ece\u800c\u95f4\u63a5\u7684\u8c03\u7528\u4e0d\u540c\u670d\u52a1\u7684\u65b9\u6cd5\uff0c\u5e76\u53ef\u4ee5\u5229\u7528\u5185\u7f6e\u80fd\u529b\u5b8c\u6210\u5206\u5e03\u5f0f\u8ffd\u8e2a\u548c\u8bca\u65ad\uff0c\u6d41\u91cf\u8c03\u63a7\uff0c\u9519\u8bef\u5904\u7406\uff0c\u5b89\u5168\u94fe\u8def\u7b49\u64cd\u4f5c\u3002\u5e76\u4e14 Layotto \u7684 RPC API \u57fa\u4e8e Mosn \u7684 Grpc handler \u8bbe\u8ba1\uff0c\u9664\u4e86 Http/Grpc\uff0c\u4e0e\u5176\u5b83\u670d\u52a1\u901a\u4fe1\u65f6\u8fd8\u53ef\u4ee5\u5229\u7528Mosn\u7684\u591a\u534f\u8bae\u673a\u5236\uff0c\u4f7f\u7528 X-Protocol \u534f\u8bae\u8fdb\u884c\u5b89\u5168\u53ef\u9760\u901a\u4fe1\u3002\u5982\u4e0b\u4ee3\u7801\u6240\u793a\uff0cRPC API \u7684\u63a5\u53e3\u4e0e Dapr \u4e00\u81f4\uff0c\u901a\u8fc7 Grpc \u63a5\u53e3 InvokeService \u5373\u53ef\u8fdb\u884c RPC \u8c03\u7528\u3002\\n\\n```go\\ntype DaprClient interface {\\n    // Invokes a method on a remote Dapr app.\\n    InvokeService(ctx context.Context, in *InvokeServiceRequest, opts ...grpc.CallOption) (*v1.InvokeResponse, error)\\n    ...\\n}\\n```\\n\\n## \u6e90\u7801\u5206\u6790\\n\\n\u4e3a\u4e86\u4fbf\u4e8e\u7406\u89e3\uff0c\u8fd9\u91cc\u4ece\u5916\u5230\u5185\uff0c\u518d\u4ece\u5185\u5230\u5916\uff0c\u7531\u6570\u636e\u6d41\u8f6c\u6620\u5c04\u5230\u6e90\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u4eceClient\u53d1\u8d77\u8bf7\u6c42\uff0c\u7a7f\u8d8a\u4e00\u5c42\u4e00\u5c42\u7684\u903b\u8f91\uff0c\u5230 Server \u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94\uff0c\u518d\u4e00\u5c42\u5c42\u7684\u56de\u5230 Client \u6536\u5230\u54cd\u5e94\uff0c\u4e00\u5c42\u5c42\u6765\u5206\u6790 Layotto \u7684 RPC \u6d41\u7a0b\uff0c\u603b\u5171\u62c6\u5206\u6210\u5341\u6b65\u3002\u53e6\u5916\u56e0\u4e3a Grpc Client \u548c Server \u63e1\u624b\u53ca\u4ea4\u4e92\u76f8\u5173\u7684\u5185\u5bb9\u4e0d\u662f\u672c\u6587\u91cd\u70b9\uff0c\u6240\u4ee5\u5206\u6790\u7684\u76f8\u5bf9\u7b80\u7565\u4e00\u4e9b\uff0c\u5176\u5b83\u6b65\u9aa4\u5185\u5bb9\u76f8\u5bf9\u8be6\u7ec6\u4e00\u4e9b\uff0c\u5927\u5bb6\u4e5f\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u60c5\u51b5\u76f4\u63a5\u4ece\u76ee\u5f55\u8df3\u8f6c\u5230\u76f8\u5e94\u6b65\u9aa4\u3002 \\n\\n\u5907\u6ce8\uff1a\u672c\u6587\u57fa\u4e8e commit hash\uff1a1d2bed68c3b2372c34a12aeed41be125a4fdd15a\\n\\n### 0x00 Layotto \u521d\u59cb\u5316 RPC\\n\\nLayotto \u542f\u52a8\u6d41\u7a0b\u6d89\u53ca\u4f17\u591a\u672c\u6d41\u7a0b\uff0c\u5728\u6b64\u53ea\u5206\u6790\u4e0b\u8ddf RPC \u76f8\u5173\u7684\u53ca\u4e0b\u8ff0\u6d41\u7a0b\u7528\u7684\u521d\u59cb\u5316\uff0c\u56e0\u4e3a Layotto \u662f\u5efa\u7acb\u5728 Mosn \u4e4b\u4e0a\uff0c\u6240\u4ee5\u4ece Main \u51fd\u6570\u51fa\u53d1\uff0curfave/cli \u5e93\u4f1a\u8c03\u7528 Mosn \u7684 StageManager \u521d\u59cb\u5316 Mosn, \u8fdb\u800c\u5728 Mosn NetworkFilter \u4e2d\u521d\u59cb\u5316 GrpcServer\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\nmosn.io/mosn/pkg/stagemanager.(*StageManager).runInitStage at stage_manager.go\\n=>\\nmosn.io/mosn/pkg/mosn.(*Mosn).initServer at mosn.go\\n=>\\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcServerFilterFactory).Init at factory.go\\n=>\\nmosn.io/mosn/pkg/filter/network/grpc.(*Handler).New at factory.go\\n// \u65b0\u5efa\u4e00\u4e2a\u5e26\u6709\u5730\u5740\u7684 Grpc \u670d\u52a1\u5668\u3002\u540c\u4e00\u4e2a\u5730\u5740\u8fd4\u56de\u540c\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u53ea\u80fd\u542f\u52a8\u4e00\u6b21\\nfunc (s *Handler) New(addr string, conf json.RawMessage, options ...grpc.ServerOption) (*registerServerWrapper, error) {\\n    s.mutex.Lock()\\n    defer s.mutex.Unlock()\\n    sw, ok := s.servers[addr]\\n    if ok {\\n        return sw, nil\\n    }\\n    ln, err := NewListener(addr)\\n    if err != nil {\\n        log.DefaultLogger.Errorf(\\"create a listener failed: %v\\", err)\\n        return nil, err\\n    }\\n    // \u8c03\u7528 NewRuntimeGrpcServer\\n    srv, err := s.f(conf, options...)\\n    if err != nil {\\n        log.DefaultLogger.Errorf(\\"create a registered server failed: %v\\", err)\\n        return nil, err\\n    }\\n    sw = &registerServerWrapper{\\n        server: srv,\\n        ln:     ln,\\n    }\\n    s.servers[addr] = sw\\n    return sw, nil\\n}\\n=\\nmain.NewRunvtimeGrpcServer at main.go\\n=>\\nmosn.io/layotto/pkg/runtime.(*MosnRuntime).initRuntime at runtime.go\\n=>\\nmosn.io/layotto/pkg/runtime.(*MosnRuntime).initRpcs at runtime.go\\n=>\\nmosn.io/layotto/components/rpc/invoker/mosn.(*mosnInvoker).Init at mosninvoker.go\\nfunc (m *mosnInvoker) Init(conf rpc.RpcConfig) error {\\n    var config mosnConfig\\n    if err := json.Unmarshal(conf.Config, &config); err != nil {\\n        return err\\n    }\\n\\n    // \u521d\u59cb\u5316 RPC \u8c03\u7528\u524d\u7684 Filter\\n    for _, before := range config.Before {\\n        m.cb.AddBeforeInvoke(before)\\n    }\\n\\n    // \u521d\u59cb\u5316 RPC \u8c03\u7528\u540e\u7684 Filter\\n    for _, after := range config.After {\\n        m.cb.AddAfterInvoke(after)\\n    }\\n\\n    if len(config.Channel) == 0 {\\n        return errors.New(\\"missing channel config\\")\\n    }\\n\\n    // \u521d\u59cb\u5316\u4e0e Mosn \u901a\u4fe1\u4f7f\u7528\u7684\u901a\u9053\u3001\u534f\u8bae\u53ca\u5bf9\u5e94\u7aef\u53e3\\n    channel, err := channel.GetChannel(config.Channel[0])\\n    if err != nil {\\n        return err\\n    }\\n    m.channel = channel\\n    return nil\\n}\\n...\\n// \u5b8c\u6210\u4e00\u4e9b\u5217\u521d\u59cb\u5316\u540e\u5728 grpcServerFilter \u4e2d\u542f\u52a8 Grpc Server\\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcServerFilterFactory).Init at factory.go\\nfunc (f *grpcServerFilterFactory) Init(param interface{}) error {\\n    ...\\n    opts := []grpc.ServerOption{\\n        grpc.UnaryInterceptor(f.UnaryInterceptorFilter),\\n        grpc.StreamInterceptor(f.StreamInterceptorFilter),\\n    }\\n    // \u7ecf\u8fc7\u4e0a\u8ff0\u521d\u59cb\u5316\uff0c\u5b8c\u6210 Grpc registerServerWrapper \u7684\u521d\u59cb\u5316\\n    sw, err := f.handler.New(addr, f.config.GrpcConfig, opts...)\\n    if err != nil {\\n        return err\\n    }\\n    // \u542f\u52a8 Grpc sever\\n    sw.Start(f.config.GracefulStopTimeout)\\n    f.server = sw\\n    log.DefaultLogger.Debugf(\\"grpc server filter initialized success\\")\\n    return nil\\n}\\n...\\n// StageManager \u5728 runInitStage \u4e4b\u540e\u8fdb\u5165 runStartStage \u542f\u52a8 Mosn\\nfunc (stm *StageManager) runStartStage() {\\n    st := time.Now()\\n    stm.SetState(Starting)\\n    for _, f := range stm.startupStages {\\n        f(stm.app)\\n    }\\n\\n    stm.wg.Add(1)\\n    // \u5728\u6240\u6709\u542f\u52a8\u9636\u6bb5\u5b8c\u6210\u540e\u542f\u52a8 Mosn\\n    stm.app.Start()\\n    ...\\n}\\n```\\n\\n### 0x01 Dubbo-go-sample client \u53d1\u8d77\u8bf7\u6c42\\n\\n\u6839\u636e [Dubbo Json Rpc Example](https://mosn.io/layotto/docs/start/rpc/dubbo_json_rpc) \u4f8b\u5b50\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\\n\\n```shell\\ngo run demo/rpc/dubbo_json_rpc/dubbo_json_client/client.go -d \'{\\"jsonrpc\\":\\"2.0\\",\\"method\\":\\"GetUser\\",\\"params\\":[\\"A003\\"],\\"id\\":9527}\'\\n```\\n\\n\u4f7f\u7528 Layotto \u5bf9 App \u63d0\u4f9b\u7684 Grpc API InvokeService \u53d1\u8d77 RPC \u8c03\u7528\uff0c\u7ecf\u8fc7\u6570\u636e\u586b\u5145\u548c\u8fde\u63a5\u5efa\u7acb\u7b49\u6d41\u7a0b\uff0c\u6700\u7ec8\u901a\u8fc7 Grpc clientStream \u4e2d\u8c03\u7528 SendMsg \u5411 Layotto \u53d1\u9001\u6570\u636e\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\n\\nfunc main() {\\n    data := flag.String(\\"d\\", `{\\"jsonrpc\\":\\"2.0\\",\\"method\\":\\"GetUser\\",\\"params\\":[\\"A003\\"],\\"id\\":9527}`, \\"-d\\")\\n    flag.Parse()\\n    \\n    conn, err := grpc.Dial(\\"localhost:34904\\", grpc.WithInsecure())\\n    if err != nil {\\n        log.Fatal(err)\\n    }\\n\\n    cli := runtimev1pb.NewRuntimeClient(conn)\\n    ctx, cancel := context.WithCancel(context.TODO())\\n    defer cancel()\\n    // \u901a\u8fc7 Grpc \u63a5\u53e3 InvokeService \u8fdb\u884c RPC \u8c03\u7528\\n    resp, err := cli.InvokeService(\\n        ctx,\\n       // \u4f7f\u7528 runtimev1pb.InvokeServiceRequest \u53d1\u8d77 Grpc \u8bf7\u6c42\\n        &runtimev1pb.InvokeServiceRequest{\\n           // \u8981\u8bf7\u6c42\u7684 server \u63a5\u53e3 ID\\n           Id: \\"org.apache.dubbo.samples.UserProvider\\",\\n            Message: &runtimev1pb.CommonInvokeRequest{\\n               // \u8981\u8bf7\u6c42\u7684\u63a5\u53e3\u5bf9\u5e94\u7684\u65b9\u6cd5\u540d\\n                Method:        \\"GetUser\\",\\n                ContentType:   \\"\\",\\n                Data:          &anypb.Any{Value: []byte(*data)},\\n                HttpExtension: &runtimev1pb.HTTPExtension{Verb: runtimev1pb.HTTPExtension_POST},\\n            },\\n        },\\n    )\\n    if err != nil {\\n        log.Fatal(err)\\n    }\\n\\n    fmt.Println(string(resp.Data.GetValue()))\\n}\\n=>\\nmosn.io/layotto/spec/proto/runtime/v1.(*runtimeClient).InvokeService at runtime.pb.go\\n=>\\ngoogle.golang.org/grpc.(*ClientConn).Invoke at call.go\\n=>\\ngoogle.golang.org/grpc.(*clientStream).SendMsg at stream.go\\n=>\\ngoogle.golang.org/grpc.(*csAttempt).sendMsg at stream.go\\n=>\\ngoogle.golang.org/grpc/internal/transport.(*http2Client).Write at http2_client.go\\n```\\n\\n### 0x02 Mosn EventLoop \u8bfb\u534f\u7a0b\u5904\u7406\u8bf7\u6c42\u6570\u636e\\n\\n\u4e0a\u6587\u8bf4\u8fc7 Layotto \u7684\u5185\u6838\u76f8\u5f53\u4e8e\u662f Mosn\uff0c\u6240\u4ee5\u5f53\u7f51\u7edc\u8fde\u63a5\u6570\u636e\u5230\u8fbe\u65f6\uff0c\u4f1a\u5148\u5230 Mosn \u7684 L4 \u7f51\u7edc\u5c42\u8fdb\u884c\u8bfb\u5199\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\nmosn.io/mosn/pkg/network.(*listener).accept at listener.go\\n=>\\nmosn.io/mosn/pkg/server.(*activeListener).OnAccept at handler.go\\n=>\\nmosn.io/mosn/pkg/server.(*activeRawConn).ContinueFilterChain at handler.go\\n=>\\nmosn.io/mosn/pkg/server.(*activeListener).newConnection at handler.go\\n=>\\nmosn.io/mosn/pkg/network.(*connection).Start at connection.go\\n=>\\nmosn.io/mosn/pkg/network.(*connection).startRWLoop at connection.go\\nfunc (c *connection) startRWLoop(lctx context.Context) {\\n    c.internalLoopStarted = true\\n\\n    utils.GoWithRecover(func() {\\n       // \u8bfb\u534f\u7a0b\\n        c.startReadLoop()\\n    }, func(r interface{}) {\\n        c.Close(api.NoFlush, api.LocalClose)\\n    })\\n\\n    if c.checkUseWriteLoop() {\\n        c.useWriteLoop = true\\n        utils.GoWithRecover(func() {\\n           // \u5199\u534f\u7a0b\\n            c.startWriteLoop()\\n        }, func(r interface{}) {\\n            c.Close(api.NoFlush, api.LocalClose)\\n        })\\n    }\\n}\\n```\\n\\n\u5728 startRWLoop \u65b9\u6cd5\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4f1a\u5206\u522b\u5f00\u542f\u4e24\u4e2a\u534f\u7a0b\u6765\u5206\u522b\u5904\u7406\u8be5\u8fde\u63a5\u4e0a\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u5373 startReadLoop \u548c startWriteLoop\uff0c\u5728 startReadLoop \u4e2d\u7ecf\u8fc7\u5982\u4e0b\u6d41\u8f6c\uff0c\u628a\u7f51\u7edc\u5c42\u8bfb\u5230\u7684\u6570\u636e\uff0c\u7531 filterManager \u8fc7\u6ee4\u5668\u7ba1\u7406\u5668\u628a\u6570\u636e\u4ea4\u7531\u8fc7\u6ee4\u5668\u94fe\u8fdb\u884c\u5904\u7406\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\nmosn.io/mosn/pkg/network.(*connection).doRead at connection.go\\n=>\\nmosn.io/mosn/pkg/network.(*connection).onRead at connection.go\\n=>\\nmosn.io/mosn/pkg/network.(*filterManager).OnRead at filtermanager.go\\n=>\\nmosn.io/mosn/pkg/network.(*filterManager).onContinueReading at filtermanager.go\\nfunc (fm *filterManager) onContinueReading(filter *activeReadFilter) {\\n    var index int\\n    var uf *activeReadFilter\\n\\n    if filter != nil {\\n        index = filter.index + 1\\n    }\\n\\n    // filterManager\u904d\u5386\u8fc7\u6ee4\u5668\u8fdb\u884c\u6570\u636e\u5904\u7406\\n    for ; index < len(fm.upstreamFilters); index++ {\\n        uf = fm.upstreamFilters[index]\\n        uf.index = index\\n        // \u5bf9\u6ca1\u6709\u521d\u59cb\u5316\u7684\u8fc7\u6ee4\u5668\u8c03\u7528\u5176\u521d\u59cb\u5316\u65b9\u6cd5 OnNewConnection\uff0c\u672c\u4f8b\u4e3afunc (f *grpcFilter) OnNewConnection() api.FilterStatus\uff08\u5411 Listener \u53d1\u9001 grpc \u8fde\u63a5\u4ee5\u5524\u9192 Listener \u7684 Accept\uff09\\n        if !uf.initialized {\\n            uf.initialized = true\\n\\n            status := uf.filter.OnNewConnection()\\n\\n            if status == api.Stop {\\n                return\\n            }\\n        }\\n\\n        buf := fm.conn.GetReadBuffer()\\n\\n        if buf != nil && buf.Len() > 0 {\\n           // \u901a\u77e5\u76f8\u5e94\u8fc7\u6ee4\u5668\u5904\u7406\\n            status := uf.filter.OnData(buf)\\n\\n            if status == api.Stop {\\n                return\\n            }\\n        }\\n    }\\n}\\n=>\\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcFilter).OnData at filter.go\\n=>\\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcFilter).dispatch at filter.go\\nfunc (f *grpcFilter) dispatch(buf buffer.IoBuffer) {\\n    if log.DefaultLogger.GetLogLevel() >= log.DEBUG {\\n        log.DefaultLogger.Debugf(\\"grpc get datas: %d\\", buf.Len())\\n    }\\n    // \u53d1\u9001\u6570\u636e\u5524\u9192\u8fde\u63a5\u8bfb\u53d6\\n    f.conn.Send(buf)\\n    if log.DefaultLogger.GetLogLevel() >= log.DEBUG {\\n        log.DefaultLogger.Debugf(\\"read dispatch finished\\")\\n    }\\n}\\n```\\n\\n### 0x03 Grpc Sever \u4f5c\u4e3a NetworkFilter \u5904\u7406\u8bf7\u6c42\\n\\n\u7b2c\u4e00\u9636\u6bb5\u4e2d\u4ece\u539f\u59cb\u8fde\u63a5\u8bfb\u53d6\u6570\u636e\uff0c\u4f1a\u8fdb\u5165 Grpc Serve \u5904\u7406\uff0cServe \u65b9\u6cd5\u901a\u8fc7 net.Listener \u76d1\u542c\u8fde\u63a5\uff0c\u6bcf\u6b21\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u534f\u7a0b\u6765\u5904\u7406\u65b0\u7684\u8fde\u63a5\uff08handleRawConn\uff09\uff0c\u5efa\u7acb\u4e00\u4e2a\u57fa\u4e8eHttp2 \u7684 Transport \u8fdb\u884c\u4f20\u8f93\u5c42\u7684 RPC \u8c03\u7528\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\ngoogle.golang.org/grpc.(*Server).handleRawConn at server.go\\nfunc (s *Server) handleRawConn(lisAddr string, rawConn net.Conn) {\\n    // \u6821\u9a8c\u670d\u52a1\u72b6\u6001\\n    if s.quit.HasFired() {\\n        rawConn.Close()\\n        return\\n    }\\n    rawConn.SetDeadline(time.Now().Add(s.opts.connectionTimeout))\\n    conn, authInfo, err := s.useTransportAuthenticator(rawConn)\\n    if err != nil {\\n       ...\\n    }\\n    // HTTP2 \u63e1\u624b\uff0c\u521b\u5efa Http2Server \u4e0e\u5ba2\u6237\u7aef\u4ea4\u6362\u5e27\u7684\u521d\u59cb\u5316\u4fe1\u606f\uff0c\u5e27\u548c\u7a97\u53e3\u5927\u5c0f\u7b49\\n    st := s.newHTTP2Transport(conn, authInfo)\\n    if st == nil {\\n        return\\n    }\\n\\n    rawConn.SetDeadline(time.Time{})\\n    if !s.addConn(lisAddr, st) {\\n        return\\n    }\\n    // \u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u8fdb\u884c\u6d41\u5904\u7406\\n    go func() {\\n        s.serveStreams(st)\\n        s.removeConn(lisAddr, st)\\n    }()\\n    ...\\n}\\n=>\\ngoogle.golang.org/grpc.(*Server).serveStreams at server.go\\n=>\\ngoogle.golang.org/grpc.(*Server).handleStream at server.go\\nfunc (s *Server) handleStream(t transport.ServerTransport, stream *transport.Stream, trInfo *traceInfo) {\\n    // \u627e\u5230\u5230\u9700\u8981\u8c03\u7528\u7684 FullMethod\uff0c\u6b64\u4f8b\u4e3a spec.proto.runtime.v1.Runtime/InvokeService\\n    sm := stream.Method()\\n    if sm != \\"\\" && sm[0] == \'/\' {\\n        sm = sm[1:]\\n    }\\n    ...\\n    service := sm[:pos]\\n    method := sm[pos+1:]\\n\\n    // \u4ece\u6ce8\u518c\u7684 service \u5217\u8868\u4e2d\u627e\u5230\u5bf9\u5e94 serviceInfo \u5bf9\u8c61\\n    srv, knownService := s.services[service]\\n    if knownService {\\n        // \u6839\u636e\u65b9\u6cd5\u540d\u627e\u5230\u5355\u5411\u8bf7\u6c42\u7684 md\u2014\u2014MethodDesc\uff0c\u6b64 demo \u4e3a mosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler\\n        if md, ok := srv.methods[method]; ok {\\n            s.processUnaryRPC(t, stream, srv, md, trInfo)\\n            return\\n        }\\n        // \u6d41\u5f0f\u8bf7\u6c42\\n        if sd, ok := srv.streams[method]; ok {\\n            s.processStreamingRPC(t, stream, srv, sd, trInfo)\\n            return\\n        }\\n    }\\n    ...\\n=>\\ngoogle.golang.org/grpc.(*Server).processUnaryRPC at server.go\\n=>\\nmosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler at runtime.pb.go\\n=>\\ngoogle.golang.org/grpc.chainUnaryServerInterceptors at server.go\\n=>\\n// \u670d\u52a1\u7aef\u5355\u5411\u8c03\u7528\u62e6\u622a\u5668\uff0c\u7528\u4ee5\u8c03\u7528 Mosn \u7684 streamfilter\\nmosn.io/mosn/pkg/filter/network/grpc.(*grpcServerFilterFactory).UnaryInterceptorFilter at factory.go\\n=>\\ngoogle.golang.org/grpc.getChainUnaryHandler at server.go\\n// \u9012\u5f52\u751f\u6210\u94fe\u5f0fUnaryHandler\\nfunc getChainUnaryHandler(interceptors []UnaryServerInterceptor, curr int, info *UnaryServerInfo, finalHandler UnaryHandler) UnaryHandler {\\n    if curr == len(interceptors)-1 {\\n        return finalHandler\\n    }\\n\\n    return func(ctx context.Context, req interface{}) (interface{}, error) {\\n       // finalHandler\u5c31\u662fmosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler\\n        return interceptors[curr+1](ctx, req, info, getChainUnaryHandler(interceptors, curr+1, info, finalHandler))\\n    }\\n}\\n```\\n\\n### 0x04 Layotto \u53d1\u9001 RPC \u8bf7\u6c42\u5e76\u5199\u5165 Local \u865a\u62df\u8fde\u63a5\\n\\n\u63a5\u4e0a\u8ff0 0x03 \u6d41\u7a0b\uff0c\u4ece Runtime_InvokeService_Handler \u8d77\uff0c\u7531 GRPC \u9ed8\u8ba4 API \u8f6c\u6362\u4e3a Dapr API\uff0c\u8fdb\u5165 Layotto \u63d0\u4f9b\u7684\u5bf9\u63a5 Mosn \u7684\u8f7b\u91cf RPC \u6846\u67b6\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\nmosn.io/layotto/spec/proto/runtime/v1._Runtime_InvokeService_Handler at runtime.pb.go\\n=>\\nmosn.io/layotto/pkg/grpc/default_api.(*api).InvokeService at api.go\\n=>\\nmosn.io/layotto/pkg/grpc/dapr.(*daprGrpcAPI).InvokeService at dapr_api.go\\n=>\\nmosn.io/layotto/components/rpc/invoker/mosn.(*mosnInvoker).Invoke at mosninvoker.go\\n// \u8bf7\u6c42 Mosn \u5e95\u5ea7\u548c\u8fd4\u56de\u54cd\u5e94\\nfunc (m *mosnInvoker) Invoke(ctx context.Context, req *rpc.RPCRequest) (resp *rpc.RPCResponse, err error) {\\n    defer func() {\\n        if r := recover(); r != nil {\\n            err = fmt.Errorf(\\"[runtime][rpc]mosn invoker panic: %v\\", r)\\n            log.DefaultLogger.Errorf(\\"%v\\", err)\\n        }\\n    }()\\n\\n    // 1. \u5982\u679c\u8d85\u65f6\u65f6\u95f4\u4e3a 0\uff0c\u8bbe\u7f6e\u9ed8\u8ba4 3000ms \u8d85\u65f6\\n    if req.Timeout == 0 {\\n        req.Timeout = 3000\\n    }\\n    req.Ctx = ctx\\n    log.DefaultLogger.Debugf(\\"[runtime][rpc]request %+v\\", req)\\n    // 2. \u89e6\u53d1\u8bf7\u6c42\u6267\u884c\u524d\u7684\u81ea\u5b9a\u4e49\u903b\u8f91\\n    req, err = m.cb.BeforeInvoke(req)\\n    if err != nil {\\n        log.DefaultLogger.Errorf(\\"[runtime][rpc]before filter error %s\\", err.Error())\\n        return nil, err\\n    }\\n    // 3. \u6838\u5fc3\u8c03\u7528\uff0c\u4e0b\u6587\u4f1a\u8fdb\u884c\u8be6\u7ec6\u5206\u6790\\n    resp, err = m.channel.Do(req)\\n    if err != nil {\\n        log.DefaultLogger.Errorf(\\"[runtime][rpc]error %s\\", err.Error())\\n        return nil, err\\n    }\\n    resp.Ctx = req.Ctx\\n    // 4. \u89e6\u53d1\u8bf7\u6c42\u8fd4\u56de\u540e\u7684\u81ea\u5b9a\u4e49\u903b\u8f91\\n    resp, err = m.cb.AfterInvoke(resp)\\n    if err != nil {\\n        log.DefaultLogger.Errorf(\\"[runtime][rpc]after filter error %s\\", err.Error())\\n    }\\n    return resp, err\\n}\\n=>\\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*httpChannel).Do at httpchannel.go\\nfunc (h *httpChannel) Do(req *rpc.RPCRequest) (*rpc.RPCResponse, error) {\\n    // 1. \u4f7f\u7528\u4e0a\u4e00\u9636\u6bb5\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u8d85\u65f6\u8bbe\u7f6e context \u8d85\u65f6\\n    timeout := time.Duration(req.Timeout) * time.Millisecond\\n    ctx, cancel := context.WithTimeout(req.Ctx, timeout)\\n    defer cancel()\\n\\n    // 2. \u521b\u5efa\u8fde\u63a5\u5f97\u5230\uff0c\u542f\u52a8 readloop \u534f\u7a0b\u8fdb\u884c Layotto \u548c Mosn \u7684\u8bfb\u5199\u4ea4\u4e92\uff08\u5177\u4f53\u89c1\u4e0b\u6587\u5206\u6790\uff09\\n    conn, err := h.pool.Get(ctx)\\n    if err != nil {\\n        return nil, err\\n    }\\n    \\n    // 3. \u8bbe\u7f6e\u6570\u636e\u5199\u5165\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4\\n    hstate := conn.state.(*hstate)\\n    deadline, _ := ctx.Deadline()\\n    if err = conn.SetWriteDeadline(deadline); err != nil {\\n        hstate.close()\\n        h.pool.Put(conn, true)\\n        return nil, common.Error(common.UnavailebleCode, err.Error())\\n    }\\n    // 4. \u56e0\u4e3a\u521d\u59cb\u5316\u65f6\u914d\u7f6e\u7684 Layotto \u4e0e Mosn \u4ea4\u4e92\u4f7f\u7528\u7684\u662f Http \u534f\u8bae\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u6784\u9020 Http \u8bf7\u6c42\\n    httpReq := h.constructReq(req)\\n    defer fasthttp.ReleaseRequest(httpReq)\\n\\n    // \u501f\u52a9 fasthttp \u8bf7\u6c42\u4f53\u5199\u5165\u865a\u62df\u8fde\u63a5\\n    if _, err = httpReq.WriteTo(conn); err != nil {\\n        hstate.close()\\n        h.pool.Put(conn, true)\\n        return nil, common.Error(common.UnavailebleCode, err.Error())\\n    }\\n\\n    // 5. \u6784\u9020 fasthttp.Response \u7ed3\u6784\u4f53\u8bfb\u53d6\u548c\u89e3\u6790 hstate \u7684\u8fd4\u56de\uff0c\u5e76\u8bbe\u7f6e\u8bfb\u53d6\u8d85\u65f6\u65f6\u95f4\\n    httpResp := &fasthttp.Response{}\\n    hstate.reader.SetReadDeadline(deadline)\\n\\n    // \u5728 Mosn \u6570\u636e\u8fd4\u56de\u524d\u8fd9\u91cc\u4f1a\u963b\u585e\uff0creadloop \u534f\u7a0b\u8bfb\u53d6 Mosn \u8fd4\u56de\u7684\u6570\u636e\u4e4b\u540e\u6d41\u7a0b\u89c1\u4e0b\u8ff0 0x08 \u9636\u6bb5\\n    if err = httpResp.Read(bufio.NewReader(hstate.reader)); err != nil {\\n        hstate.close()\\n        h.pool.Put(conn, true)\\n        return nil, common.Error(common.UnavailebleCode, err.Error())\\n    }\\n    h.pool.Put(conn, false)\\n    ...\\n}\\n=>\\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*connPool).Get at connpool.go\\n// Get is get wrapConn by context.Context\\nfunc (p *connPool) Get(ctx context.Context) (*wrapConn, error) {\\n    if err := p.waitTurn(ctx); err != nil {\\n        return nil, err\\n    }\\n\\n    p.mu.Lock()\\n    // 1. \u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\u8fde\u63a5\\n    if ele := p.free.Front(); ele != nil {\\n        p.free.Remove(ele)\\n        p.mu.Unlock()\\n        wc := ele.Value.(*wrapConn)\\n        if !wc.isClose() {\\n            return wc, nil\\n        }\\n    } else {\\n        p.mu.Unlock()\\n    }\\n\\n    // 2. \u521b\u5efa\u65b0\u7684\u8fde\u63a5\\n    c, err := p.dialFunc()\\n    if err != nil {\\n        p.freeTurn()\\n        return nil, err\\n    }\\n    wc := &wrapConn{Conn: c}\\n    if p.stateFunc != nil {\\n        wc.state = p.stateFunc()\\n    }\\n    // 3. \u542f\u52a8 readloop \u72ec\u7acb\u534f\u7a0b\u8bfb\u53d6 Mosn \u8fd4\u56de\u7684\u6570\u636e\\n    if p.onDataFunc != nil {\\n        utils.GoWithRecover(func() {\\n            p.readloop(wc)\\n        }, nil)\\n    }\\n    return wc, nil\\n}\\n=>\\n```\\n\\n\u4e0a\u9762\u7b2c\u4e8c\u6b65\u521b\u5efa\u65b0\u7684\u8fde\u63a5\u9700\u8981\u6ce8\u610f\u4e0b\uff0c\u662f\u8c03\u7528\u4e86 init \u9636\u6bb5\u7684 RegistChannel \u521d\u59cb\u5316\u7684\u534f\u8bae\u4e2d\u7684 dialFunc func() (net.Conn, error)\uff0c\u56e0\u4e3a\u914d\u7f6e\u91cc\u4e0e Mosn \u4ea4\u4e92\u7528\u7684\u662f Http \u534f\u8bae\uff0c\u6240\u4ee5\u8fd9\u91cc\u662f newHttpChanel\uff0c\u76ee\u524d\u8fd8\u652f\u6301 Bolt\uff0cDubbo \u7b49\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002\\n\\n```go\\nmosn.io/layotto/components/rpc/invoker/mosn/channel.newHttpChannel at httpchannel.go\\n// newHttpChannel is used to create rpc.Channel according to ChannelConfig\\nfunc newHttpChannel(config ChannelConfig) (rpc.Channel, error) {\\n    hc := &httpChannel{}\\n    // \u4e3a\u51cf\u5c11\u8fde\u63a5\u521b\u5efa\u5f00\u9500\u7684\u8fde\u63a5\u6c60\uff0c\u5b9a\u4e49\u5728 mosn.io/layotto/components/rpc/invoker/mosn/channel/connpool.go\\n    hc.pool = newConnPool(\\n        config.Size,\\n        // dialFunc\\n        func() (net.Conn, error) {\\n            _, _, err := net.SplitHostPort(config.Listener)\\n            if err == nil {\\n                return net.Dial(\\"tcp\\", config.Listener)\\n            }\\n           //\u521b\u5efa\u4e00\u5bf9\u865a\u62df\u8fde\u63a5(net.Pipe)\uff0cLayotto \u6301\u6709 local\uff0cMosn \u6301\u6709 remote, Layotto \u5411 local \u5199\u5165\uff0cMosn \u4f1a\u6536\u5230\u6570\u636e, Mosn \u4ece remote\u8bfb\u53d6\uff0c\u6267\u884c filter \u903b\u8f91\u5e76\u8fdb\u884c\u4ee3\u7406\u8f6c\u53d1\uff0c\u518d\u5c06\u54cd\u5e94\u5199\u5230 remote ,\u6700\u540e Layotto \u4ece remote \u8bfb\u53d6\uff0c\u83b7\u5f97\u54cd\u5e94\\n            local, remote := net.Pipe()\\n            localTcpConn := &fakeTcpConn{c: local}\\n            remoteTcpConn := &fakeTcpConn{c: remote}\\n           // acceptFunc \u662f\u5b9a\u4e49\u5728 mosn.io/layotto/components/rpc/invoker/mosn/channel.go \u4e2d\u7684\u95ed\u5305\uff0c\u95ed\u5305\u4e2d\u76d1\u542c\u4e86 remote \u865a\u62df\u8fde\u63a5\\n            if err := acceptFunc(remoteTcpConn, config.Listener); err != nil {\\n                return nil, err\\n            }\\n            // the goroutine model is:\\n            // request goroutine ---\x3e  localTcpConn ---\x3e mosn\\n            //        ^                                        |\\n            //        |                                        |\\n            //        |                                        |\\n            //         hstate <-- readloop goroutine     <------\\n            return localTcpConn, nil\\n        },\\n        // stateFunc\\n        func() interface{} {\\n            // hstate \u662f readloop \u534f\u7a0b\u4e0e request \u534f\u7a0b\u901a\u4fe1\u7684\u7ba1\u9053\uff0c\u662f\u4e00\u5bf9\u8bfb\u5199 net.Conn\uff0c\u8bf7\u6c42\u534f\u7a0b\u4ece reader net.Conn \u4e2d\u8bfb\u6570\u636e\uff0creadloop \u534f\u7a0b\u5e8f\u5f80 writer net.Conn \u5199\u6570\u636e\\n            s := &hstate{}\\n            s.reader, s.writer = net.Pipe()\\n            return s\\n        },\\n        hc.onData,\\n        hc.cleanup,\\n    )\\n    return hc, nil\\n}\\n```\\n\\n### 0x05 Mosn \u8bfb\u53d6 Remote \u5e76\u6267\u884c Filter \u548c\u4ee3\u7406\u8f6c\u53d1\\n\\n(1) \u4e0e 0x02 \u7c7b\u4f3c\uff0cfiltermanager \u6267\u884c\u8fc7\u6ee4\u5668\u5904\u7406\u9636\u6bb5\uff0c\u8fd9\u91cc\u4f1a\u5230 proxy \u4e2d\u8fdb\u884c\u4ee3\u7406\u8f6c\u53d1\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002\\n\\n```go\\n...\\nmosn.io/mosn/pkg/network.(*filterManager).onContinueReading at filtermanager.go\\n=>\\nmosn.io/mosn/pkg/proxy.(*proxy).OnData at proxy.go\\nfunc (p *proxy) OnData(buf buffer.IoBuffer) api.FilterStatus {\\n    if p.fallback {\\n        return api.Continue\\n    }\\n\\n    if p.serverStreamConn == nil {\\n        ...\\n        p.serverStreamConn = stream.CreateServerStreamConnection(p.context, proto, p.readCallbacks.Connection(), p)\\n    }\\n    //\u628a\u6570\u636e\u5206\u53d1\u5230\u5bf9\u5e94\u534f\u8bae\u7684\u89e3\u7801\u5668\uff0c\u5728\u8fd9\u91cc\u56e0\u4e3a\u662f POST /org.apache.dubbo.samples.UserProvider HTTP/1.1\uff0c\u6240\u4ee5\u662f mosn.io/mosn/pkg/stream/http.(*serverStreamConnection).serve at stream.go\\n    p.serverStreamConn.Dispatch(buf)\\n\\n    return api.Stop\\n}\\n=>\\n```\\n\\n(2) serverStreamConnection.serve \u76d1\u542c\u5e76\u5904\u7406\u8bf7\u6c42\u5230 downstream OnReceive\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002\\n\\n```go\\nmosn.io/mosn/pkg/stream/http.(*serverStream).handleRequest at stream.go\\nfunc (s *serverStream) handleRequest(ctx context.Context) {\\n    if s.request != nil {\\n        // set non-header info in request-line, like method, uri\\n        injectCtxVarFromProtocolHeaders(ctx, s.header, s.request.URI())\\n        hasData := true\\n        if len(s.request.Body()) == 0 {\\n            hasData = false\\n        }\\n\\n        if hasData {\\n           //\u5728\u6b64\u8fdb\u5165 downstream OnReceive\\n            s.receiver.OnReceive(s.ctx, s.header, buffer.NewIoBufferBytes(s.request.Body()), nil)\\n        } else {\\n            s.receiver.OnReceive(s.ctx, s.header, nil, nil)\\n        }\\n    }\\n}\\n=>\\nmosn.io/mosn/pkg/proxy.(*downStream).OnReceive at downstream.go\\nfunc (s *downStream) OnReceive(ctx context.Context, headers types.HeaderMap, data types.IoBuffer, trailers types.HeaderMap) {\\n    ...\\n    var task = func() {\\n        ...\\n\\n        phase := types.InitPhase\\n        for i := 0; i < 10; i++ {\\n            s.cleanNotify()\\n\\n            phase = s.receive(s.context, id, phase)\\n            ...\\n            }\\n        }\\n    }\\n\\n    if s.proxy.serverStreamConn.EnableWorkerPool() {\\n        if s.proxy.workerpool != nil {\\n            // use the worker pool for current proxy\\n            s.proxy.workerpool.Schedule(task)\\n        } else {\\n            // use the global shared worker pool\\n            pool.ScheduleAuto(task)\\n        }\\n        return\\n    }\\n\\n    task()\\n    return\\n\\n}\\n```\\n\\n(3) \u4e0a\u8ff0 ScheduleAuto \u8c03\u5ea6\u540e\uff0c\u7ecf\u8fc7 downStream \u7684 reveive \u7684\u5404\u4e2a\u9636\u6bb5\u5904\u7406\uff0c\u7ecf\u8fc7 upstreamRequest\u3001http clientStream \u7b49\u5904\u7406\uff0c\u6700\u7ec8\u4ece\u7f51\u7edc\u5c42\u7684 connection.Write \u53d1\u9001\u6570\u636e\u5e76\u8fdb\u5165 WaitNotify \u9636\u6bb5\u963b\u585e\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\u3002\\n\\n```go\\nmosn.io/mosn/pkg/sync.(*workerPool).ScheduleAuto at workerpool.go\\n=>\\nmosn.io/mosn/pkg/sync.(*workerPool).spawnWorker at workerpool.go\\n=>\\nmosn.io/mosn/pkg/proxy.(*downStream).receive at downstream.go\\n=>\\nInitPhase=>DownFilter=>MatchRoute=>DownFilterAfterRoute=>ChooseHost=>DownFilterAfterChooseHost=>DownRecvHeader=>DownRecvData\\n=>\\nmosn.io/mosn/pkg/proxy.(*downStream).receiveData at downstream.go\\n=>\\nmosn.io/mosn/pkg/proxy.(*upstreamRequest).appendData at upstream.go\\n=>\\nmosn.io/mosn/pkg/stream/http.(*clientStream).doSend at stream.go\\n=>\\ngithub.com/valyala/fasthttp.(*Request).WriteTo at http.go\\n=>\\nmosn.io/mosn/pkg/stream/http.(*streamConnection).Write at stream.go\\n>\\nmosn.io/mosn/pkg/network.(*connection).Write at connection.go\\n=>\\nmosn.io/mosn/pkg/proxy.(*downStream).receive at downstream.go\\nfunc (s *downStream) receive(ctx context.Context, id uint32, phase types.Phase) types.Phase {\\n    for i := 0; i <= int(types.End-types.InitPhase); i++ {\\n        s.phase = phase\\n        \\n        switch phase {\\n        ...\\n        case types.WaitNotify:\\n            s.printPhaseInfo(phase, id)\\n            if p, err := s.waitNotify(id); err != nil {\\n                return p\\n            }\\n        \\n            if log.Proxy.GetLogLevel() >= log.DEBUG {\\n            \\tlog.Proxy.Debugf(s.context, \\"[proxy] [downstream] OnReceive send downstream response %+v\\", s.downstreamRespHeaders)\\n            }\\n        ...\\n} \\n=>\\nfunc (s *downStream) waitNotify(id uint32) (phase types.Phase, err error) {\\n    if atomic.LoadUint32(&s.ID) != id {\\n        return types.End, types.ErrExit\\n    }\\n\\n\\tif log.Proxy.GetLogLevel() >= log.DEBUG {\\n\\t\\tlog.Proxy.Debugf(s.context, \\"[proxy] [downstream] waitNotify begin %p, proxyId = %d\\", s, s.ID)\\n\\t}\\n\\tselect {\\n\\t// \u963b\u585e\u7b49\u5f85\\n\\tcase <-s.notify:\\n\\t}\\n\\treturn s.processError(id)\\n}\\n```\\n\\n### 0x06 Dubbo-go-sample server \u6536\u5230\u8bf7\u6c42\u8fd4\u56de\u54cd\u5e94\\n\\n\u8fd9\u91cc\u5c31\u662f dubbo-go-sample server\u7684\u5904\u7406\uff0c\u6682\u4e0d\u5c55\u5f00\uff0c\u8d34\u4e0b\u65e5\u5fd7\u4fe1\u606f\uff0c\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u56de\u53bb\u7ffb\u770b\u6e90\u7801\u3002\\n\\n```\\n[2022-04-18/21:03:18 github.com/apache/dubbo-go-samples/rpc/jsonrpc/go-server/pkg.(*UserProvider2).GetUser: user_provider2.go: 53] userID:\\"A003\\"\\n[2022-04-18/21:03:18 github.com/apache/dubbo-go-samples/rpc/jsonrpc/go-server/pkg.(*UserProvider2).GetUser: user_provider2.go: 56] rsp:&pkg.User{ID:\\"113\\", Name:\\"Moorse\\", Age:30, sex:0, Birth:703394193, Sex:\\"MAN\\"}\\n```\\n\\n### 0x07 Mosn \u6846\u67b6\u5904\u7406\u54cd\u5e94\u5e76\u5199\u56de Remote \u865a\u62df\u8fde\u63a5\\n\\n\u63a5\u4e0a\u8ff0 0x05 \u7b2c\u4e09\u9636\u6bb5\uff0c\u5728 reveive \u7684\u5faa\u73af\u9636\u6bb5\u7684 UpRecvData \u9636\u6bb5\u8fdb\u5165\u5904\u7406\u54cd\u5e94\u903b\u8f91\uff0c\u7ecf\u8fc7\u4e00\u7cfb\u5217\u5904\u7406\u6700\u7ec8 Response \u5199\u56de 0x04 \u4e2d\u7684 remote \u865a\u62df\u8fde\u63a5\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\nmosn.io/mosn/pkg/proxy.(*downStream).receive at downstream.go\\nfunc (s *downStream) waitNotify(id uint32) (phase types.Phase, err error) {\\n    if atomic.LoadUint32(&s.ID) != id {\\n        return types.End, types.ErrExit\\n    }\\n    \\n    if log.Proxy.GetLogLevel() >= log.DEBUG {\\n        log.Proxy.Debugf(s.context, \\"[proxy] [downstream] waitNotify begin %p, proxyId = %d\\", s, s.ID)\\n    }\\n    // \u8fd4\u56de\u54cd\u5e94\\n    select {\\n    case <-s.notify:\\n    }\\n    return s.processError(id)\\n}\\n=>\\nUpFilter\\n=>\\nUpRecvHeader\\n=>\\nfunc (s *downStream) receive(ctx context.Context, id uint32, phase types.Phase) types.Phase {\\n    for i := 0; i <= int(types.End-types.InitPhase); i++ {\\n        s.phase = phase\\n\\n        switch phase {\\n        ...\\n        case types.UpRecvData:\\n            if s.downstreamRespDataBuf != nil {\\n            \\ts.printPhaseInfo(phase, id)\\n            \\ts.upstreamRequest.receiveData(s.downstreamRespTrailers == nil)\\n                if p, err := s.processError(id); err != nil {\\n              \\t   return p\\n              }\\n           }\\n        ...\\n}\\n=>\\nmosn.io/mosn/pkg/proxy.(*upstreamRequest).receiveData at upstream.go\\n=>\\nmosn.io/mosn/pkg/proxy.(*downStream).onUpstreamData at downstream.go\\n=>\\nmosn.io/mosn/pkg/proxy.(*downStream).appendData at downstream.go\\n=>\\nmosn.io/mosn/pkg/stream/http.(*serverStream).AppendData at stream.go\\n=>\\nmosn.io/mosn/pkg/stream/http.(*serverStream).endStream at stream.go\\n=>\\nmosn.io/mosn/pkg/stream/http.(*serverStream).doSend at stream.go\\n=>\\ngithub.com/valyala/fasthttp.(*Response).WriteTo at http.go\\n=>\\ngithub.com/valyala/fasthttp.writeBufio at http.go\\n=>\\ngithub.com/valyala/fasthttp.(*statsWriter).Write at http.go\\n=>\\nmosn.io/mosn/pkg/stream/http.(*streamConnection).Write at stream.go\\n```\\n\\n### 0x08 Layotto \u63a5\u6536 RPC \u54cd\u5e94\u5e76\u8bfb\u53d6 Local \u865a\u62df\u8fde\u63a5\\n\\n\u4e0a\u8ff0 0x04 \u542f\u52a8\u7684 readloop \u534f\u7a0b\u8bfbIO\u88ab\u6fc0\u6d3b\uff0c\u4ece\u8fde\u63a5\u8bfb\u53d6\u6570Mosn \u4f20\u56de\u7684\u6570\u636e\uff0c\u7136\u540e\u4ea4\u7ed9 hstate \u7ba1\u9053\u4e2d\u8f6c\u5904\u7406\u518d\u8fd4\u56de\u7ed9\u8bf7\u6c42\u534f\u7a0b\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*connPool).readloop at connpool.go\\n// readloop is loop to read connected then exec onDataFunc\\nfunc (p *connPool) readloop(c *wrapConn) {\\n    var err error\\n\\n    defer func() {\\n        c.close()\\n        if p.cleanupFunc != nil {\\n            p.cleanupFunc(c, err)\\n        }\\n    }()\\n\\n    c.buf = buffer.NewIoBuffer(defaultBufSize)\\n    for {\\n        // \u4ece\u8fde\u63a5\u8bfb\u53d6\u6570\u636e\\n        n, readErr := c.buf.ReadOnce(c)\\n        if readErr != nil {\\n            err = readErr\\n            if readErr == io.EOF {\\n                log.DefaultLogger.Debugf(\\"[runtime][rpc]connpool readloop err: %s\\", readErr.Error())\\n            } else {\\n                log.DefaultLogger.Errorf(\\"[runtime][rpc]connpool readloop err: %s\\", readErr.Error())\\n            }\\n        }\\n\\n        if n > 0 {\\n            // \u5728onDataFunc \u59d4\u6258\u7ed9 hstate \u5904\u7406\u6570\u636e\\n            if onDataErr := p.onDataFunc(c); onDataErr != nil {\\n                err = onDataErr\\n                log.DefaultLogger.Errorf(\\"[runtime][rpc]connpool onData err: %s\\", onDataErr.Error())\\n            }\\n        }\\n\\n        if err != nil {\\n            break\\n        }\\n\\n        if c.buf != nil && c.buf.Len() == 0 && c.buf.Cap() > maxBufSize {\\n            c.buf.Free()\\n            c.buf.Alloc(defaultBufSize)\\n        }\\n    }\\n}\\n=>\\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*httpChannel).onData at httpchannel.go\\n=>\\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*hstate).onData at httpchannel.go\\n=>\\nnet.(*pipe).Write at pipe.go\\n=>\\nmosn.io/layotto/components/rpc/invoker/mosn/channel.(*httpChannel).Do at httpchannel.go\\nfunc (h *httpChannel) Do(req *rpc.RPCRequest) (*rpc.RPCResponse, error) {\\n    ...\\n    // \u63a5\u4e0a\u8ff00x04\u9636\u6bb5\uff0cmosn \u6570\u636e\u8fd4\u56de\u540e\uff0c\u4ece hstate \u8bfb\u53d6 readloop \u534f\u7a0b\u4ece mosn \u8fd4\u56de\u7684\u6570\u636e\\n    if err = httpResp.Read(bufio.NewReader(hstate.reader)); err != nil {\\n        hstate.close()\\n        h.pool.Put(conn, true)\\n        return nil, common.Error(common.UnavailebleCode, err.Error())\\n    }\\n    h.pool.Put(conn, false)\\n\\n    // \u83b7\u53d6 fasthttp \u7684\u6570\u636e\u90e8\u5206\uff0c\u89e3\u6790\u72b6\u6001\u7801\uff0c\u5931\u8d25\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\u548c\u72b6\u6001\u7801\\n    body := httpResp.Body()\\n    if httpResp.StatusCode() != http.StatusOK {\\n        return nil, common.Errorf(common.UnavailebleCode, \\"http response code %d, body: %s\\", httpResp.StatusCode(), string(body))\\n    }\\n    \\n    // 6. \u5c06\u7ed3\u679c\u8f6c\u6362\u4e3a rpc.RPCResponse \u8fd4\u56de\\n    rpcResp := &rpc.RPCResponse{\\n        ContentType: string(httpResp.Header.ContentType()),\\n        Data:        body,\\n        Header:      map[string][]string{},\\n    }\\n    httpResp.Header.VisitAll(func(key, value []byte) {\\n        rpcResp.Header[string(key)] = []string{string(value)}\\n    })\\n    return rpcResp, nil\\n```\\n\\n### 0x09 Grpc Sever \u5904\u7406\u6570\u636e\u5e27\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\\n\\nGrpc \u5e76\u6ca1\u6709\u76f4\u63a5\u5199\u5165\u6570\u636e\u5230\u8fde\u63a5\uff0c\u800c\u662f\u7528\u534f\u7a0b\u5f02\u6b65 loop \u5faa\u73af\u4ece\u4e00\u4e2a\u7f13\u5b58\u7ed3\u6784\u91cc\u9762\u83b7\u53d6\u5e27\u7136\u540e\u5199\u56de\u5230\u5ba2\u6237\u7aef\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\ngoogle.golang.org/grpc/internal/transport.NewServerTransport at http2_server.go\\nfunc NewServerTransport(conn net.Conn, config *ServerConfig) (_ ServerTransport, err error) {\\n    ...\\n    // \u534f\u7a0b\u5f02\u6b65loop\u5faa\u73af\\n    go func() {\\n        t.loopy = newLoopyWriter(serverSide, t.framer, t.controlBuf, t.bdpEst)\\n        t.loopy.ssGoAwayHandler = t.outgoingGoAwayHandler\\n        if err := t.loopy.run(); err != nil {\\n            if logger.V(logLevel) {\\n                logger.Errorf(\\"transport: loopyWriter.run returning. Err: %v\\", err)\\n            }\\n        }\\n        t.conn.Close()\\n        t.controlBuf.finish()\\n        close(t.writerDone)\\n    }()\\n    go t.keepalive()\\n    return t, nil\\n}\\n=>\\ngoogle.golang.org/grpc/internal/transport.(*loopyWriter).run at controlbuf.go\\n=>\\ngoogle.golang.org/grpc/internal/transport.(*bufWriter).Flush at http_util.go\\n=>\\nmosn.io/mosn/pkg/filter/network/grpc.(*Connection).Write at conn.go\\n=>\\nmosn.io/mosn/pkg/network.(*connection).Write at connection.go\\n=>\\nmosn.io/mosn/pkg/network.(*connection).writeDirectly at connection.go\\n=>\\nmosn.io/mosn/pkg/network.(*connection).doWrite at connection.go\\n```\\n\\n### 0x10 dubbo-go-sample client \u63a5\u6536\u54cd\u5e94\\n\\n\u63a5\u4e0a\u8ff0 0x01 \u53d1\u9001\u6570\u636e\u4e4b\u540e\u4f1a\u963b\u585e\u5728 Client grpc \u5e95\u5c42\u8bfbIO\u4e2d, Layotto\u7ecf\u8fc7\u4e0a\u8ff0\u4e00\u4e9b\u5217\u5904\u7406\u5c42\u5c42\u8fd4\u56de\u6570\u636e\u6fc0\u6d3bClient\u5e95\u5c42Read IO\uff0c\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\u3002\\n\\n```go\\ngoogle.golang.org/grpc.(*ClientConn).Invoke at call.go\\n=>\\ngoogle.golang.org/grpc.(*ClientConn).Invoke at call.go\\n=>\\ngoogle.golang.org/grpc.(*clientStream).RecvMsg at stream.go\\n=>\\ngoogle.golang.org/grpc.(*clientStream).withRetry at stream.go\\n=>\\ngoogle.golang.org/grpc.(*csAttempt).recvMsg at stream.go\\n=>\\ngoogle.golang.org/grpc.recvAndDecompress at rpc_util.go\\n=>\\ngoogle.golang.org/grpc.recv at rpc_util.go\\n=>\\ngoogle.golang.org/grpc.(*parser).recvMsg at rpc_util.go\\n=>\\ngoogle.golang.org/grpc.(*csAttempt).recvMsg at stream.go\\nfunc (p *parser) recvMsg(maxReceiveMessageSize int) (pf payloadFormat, msg []byte, err error) {\\n    if _, err := p.r.Read(p.header[:]); err != nil {\\n        return 0, nil, err\\n    }\\n    ...\\n}\\n```\\n\\n\u6700\u7ec8\u6536\u5230\u8fd4\u56de\u6570\u636e\uff1a\\n\\n```json\\n{\\"jsonrpc\\":\\"2.0\\",\\"id\\":9527,\\"result\\":{\\"id\\":\\"113\\",\\"name\\":\\"Moorse\\",\\"age\\":30,\\"time\\":703394193,\\"sex\\":\\"MAN\\"}}\\n```\\n\\n## \u603b\u7ed3\\nLayotto RPC \u5904\u7406\u6d41\u7a0b\u6d89\u53ca GRPC\u3001Dapr\u3001Mosn \u7b49\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u6574\u4f53\u6d41\u7a0b\u8f83\u957f\uff0c\u4e0d\u8fc7\u5355\u7eaf\u770b Layotto \u9488\u5bf9 Mosn \u62bd\u8c61\u7684\u8f7b\u91cf RPC \u6846\u67b6\u8fd8\u662f\u6bd4\u8f83\u6e05\u6670\u548c\u7b80\u5355\u7684\uff0c\u4e0e Mosn \u96c6\u6210\u7684\u65b9\u5f0f\u4e5f\u6bd4\u8f83\u65b0\u9896\uff0c\u503c\u5f97\u8fdb\u4e00\u6b65\u7814\u8bfb\u3002\u81f3\u6b64 Layotto RPC \u8bf7\u6c42\u5904\u7406\u5c31\u5206\u6790\u5b8c\u4e86\uff0c\u65f6\u95f4\u6709\u9650\uff0c\u6ca1\u6709\u8fdb\u884c\u4e00\u4e9b\u66f4\u5168\u9762\u548c\u6df1\u5165\u7684\u5256\u6790\uff0c\u5982\u6709\u7eb0\u6f0f\u4e4b\u5904\uff0c\u6b22\u8fce\u6307\u6b63\uff0c\u8054\u7cfb\u65b9\u5f0f\uff1arayo.wangzl@gmail.com\u3002\u53e6\u5916\u5728\u6b64\u4e5f\u5e0c\u671b\u5927\u5bb6\u80fd\u8e0a\u8dc3\u53c2\u4e0e\u6e90\u7801\u5206\u6790\u548c\u5f00\u6e90\u793e\u533a\u6765\uff0c\u4e00\u8d77\u5b66\u4e60\uff0c\u5171\u540c\u8fdb\u6b65\u3002"},{"id":"/code/start_process/start_process","metadata":{"permalink":"/layotto/blog/code/start_process/start_process","editUrl":"https://github.com/mosn/layotto/edit/main/docs/blog/code/start_process/start_process.md","source":"@site/blog/code/start_process/start_process.md","title":"\u6e90\u7801\u89e3\u6790  layotto\u542f\u52a8\u6d41\u7a0b","description":"\u4f5c\u8005\u7b80\u4ecb\uff1a","date":"2024-07-10T10:04:20.000Z","tags":[],"readingTime":5.89,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Layotto \u6e90\u7801\u89e3\u6790 \u2014\u2014 \u5904\u7406 RPC \u8bf7\u6c42","permalink":"/layotto/blog/code/layotto-rpc"},"nextItem":{"title":"Layotto \u6e90\u7801\u89e3\u6790 \u2014\u2014 WebAssembly","permalink":"/layotto/blog/code/webassembly"}},"content":">\u4f5c\u8005\u7b80\u4ecb\uff1a\\n>\u5f20\u7acb\u658c\uff0chttps://github.com/ZLBer\\n>\\n>\u5199\u4f5c\u65f6\u95f4: 2022\u5e745\u67084\u65e5\\n\\n\\n- [Overview](#Overview)\\n- [\u6e90\u7801\u5206\u6790](#\u6e90\u7801\u5206\u6790)\\n    * [1.cmd\u5206\u6790](#1.cmd\u5206\u6790)\\n    * [2.\u56de\u8c03\u51fd\u6570NewRuntimeGrpcServer\u5206\u6790](#2.\u56de\u8c03\u51fd\u6570NewRuntimeGrpcServer\u5206\u6790)\\n    * [3.runtime\u5206\u6790](#3.runtime\u5206\u6790)\\n- [\u603b\u7ed3](#\u603b\u7ed3)\\n\\n## Overview\\nLayotto \u201c\u5bc4\u751f\u201d\u5728 MOSN \u91cc\uff0c\u542f\u52a8\u6d41\u7a0b\u5176\u5b9e\u662f\u5148\u542f\u52a8 MOSN, MOSN \u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\u56de\u8c03 Layotto \uff0c\u8ba9 Layotto \u542f\u52a8\u3002\\n\\n## \u6e90\u7801\u5206\u6790\\n\u4e00\u5207\u8d77\u6e90\u4e8e\u6211\u4eec\u7684\u547d\u4ee4\u884c: layotto start  -c  `configpath`\\n\\n### 1.cmd\u5206\u6790\\n\\nmain \u7684 init \u51fd\u6570\u9996\u5148\u8fd0\u884c\uff1a\\n\\n```\\nfunc init() {   \\n     //\u5c06layotto\u7684\u521d\u59cb\u5316\u51fd\u6570\u4f20\u7ed9mosn\uff0c\u8ba9mosn\u542f\u52a8\u7684\u65f6\u5019\u8fdb\u884c\u56de\u8c03\\n\\tmgrpc.RegisterServerHandler(\\"runtime\\", NewRuntimeGrpcServer)\\n     ....\\n}\\n```\\n\\ncmd \u7684 action \u5f00\u59cb\u6267\u884c\uff1a\\n\\n```\\n\\tAction: func(c *cli.Context) error {\\n\\t\\tapp := mosn.NewMosn()\\n\\t\\t//stagemanager\u7528\u4e8e\u7ba1\u7406mosn\u542f\u52a8\u7684\u6bcf\u4e2a\u9636\u6bb5\uff0c\u53ef\u4ee5\u6dfb\u52a0\u76f8\u5e94\u7684\u9636\u6bb5\u51fd\u6570\uff0c\u6bd4\u5982\u4e0b\u9762\u7684ParamsParsedStage\u3001InitStage\u3001PreStartStage\u3001AfterStartStage\\n\\t\\t//\u8fd9\u91cc\u662f\u5c06configpath\u4f20\u7ed9mosn\uff0c\u4e0b\u9762\u90fd\u662fmosn\u76f8\u5173\u7684\u903b\u8f91\\n\\t\\tstm := stagemanager.InitStageManager(c, c.String(\\"config\\"), app) \\n\\t\\tstm.AppendParamsParsedStage(ExtensionsRegister)\\n\\t\\tstm.AppendParamsParsedStage(func(c *cli.Context) {\\n\\t\\t\\terr := featuregate.Set(c.String(\\"feature-gates\\"))\\n\\t\\t\\tif err != nil {\\n\\t\\t\\t\\tos.Exit(1)\\n\\t\\t\\t}\\n\\t\\t})\xb7\\n\\t\\tstm.AppendInitStage(mosn.DefaultInitStage)\\n\\t\\tstm.AppendPreStartStage(mosn.DefaultPreStartStage)\\n\\t\\tstm.AppendStartStage(mosn.DefaultStartStage)\\n\\t\\t//\u8fd9\u91cc\u6dfb\u52a0layotto\u7684\u5065\u5eb7\u68c0\u67e5\u673a\u5236\\n\\t\\tstm.AppendAfterStartStage(SetActuatorAfterStart)\\n\\t\\tstm.Run()\\n\\t\\t// wait mosn finished\\n\\t\\tstm.WaitFinish()\\n\\t\\treturn nil\\n\\t},\\n```\\n\\n### 2.\u56de\u8c03\u51fd\u6570NewRuntimeGrpcServer\u5206\u6790\\n\\nMOSN \u542f\u52a8\u7684\u65f6\u5019\u56de\u8c03 NewRuntimeGrpcServer \uff0cdata \u662f\u672a\u89e3\u6790\u7684\u914d\u7f6e\u6587\u4ef6\uff0copts \u662f grpc \u7684\u914d\u7f6e\u9879\uff0c\u8fd4\u56de Grpc server\\n\\n```\\nfunc NewRuntimeGrpcServer(data json.RawMessage, opts ...grpc.ServerOption) (mgrpc.RegisteredServer, error) {\\n\\t// \u5c06\u539f\u59cb\u7684\u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u6210\u7ed3\u6784\u4f53\u5f62\u5f0f\u3002\\n\\tcfg, err := runtime.ParseRuntimeConfig(data)\\n    // \u65b0\u5efalayotto runtime\uff0c runtime\u5305\u542b\u5404\u79cd\u7ec4\u4ef6\u7684\u6ce8\u518c\u5668\u548c\u5404\u79cd\u7ec4\u4ef6\u7684\u5b9e\u4f8b\u3002\\n\\trt := runtime.NewMosnRuntime(cfg)\\n\\t// 3.runtime\u5f00\u59cb\u542f\u52a8\\n\\tserver, err := rt.Run(\\n\\t       ...\\n        // 4. \u6dfb\u52a0\u6240\u6709\u7ec4\u4ef6\u7684\u521d\u59cb\u5316\u51fd\u6570\\n\\t \\t// \u6211\u4eec\u53ea\u770b\u4e0bFile\u7ec4\u4ef6\u7684\uff0c\u5c06NewXXX()\u6dfb\u52a0\u5230\u7ec4\u4ef6Factory\u91cc\\n\\t\\truntime.WithFileFactory(\\n\\t\\t\\tfile.NewFileFactory(\\"aliyun.oss\\", alicloud.NewAliCloudOSS),\\n\\t\\t\\tfile.NewFileFactory(\\"minio\\", minio.NewMinioOss),\\n\\t\\t\\tfile.NewFileFactory(\\"aws.s3\\", aws.NewAwsOss),\\n\\t\\t\\tfile.NewFileFactory(\\"tencent.oss\\", tencentcloud.NewTencentCloudOSS),\\n\\t\\t\\tfile.NewFileFactory(\\"local\\", local.NewLocalStore),\\n\\t\\t\\tfile.NewFileFactory(\\"qiniu.oss\\", qiniu.NewQiniuOSS),\\n\\t\\t),\\n\\t     ...\\n   return server, err\\t\\t \\n\\t\\n\\t)\\n\\t\\n\\t//\\n}\\n\\n```\\n\\n### 3.runtime\u5206\u6790\\n\\n\u770b\u4e00\u4e0b runtime \u7684\u7ed3\u6784\u4f53\uff0c\u4ece\u6574\u4f53\u4e0a\u628a\u63e1 runtime \u7684\u6784\u6210\uff1a\\n\\n```\\ntype MosnRuntime struct {\\n\\t// \u5305\u62ec\u7ec4\u4ef6\u7684config\\n\\truntimeConfig *MosnRuntimeConfig\\n\\tinfo          *info.RuntimeInfo\\n\\tsrv           mgrpc.RegisteredServer\\n\\t// \u7ec4\u4ef6\u6ce8\u518c\u5668\uff0c\u7528\u6765\u6ce8\u518c\u548c\u65b0\u5efa\u7ec4\u4ef6\uff0c\u91cc\u9762\u6709\u7ec4\u4ef6\u7684NewXXX()\u51fd\u6570\\n\\thelloRegistry           hello.Registry\\n\\tconfigStoreRegistry     configstores.Registry\\n\\trpcRegistry             rpc.Registry\\n\\tpubSubRegistry          runtime_pubsub.Registry\\n\\tstateRegistry           runtime_state.Registry\\n\\tlockRegistry            runtime_lock.Registry\\n\\tsequencerRegistry       runtime_sequencer.Registry\\n\\tfileRegistry            file.Registry\\n\\tbindingsRegistry        mbindings.Registry\\n\\tsecretStoresRegistry    msecretstores.Registry\\n\\tcustomComponentRegistry custom.Registry\\n\\thellos map[string]hello.HelloService\\n\\t// \u5404\u79cd\u7ec4\u4ef6\\n\\tconfigStores map[string]configstores.Store\\n\\trpcs         map[string]rpc.Invoker\\n\\tpubSubs      map[string]pubsub.PubSub\\n\\tstates          map[string]state.Store\\n\\tfiles           map[string]file.File\\n\\tlocks           map[string]lock.LockStore\\n\\tsequencers      map[string]sequencer.Store\\n\\toutputBindings  map[string]bindings.OutputBinding\\n\\tsecretStores    map[string]secretstores.SecretStore\\n\\tcustomComponent map[string]map[string]custom.Component\\n\\tAppCallbackConn *rawGRPC.ClientConn\\n\\terrInt            ErrInterceptor\\n\\tstarted           bool\\n\\t//\u521d\u59cb\u5316\u51fd\u6570\\n\\tinitRuntimeStages []initRuntimeStage\\n}\\n```\\n\\nruntime \u7684 run \u51fd\u6570\u903b\u8f91\u5982\u4e0b:\\n\\n```\\nfunc (m *MosnRuntime) Run(opts ...Option) (mgrpc.RegisteredServer, error) {\\n\\t// \u542f\u52a8\u6807\u5fd7\\n\\tm.started = true\\n\\t// \u65b0\u5efaruntime\u914d\u7f6e\\n\\to := newRuntimeOptions()\\n\\t//\u8fd9\u91cc\u8fd0\u884c\u6211\u4eec\u4e4b\u524d\u4f20\u5165\u7684option\u51fd\u6570\uff0c\u5176\u5b9e\u5c31\u662f\u5c06\u5404\u79cd\u7ec4\u4ef6Factory\u6ce8\u518c\u8fdb\u6765\\n\\tfor _, opt := range opts {\\n\\t\\topt(o)\\n\\t}\\n\\t//\u521d\u59cb\u5316\u7ec4\u4ef6\\n\\tif err := m.initRuntime(o); err != nil {\\n\\t\\treturn nil, err\\n\\t}\\n\\t\\n\\t//\u521d\u59cb\u5316Grpc\uff0capi\u8d4b\u503c\\n\\tvar grpcOpts []grpc.Option\\n\\tif o.srvMaker != nil {\\n\\t\\tgrpcOpts = append(grpcOpts, grpc.WithNewServer(o.srvMaker))\\n\\t}\\n\\tvar apis []grpc.GrpcAPI\\n\\tac := &grpc.ApplicationContext{\\n\\t\\tm.runtimeConfig.AppManagement.AppId,\\n\\t\\tm.hellos,\\n\\t\\tm.configStores,\\n\\t\\tm.rpcs,\\n\\t\\tm.pubSubs,\\n\\t\\tm.states,\\n\\t\\tm.files,\\n\\t\\tm.locks,\\n\\t\\tm.sequencers,\\n\\t\\tm.sendToOutputBinding,\\n\\t\\tm.secretStores,\\n\\t\\tm.customComponent,\\n\\t}\\n     //\u8c03\u7528\u7ec4\u4ef6\u7684factory\u751f\u6210\u6bcf\u4e2a\u7ec4\u4ef6\\n\\tfor _, apiFactory := range o.apiFactorys {\\n\\t\\tapi := apiFactory(ac)\\n\\t\\t// init the GrpcAPI\\n\\t\\tif err := api.Init(m.AppCallbackConn); err != nil {\\n\\t\\t\\treturn nil, err\\n\\t\\t}\\n\\t\\tapis = append(apis, api)\\n\\t}\\n\\t// \u5c06api\u63a5\u53e3\u548c\u914d\u7f6e\u4f20\u7ed9grpc\\n\\tgrpcOpts = append(grpcOpts,\\n\\t\\tgrpc.WithGrpcOptions(o.options...),\\n\\t\\tgrpc.WithGrpcAPIs(apis),\\n\\t)\\n\\t//\u542f\u52a8grpc\\n\\tvar err error = nil\\n\\tm.srv, err = grpc.NewGrpcServer(grpcOpts...)\\n\\treturn m.srv, err\\n}\\n\\n```\\n\\n\u7ec4\u4ef6\u7684\u521d\u59cb\u5316\u51fd\u6570 initRuntime \uff1a\\n\\n```\\nfunc (m *MosnRuntime) initRuntime(r *runtimeOptions) error {\\n\\tst := time.Now()\\n\\tif len(m.initRuntimeStages) == 0 {\\n\\t\\tm.initRuntimeStages = append(m.initRuntimeStages, DefaultInitRuntimeStage)\\n\\t}\\n\\t// \u8c03\u7528DefaultInitRuntimeStage\\n\\tfor _, f := range m.initRuntimeStages {\\n\\t\\terr := f(r, m)\\n\\t\\tif err != nil {\\n\\t\\t\\treturn err\\n\\t\\t}\\n\\t}\\n    ...\\n\\treturn nil\\n}\\n```\\n\\nDefaultInitRuntimeStage \u7ec4\u4ef6\u521d\u59cb\u5316\u903b\u8f91\uff0c\u8c03\u7528\u6bcf\u4e2a\u7ec4\u4ef6\u7684 init \u65b9\u6cd5:\\n\\n```\\nfunc DefaultInitRuntimeStage(o *runtimeOptions, m *MosnRuntime) error {\\n\\t ...\\n\\t //\u521d\u59cb\u5316config/state/file/lock/sequencer/secret\u7b49\u5404\u79cd\u7ec4\u4ef6\\n\\tif err := m.initCustomComponents(o.services.custom); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initHellos(o.services.hellos...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initConfigStores(o.services.configStores...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initStates(o.services.states...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initRpcs(o.services.rpcs...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initOutputBinding(o.services.outputBinding...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initPubSubs(o.services.pubSubs...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initFiles(o.services.files...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initLocks(o.services.locks...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initSequencers(o.services.sequencers...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initInputBinding(o.services.inputBinding...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\tif err := m.initSecretStores(o.services.secretStores...); err != nil {\\n\\t\\treturn err\\n\\t}\\n\\treturn nil\\n}\\n```\\n\\n\u4ee5 file \u7ec4\u4ef6\u4e3a\u4f8b\uff0c\u770b\u4e0b\u521d\u59cb\u5316\u51fd\u6570\uff1a\\n\\n```\\nfunc (m *MosnRuntime) initFiles(files ...*file.FileFactory) error {\\n\\n\\t//\u5c06\u914d\u7f6e\u7684\u7ec4\u4ef6\u6ce8\u518c\u8fdb\u53bb\\n\\tm.fileRegistry.Register(files...)\\n\\tfor name, config := range m.runtimeConfig.Files {\\n\\t    //create\u8c03\u7528NewXXX()\u51fd\u6570\u65b0\u5efa\u4e00\u4e2a\u7ec4\u4ef6\u5b9e\u4f8b\\n\\t\\tc, err := m.fileRegistry.Create(name)\\n\\t\\tif err != nil {\\n\\t\\t\\tm.errInt(err, \\"create files component %s failed\\", name)\\n\\t\\t\\treturn err\\n\\t\\t}\\n\\t\\tif err := c.Init(context.TODO(), &config); err != nil {\\n\\t\\t\\tm.errInt(err, \\"init files component %s failed\\", name)\\n\\t\\t\\treturn err\\n\\t\\t}\\n\\t\\t//\u8d4b\u503c\u7ed9runtime\\n\\t\\tm.files[name] = c\\n\\t}\\n\\treturn nil\\n}\\n```\\n\\n\u81f3\u6b64 MOSN\u3001Grpc\u3001Layotto \u90fd\u5df2\u7ecf\u542f\u52a8\u5b8c\u6210\uff0c\u901a\u8fc7 Grpc \u7684\u63a5\u53e3\u5c31\u53ef\u4ee5\u8c03\u7528\u5230\u7ec4\u4ef6\u7684\u4ee3\u7801\u903b\u8f91\u3002\\n\\n## \u603b\u7ed3\\n\u603b\u89c8\u6574\u4e2a\u542f\u52a8\u6d41\u7a0b\uff0cLayotto \u7ed3\u5408 MOSN \u6765\u505a\u542f\u52a8\uff0c\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\uff0c\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u7ec4\u4ef6\u7c7b\uff0c\u5c06 Grpc \u7684 api \u66b4\u9732\u51fa\u53bb\u3002"},{"id":"/code/webassembly","metadata":{"permalink":"/layotto/blog/code/webassembly","editUrl":"https://github.com/mosn/layotto/edit/main/docs/blog/code/webassembly/index.md","source":"@site/blog/code/webassembly/index.md","title":"Layotto \u6e90\u7801\u89e3\u6790 \u2014\u2014 WebAssembly","description":"\u672c\u6587\u4e3b\u8981\u5206\u6790 Layotto \u4e2d WASM \u7684\u76f8\u5173\u5b9e\u73b0\u548c\u5e94\u7528\u3002","date":"2024-07-10T10:04:20.000Z","tags":[],"readingTime":21.005,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"\u6e90\u7801\u89e3\u6790  layotto\u542f\u52a8\u6d41\u7a0b","permalink":"/layotto/blog/code/start_process/start_process"}},"content":">\u672c\u6587\u4e3b\u8981\u5206\u6790 Layotto \u4e2d WASM \u7684\u76f8\u5173\u5b9e\u73b0\u548c\u5e94\u7528\u3002\\n> \\n>\u4f5c\u8005\uff1a[\u738b\u5fd7\u9f99](https://github.com/rayowang) | 2022\u5e745\u670818\u65e5\\n\\n- [\u6982\u8ff0](#\u6982\u8ff0)\\n- [\u6e90\u7801\u5206\u6790](#\u6e90\u7801\u5206\u6790)\\n  - [\u6846\u67b6INIT](#\u6846\u67b6INIT)\\n  - [\u5de5\u4f5c\u6d41\u7a0b](#\u5de5\u4f5c\u6d41\u7a0b)\\n  - [FaaS\u6a21\u5f0f](#FaaS\u6a21\u5f0f)\\n- [\u603b\u7ed3](#\u603b\u7ed3)\\n\\n## \u6982\u8ff0\\nWebAssemly \u7b80\u79f0 WASM\uff0c\u662f\u4e00\u79cd\u8fd0\u884c\u5728\u6c99\u7bb1\u5316\u7684\u6267\u884c\u73af\u5883\u4e2d\u7684\u53ef\u79fb\u690d\u3001\u4f53\u79ef\u5c0f\u3001\u52a0\u8f7d\u5feb\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0cWASM\u6700\u521d\u8bbe\u8ba1\u662f\u4e3a\u4e86\u5728\u7f51\u7edc\u6d4f\u89c8\u5668\u4e2d\u5b9e\u73b0\u9ad8\u6027\u80fd\u5e94\u7528\uff0c\u5f97\u76ca\u4e8e\u5b83\u826f\u597d\u7684\u9694\u79bb\u6027\u548c\u5b89\u5168\u6027\u3001\u591a\u8bed\u8a00\u652f\u6301\u3001\u51b7\u542f\u52a8\u5feb\u7b49\u7075\u6d3b\u6027\u548c\u654f\u6377\u6027\u7b49\u7279\u6027\uff0c\u53c8\u88ab\u5e94\u7528\u4e8e\u5d4c\u5165\u5176\u5b83\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4ee5\u83b7\u5f97\u8f83\u597d\u7684\u6269\u5c55\u80fd\u529b\uff0c\u663e\u7136\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u5d4c\u5165\u5230 Layotto \u4e2d\u3002Layotto \u652f\u6301\u52a0\u8f7d\u7f16\u8bd1\u597d\u7684 WASM \u6587\u4ef6\uff0c\u5e76\u901a\u8fc7 proxy_abi_version_0_2_0 \u7684 API \u4e0e\u76ee\u6807 WASM \u8fdb\u884c\u4ea4\u4e92;\\n\u53e6\u5916 Layotto \u4e5f\u652f\u6301\u52a0\u8f7d\u5e76\u8fd0\u884c\u4ee5 WASM \u4e3a\u8f7d\u4f53\u7684 Function\uff0c\u5e76\u652f\u6301 Function \u4e4b\u95f4\u4e92\u76f8\u8c03\u7528\u4ee5\u53ca\u8bbf\u95ee\u57fa\u7840\u8bbe\u65bd\uff1b\u540c\u65f6 Layotto \u793e\u533a\u4e5f\u6b63\u5728\u63a2\u7d22\u628a component \u7f16\u8bd1\u6210 WASM \u6a21\u5757\u4ee5\u6b64\u6765\u589e\u5f3a\u6a21\u5757\u95f4\u7684\u9694\u79bb\u6027\u3002\u672c\u6587\u4ee5 Layotto \u5b98\u65b9 [quickstart](https://mosn.io/layotto/docs/start/wasm/start) \u5373\u8bbf\u95eeredis\u76f8\u5173\u793a\u4f8b\u4e3a\u4f8b\u6765\u5206\u6790 Layotto \u4e2d WebAssemly \u76f8\u5173\u7684\u5b9e\u73b0\u548c\u5e94\u7528\u3002\\n\\n## \u6e90\u7801\u5206\u6790\\n\u5907\u6ce8\uff1a\u672c\u6587\u57fa\u4e8e commit hash\uff1af1cf350a52b5a1a0b3788a31681007a056e332ef\\n\\n### \u6846\u67b6INIT\\n\u7531\u4e8e Layotto \u7684\u5e95\u5c42\u662f Mosn\uff0cWASM \u7684\u6269\u5c55\u6846\u67b6\u4e5f\u662f\u590d\u7528 Mosn \u7684 WASM \u6269\u5c55\u6846\u67b6\uff0c\u5982\u56fe1 Layotto & Mosn WASM \u6846\u67b6 [1] \u6240\u793a\u3002\\n\\n![mosn_wasm_ext_framework_module](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*jz4BSJmVQ3gAAAAAAAAAAAAAARQnAQ)\\n<center>\u56fe1 Layotto & Mosn WASM \u6846\u67b6 </center>\\n\\n\u5176\u4e2d\uff0cManager \u8d1f\u8d23\u5bf9 WASM \u63d2\u4ef6\u8fdb\u884c\u7ba1\u7406\u548c\u52a8\u6001\u66f4\u65b0\uff1bVM \u8d1f\u8d23\u5bf9 WASM \u865a\u62df\u673a\u3001\u6a21\u5757\u548c\u5b9e\u4f8b\u8fdb\u884c\u7ba1\u7406\uff1bABI \u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u63a5\u53e3\uff0c\u63d0\u4f9b\u5bf9\u5916\u4f7f\u7528\u63a5\u53e3 [2]\u3002\\n\\n\u8fd9\u91cc\u9996\u5148\u7b80\u5355\u56de\u987e\u4e0b\u51e0\u4e2a\u6982\u5ff5\uff1a\\\\\\n[Proxy-Wasm](https://github.com/proxy-wasm) \uff1aWebAssembly for Proxies (ABI specification) \u662f\u4e00\u4e2a\u4ee3\u7406\u65e0\u5173\u7684 ABI \u6807\u51c6\uff0c\u5b83\u7ea6\u5b9a\u4e86\u4ee3\u7406\u548c WASM \u6a21\u5757\u5982\u4f55\u4ee5\u51fd\u6570\u548c\u56de\u8c03\u7684\u5f62\u5f0f\u4e92\u52a8 [3]\u3002\\\\\\n[proxy-wasm-go-sdk](https://github.com/tetratelabs/proxy-wasm-go-sdk) \uff1a\u5b9a\u4e49\u4e86\u51fd\u6570\u8bbf\u95ee\u7cfb\u7edf\u8d44\u6e90\u53ca\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\u7684\u63a5\u53e3\uff0c\u57fa\u4e8e [proxy-wasm/spec](https://github.com/proxy-wasm/spec) \u5b9e\u73b0\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u7ed3\u5408 Runtime API \u589e\u52a0\u4e86\u5bf9\u57fa\u7840\u8bbe\u65bd\u8bbf\u95ee\u7684 ABI\u3002\\\\\\n[proxy-wasm-go-host](https://github.com/mosn/proxy-wasm-go-host) WebAssembly for Proxies (GoLang host implementation)\uff1aProxy-Wasm \u7684 golang \u5b9e\u73b0\uff0c\u7528\u4ee5\u5728 Layotto \u4e2d\u5b9e\u73b0 Runtime ABI \u7684\u5177\u4f53\u903b\u8f91\u3002\\\\\\nVM\uff1aVirtual Machine \u865a\u62df\u673a\uff0cRuntime\u7c7b\u578b\u6709\uff1awasmtime\u3001Wasmer\u3001V8\u3001 Lucet\u3001WAMR\u3001wasm3\uff0c\u672c\u6587\u4f8b\u5b50\u4e2d\u4f7f\u7528 wasmer\\n\\n1\u3001\u9996\u5148\u770b [quickstart\u4f8b\u5b50](https://mosn.io/layotto/docs/start/wasm/start) \u4e2d stream filter \u7684\u914d\u7f6e\uff0c\u5982\u4e0b\u53ef\u4ee5\u770b\u5230\u914d\u7f6e\u4e2d\u6709\u4e24\u4e2a WASM \u63d2\u4ef6\uff0c\u4f7f\u7528 wasmer VM \u5206\u522b\u542f\u52a8\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8be6\u89c1\u5982\u4e0b\u914d\u7f6e\uff1a\\n\\n```json\\n \\"stream_filters\\": [\\n            {\\n              \\"type\\": \\"Layotto\\",\\n              \\"config\\": {\\n                \\"function1\\": {\\n                  \\"name\\": \\"function1\\", // \u63d2\u4ef6\u540d\\n                  \\"instance_num\\": 1, // \u6c99\u7bb1\u5b9e\u4f8b\u4e2a\u6570\\n                  \\"vm_config\\": {\\n                    \\"engine\\": \\"wasmer\\", // \u865a\u62df\u673a Runtime \u7c7b\u578b\\n                    \\"path\\": \\"demo/faas/code/golang/client/function_1.wasm\\" // wasm \u6587\u4ef6\u8def\u5f84\\n                  }\\n                },\\n                \\"function2\\": {\\n                  \\"name\\": \\"function2\\", // \u63d2\u4ef6\u540d\\n                  \\"instance_num\\": 1, // \u6c99\u7bb1\u5b9e\u4f8b\u4e2a\u6570\\n                  \\"vm_config\\": {\\n                    \\"engine\\": \\"wasmer\\", // \u865a\u62df\u673a Runtime \u7c7b\u578b\\n                    \\"path\\": \\"demo/faas/code/golang/server/function_2.wasm\\" // wasm \u6587\u4ef6\u8def\u5f84\\n                  }\\n                }\\n              }\\n            }\\n          ]\\n```\\n\\n\u4e0a\u8ff0\u914d\u7f6e\u4e2d function1 \u4e3b\u8981\u903b\u8f91\u5c31\u662f\u63a5\u6536 HTTP \u8bf7\u6c42\uff0c\u7136\u540e\u901a\u8fc7 ABI \u8c03\u7528 function2\uff0c\u5e76\u8fd4\u56de function2 \u7ed3\u679c\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\uff1a\\n\\n```go\\nfunc (ctx *httpHeaders) OnHttpRequestBody(bodySize int, endOfStream bool) types.Action {\\n\\t//1. get request body\\n\\tbody, err := proxywasm.GetHttpRequestBody(0, bodySize)\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"GetHttpRequestBody failed: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\n\\t//2. parse request param\\n\\tbookName, err := getQueryParam(string(body), \\"name\\")\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"param not found: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\n\\t//3. request function2 through ABI\\n\\tinventories, err := proxywasm.InvokeService(\\"id_2\\", \\"\\", bookName)\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"invoke service failed: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\n\\t//4. return result\\n\\tproxywasm.AppendHttpResponseBody([]byte(\\"There are \\" + inventories + \\" inventories for \\" + bookName + \\".\\"))\\n\\treturn types.ActionContinue\\n}\\n```\\n\\nfunction2 \u4e3b\u8981\u903b\u8f91\u5c31\u662f\u63a5\u6536 HTTP \u8bf7\u6c42\uff0c\u7136\u540e\u901a\u8fc7 ABI \u8c03\u7528 redis\uff0c\u5e76\u8fd4\u56de redis \u7ed3\u679c\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\uff1a\\n\\n```go\\nfunc (ctx *httpHeaders) OnHttpRequestBody(bodySize int, endOfStream bool) types.Action {\\n\\t//1. get request body\\n\\tbody, err := proxywasm.GetHttpRequestBody(0, bodySize)\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"GetHttpRequestBody failed: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\tbookName := string(body)\\n\\n\\t//2. get request state from redis by specific key through ABI\\n\\tinventories, err := proxywasm.GetState(\\"redis\\", bookName)\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"GetState failed: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\n\\t//3. return result\\n\\tproxywasm.AppendHttpResponseBody([]byte(inventories))\\n\\treturn types.ActionContinue\\n}\\n```\\n\\n2\u3001\u5bf9\u5e94\u56fe1 WASM \u6846\u67b6 \u4e2d\u7684 Manager \u90e8\u5206\uff0c\u5728 Mosn filter Init \u9636\u6bb5\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\uff1a\\n\\n```go\\n// Create a proxy factory for WasmFilter\\nfunc createProxyWasmFilterFactory(confs map[string]interface{}) (api.StreamFilterChainFactory, error) {\\n\\tfactory := &FilterConfigFactory{\\n\\t\\tconfig:        make([]*filterConfigItem, 0, len(confs)),\\n\\t\\tRootContextID: 1,\\n\\t\\tplugins:       make(map[string]*WasmPlugin),\\n\\t\\trouter:        &Router{routes: make(map[string]*Group)},\\n\\t}\\n\\n\\tfor configID, confIf := range confs {\\n\\t\\tconf, ok := confIf.(map[string]interface{})\\n\\t\\tif !ok {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][factory] createProxyWasmFilterFactory config not a map, configID: %s\\", configID)\\n\\t\\t\\treturn nil, errors.New(\\"config not a map\\")\\n\\t\\t}\\n\\t\\t// \u89e3\u6790 wasm filter \u914d\u7f6e\\n\\t\\tconfig, err := parseFilterConfigItem(conf)\\n\\t\\tif err != nil {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][factory] createProxyWasmFilterFactory fail to parse config, configID: %s, err: %v\\", configID, err)\\n\\t\\t\\treturn nil, err\\n\\t\\t}\\n\\n\\t\\tvar pluginName string\\n\\t\\tif config.FromWasmPlugin == \\"\\" {\\n\\t\\t\\tpluginName = utils.GenerateUUID()\\n            \\n\\t\\t\\t// \u6839\u636e stream filter \u7684\u914d\u7f6e\u521d\u59cb\u5316 WASM \u63d2\u4ef6\u914d\u7f6e\uff0cVmConfig \u5373 vm_config\uff0cInstanceNum \u5373 instance_num\\n\\t\\t\\tv2Config := v2.WasmPluginConfig{\\n\\t\\t\\t\\tPluginName:  pluginName,\\n\\t\\t\\t\\tVmConfig:    config.VmConfig,\\n\\t\\t\\t\\tInstanceNum: config.InstanceNum,\\n\\t\\t\\t}\\n            \\n\\t\\t\\t// WasmManager \u5b9e\u4f8b\u901a\u8fc7\u7ba1\u7406 PluginWrapper \u5bf9\u8c61\u5bf9\u6240\u6709\u63d2\u4ef6\u7684\u914d\u7f6e\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u63d0\u4f9b\u589e\u5220\u67e5\u6539\u80fd\u529b\u3002\u4e0b\u63a53\\n\\t\\t\\terr = wasm.GetWasmManager().AddOrUpdateWasm(v2Config)\\n\\t\\t\\tif err != nil {\\n\\t\\t\\t\\tconfig.PluginName = pluginName\\n\\t\\t\\t\\taddWatchFile(config, factory)\\n\\t\\t\\t\\tcontinue\\n\\t\\t\\t}\\n\\n\\t\\t\\taddWatchFile(config, factory)\\n\\t\\t} else {\\n\\t\\t\\tpluginName = config.FromWasmPlugin\\n\\t\\t}\\n\\t\\tconfig.PluginName = pluginName\\n\\n\\t\\t// PluginWrapper \u5728\u4e0a\u9762\u7684 AddOrUpdateWasm \u4e2d\u5bf9\u63d2\u4ef6\u53ca\u914d\u7f6e\u8fdb\u884c\u5c01\u88c5\u5b8c\u6210\u521d\u59cb\u5316\uff0c\u8fd9\u91cc\u6839\u636e\u63d2\u4ef6\u540d\u4ece sync.Map \u62ff\u51fa\uff0c\u4ee5\u7ba1\u7406\u5e76\u6ce8\u518c PluginHandler\\n\\t\\tpw := wasm.GetWasmManager().GetWasmPluginWrapperByName(pluginName)\\n\\t\\tif pw == nil {\\n\\t\\t\\treturn nil, errors.New(\\"plugin not found\\")\\n\\t\\t}\\n\\n\\t\\tconfig.VmConfig = pw.GetConfig().VmConfig\\n\\t\\tfactory.config = append(factory.config, config)\\n\\n\\t\\twasmPlugin := &WasmPlugin{\\n\\t\\t\\tpluginName:    config.PluginName,\\n\\t\\t\\tplugin:        pw.GetPlugin(),\\n\\t\\t\\trootContextID: config.RootContextID,\\n\\t\\t\\tconfig:        config,\\n\\t\\t}\\n\\t\\tfactory.plugins[config.PluginName] = wasmPlugin\\n\\t\\t// \u6ce8\u518c PluginHandler\uff0c\u4ee5\u5bf9\u63d2\u4ef6\u7684\u751f\u547d\u5468\u671f\u63d0\u4f9b\u6269\u5c55\u56de\u8c03\u80fd\u529b\uff0c\u4f8b\u5982\u63d2\u4ef6\u542f\u52a8 OnPluginStart\u3001\u66f4\u65b0 OnConfigUpdate\u3002\u4e0b\u63a54\\n\\t\\tpw.RegisterPluginHandler(factory)\\n\\t}\\n\\n\\treturn factory, nil\\n}\\n```\\n\\n3\u3001\u5bf9\u5e94\u56fe1 WASM \u6846\u67b6\u4e2d VM \u90e8\u5206\uff0cNewWasmPlugin \u7528\u6765\u521b\u5efa\u521d\u59cb\u5316 WASM \u63d2\u4ef6\uff0c\u5176\u4e2d VM\u3001Module \u548c Instance \u5206\u522b\u5bf9\u5e94 WASM \u4e2d\u7684\u865a\u62df\u673a\u3001\u6a21\u5757\u548c\u5b9e\u4f8b\uff0c\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\uff1a\\n\\n```go\\nfunc NewWasmPlugin(wasmConfig v2.WasmPluginConfig) (types.WasmPlugin, error) {\\n\\t// check instance num\\n\\tinstanceNum := wasmConfig.InstanceNum\\n\\tif instanceNum <= 0 {\\n\\t\\tinstanceNum = runtime.NumCPU()\\n\\t}\\n\\n\\twasmConfig.InstanceNum = instanceNum\\n\\n\\t// \u6839\u636e\u914d\u7f6e\u83b7\u53d6 wasmer \u7f16\u8bd1\u548c\u6267\u884c\u5f15\u64ce\\n\\tvm := GetWasmEngine(wasmConfig.VmConfig.Engine)\\n\\tif vm == nil {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[wasm][plugin] NewWasmPlugin fail to get wasm engine: %v\\", wasmConfig.VmConfig.Engine)\\n\\t\\treturn nil, ErrEngineNotFound\\n\\t}\\n\\n\\t// load wasm bytes\\n\\tvar wasmBytes []byte\\n\\tif wasmConfig.VmConfig.Path != \\"\\" {\\n\\t\\twasmBytes = loadWasmBytesFromPath(wasmConfig.VmConfig.Path)\\n\\t} else {\\n\\t\\twasmBytes = loadWasmBytesFromUrl(wasmConfig.VmConfig.Url)\\n\\t}\\n\\n\\tif len(wasmBytes) == 0 {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[wasm][plugin] NewWasmPlugin fail to load wasm bytes, config: %v\\", wasmConfig)\\n\\t\\treturn nil, ErrWasmBytesLoad\\n\\t}\\n\\n\\tmd5Bytes := md5.Sum(wasmBytes)\\n\\tnewMd5 := hex.EncodeToString(md5Bytes[:])\\n\\tif wasmConfig.VmConfig.Md5 == \\"\\" {\\n\\t\\twasmConfig.VmConfig.Md5 = newMd5\\n\\t} else if newMd5 != wasmConfig.VmConfig.Md5 {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[wasm][plugin] NewWasmPlugin the hash(MD5) of wasm bytes is incorrect, config: %v, real hash: %s\\",\\n\\t\\t\\twasmConfig, newMd5)\\n\\t\\treturn nil, ErrWasmBytesIncorrect\\n\\t}\\n\\n\\t// \u521b\u5efa WASM \u6a21\u5757\uff0cWASM \u6a21\u5757\u662f\u5df2\u88ab\u7f16\u8bd1\u7684\u65e0\u72b6\u6001\u4e8c\u8fdb\u5236\u4ee3\u7801\\n\\tmodule := vm.NewModule(wasmBytes)\\n\\tif module == nil {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[wasm][plugin] NewWasmPlugin fail to create module, config: %v\\", wasmConfig)\\n\\t\\treturn nil, ErrModuleCreate\\n\\t}\\n\\n\\tplugin := &wasmPluginImpl{\\n\\t\\tconfig:    wasmConfig,\\n\\t\\tvm:        vm,\\n\\t\\twasmBytes: wasmBytes,\\n\\t\\tmodule:    module,\\n\\t}\\n\\n\\tplugin.SetCpuLimit(wasmConfig.VmConfig.Cpu)\\n\\tplugin.SetMemLimit(wasmConfig.VmConfig.Mem)\\n\\n\\t// \u521b\u5efa\u5305\u542b\u6a21\u5757\u548c\u8fd0\u884c\u65f6\u72b6\u6001\u7684\u5b9e\u4f8b\uff0c\u503c\u5f97\u5173\u6ce8\u7684\u662f\uff0c\u8fd9\u91cc\u6700\u7ec8\u4f1a\u8c03\u7528 proxywasm.RegisterImports \u6ce8\u518c\u7528\u6237\u5b9e\u73b0\u7684 Imports \u51fd\u6570\uff0c\u6bd4\u5982\u793a\u4f8b\u4e2d\u7684 proxy_invoke_service \u548c proxy_get_state\\nactual := plugin.EnsureInstanceNum(wasmConfig.InstanceNum)\\n\\tif actual == 0 {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[wasm][plugin] NewWasmPlugin fail to ensure instance num, want: %v got 0\\", instanceNum)\\n\\t\\treturn nil, ErrInstanceCreate\\n\\t}\\n\\n\\treturn plugin, nil\\n}\\n```\\n\\n4\u3001 \u5bf9\u5e94\u56fe1 WASM \u6846\u67b6 \u4e2d\u7684 ABI \u90e8\u5206\uff0cOnPluginStart \u65b9\u6cd5\u4e2d\u4f1a\u8c03\u7528 proxy-wasm-go-host \u7684\u5bf9\u5e94\u65b9\u6cd5\u5bf9 ABI \u7684 Exports \u548c Imports \u7b49\u8fdb\u884c\u76f8\u5173\u8bbe\u7f6e\u3002\\n\\n```go\\n// Execute the plugin of FilterConfigFactory\\nfunc (f *FilterConfigFactory) OnPluginStart(plugin types.WasmPlugin) {\\n\\tplugin.Exec(func(instance types.WasmInstance) bool {\\n\\t\\twasmPlugin, ok := f.plugins[plugin.PluginName()]\\n\\t\\tif !ok {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][factory] createProxyWasmFilterFactory fail to get wasm plugin, PluginName: %s\\",\\n\\t\\t\\t\\tplugin.PluginName())\\n\\t\\t\\treturn true\\n\\t\\t}\\n        \\n\\t\\t// \u83b7\u53d6 proxy_abi_version_0_2_0 \u7248\u672c\u7684\u4e0e WASM \u4ea4\u4e92\u7684 API\\n\\t\\ta := abi.GetABI(instance, AbiV2)\\n\\t\\ta.SetABIImports(f)\\n\\t\\texports := a.GetABIExports().(Exports)\\n\\t\\tf.LayottoHandler.Instance = instance\\n\\n\\t\\tinstance.Lock(a)\\n\\t\\tdefer instance.Unlock()\\n\\n\\t\\t// \u4f7f\u7528 exports \u51fd\u6570 proxy_get_id\uff08\u5bf9\u5e94\u5230 WASM \u63d2\u4ef6\u4e2d GetID \u51fd\u6570\uff09\u83b7\u53d6 WASM \u7684 ID\\n\\t\\tid, err := exports.ProxyGetID()\\n\\t\\tif err != nil {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][factory] createProxyWasmFilterFactory fail to get wasm id, PluginName: %s, err: %v\\",\\n\\t\\t\\t\\tplugin.PluginName(), err)\\n\\t\\t\\treturn true\\n\\t\\t}\\n\\t\\t// \u628aID \u548c \u5bf9\u5e94\u7684\u63d2\u4ef6\u6ce8\u518c\u5230\u8def\u7531\u4e2d\uff0c\u5373\u53ef\u901a\u8fc7 http Header \u4e2d\u7684\u952e\u503c\u5bf9\u8fdb\u884c\u8def\u7531\uff0c\u6bd4\u5982 \'id:id_1\' \u5c31\u4f1a\u6839\u636e id_1 \u8def\u7531\u5230\u4e0a\u9762\u7684 Function1 \\n\\t\\tf.router.RegisterRoute(id, wasmPlugin)\\n\\n\\t\\t// \u5f53\u7b2c\u4e00\u4e2a\u63d2\u4ef6\u4f7f\u7528\u7ed9\u5b9a\u7684\u6839 ID \u52a0\u8f7d\u65f6\u901a\u8fc7 proxy_on_context_create \u521b\u5efa\u6839\u4e0a\u4e0b\u6587\uff0c\u5e76\u5728\u865a\u62df\u673a\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u4e2d\u6301\u7eed\u5b58\u5728\uff0c\u76f4\u5230 proxy_on_delete \u5220\u9664 \\n\\t\\t// \u503c\u5f97\u6ce8\u610f\u7684\u662f\u8fd9\u91cc\u8bf4\u7684\u7b2c\u4e00\u4e2a\u63d2\u4ef6\u6307\u7684\u662f\u591a\u4e2a\u677e\u6563\u7ed1\u5b9a\u7684\u63d2\u4ef6(\u901a\u8fc7 SDK \u4f7f\u7528 Root ID \u5bf9 Root Context \u8bbf\u95ee\uff09\u5728\u540c\u4e00\u5df2\u914d\u7f6e\u865a\u62df\u673a\u5185\u5171\u4eab\u6570\u636e\u7684\u4f7f\u7528\u573a\u666f [4]\\n\\t\\terr = exports.ProxyOnContextCreate(f.RootContextID, 0)\\n\\t\\tif err != nil {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][factory] OnPluginStart fail to create root context id, err: %v\\", err)\\n\\t\\t\\treturn true\\n\\t\\t}\\n\\n\\t\\tvmConfigSize := 0\\n\\t\\tif vmConfigBytes := wasmPlugin.GetVmConfig(); vmConfigBytes != nil {\\n\\t\\t\\tvmConfigSize = vmConfigBytes.Len()\\n\\t\\t}\\n\\n\\t\\t// VM \u4f34\u968f\u542f\u52a8\u7684\u63d2\u4ef6\u542f\u52a8\u65f6\u8c03\u7528\\n\\t\\t_, err = exports.ProxyOnVmStart(f.RootContextID, int32(vmConfigSize))\\n\\t\\tif err != nil {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][factory] OnPluginStart fail to create root context id, err: %v\\", err)\\n\\t\\t\\treturn true\\n\\t\\t}\\n\\n\\t\\tpluginConfigSize := 0\\n\\t\\tif pluginConfigBytes := wasmPlugin.GetPluginConfig(); pluginConfigBytes != nil {\\n\\t\\t\\tpluginConfigSize = pluginConfigBytes.Len()\\n\\t\\t}\\n\\n\\t\\t// \u5f53\u63d2\u4ef6\u52a0\u8f7d\u6216\u91cd\u65b0\u52a0\u8f7d\u5176\u914d\u7f6e\u65f6\u8c03\u7528\\n\\t\\t_, err = exports.ProxyOnConfigure(f.RootContextID, int32(pluginConfigSize))\\n\\t\\tif err != nil {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][factory] OnPluginStart fail to create root context id, err: %v\\", err)\\n\\t\\t\\treturn true\\n\\t\\t}\\n\\n\\t\\treturn true\\n\\t})\\n}\\n```\\n\\n### \u5de5\u4f5c\u6d41\u7a0b\\nLayotto \u4e2d WASM \u7684\u5de5\u4f5c\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\u56fe2 Layotto & Mosn WASM \u5de5\u4f5c\u6d41\u7a0b\u6240\u793a\uff0c\u5176\u4e2d\u914d\u7f6e\u66f4\u65b0\u5728\u4e0a\u8ff0\u521d\u59cb\u5316\u73af\u8282\u57fa\u672c\u5df2\u56ca\u62ec\uff0c\u8fd9\u91cc\u91cd\u70b9\u770b\u4e00\u4e0b\u8bf7\u6c42\u5904\u7406\u6d41\u7a0b\u3002\\n![mosn_wasm_ext_framework_workflow](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*XTDeRq0alYsAAAAAAAAAAAAAARQnAQ)\\n<center>\u56fe2 Layotto & Mosn WASM \u5de5\u4f5c\u6d41\u7a0b </center>\\n\\n1\u3001\u7531 Layotto \u5e95\u5c42 Mosn \u6536\u5230\u8bf7\u6c42\uff0c\u7ecf\u8fc7 workpool \u8c03\u5ea6\uff0c\u5728 proxy downstream \u4e2d\u6309\u7167\u914d\u7f6e\u4f9d\u6b21\u6267\u884c StreamFilterChain \u5230 Wasm StreamFilter \u7684 OnReceive \u65b9\u6cd5\uff0c\u5177\u4f53\u903b\u8f91\u8be6\u89c1\u5982\u4e0b\u4ee3\u7801\uff1a\\n\\n```go\\nfunc (f *Filter) OnReceive(ctx context.Context, headers api.HeaderMap, buf buffer.IoBuffer, trailers api.HeaderMap) api.StreamFilterStatus {\\n\\t// \u83b7\u53d6 WASM \u63d2\u4ef6\u7684 id\\n\\tid, ok := headers.Get(\\"id\\")\\n\\tif !ok {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][filter] OnReceive call ProxyOnRequestHeaders no id in headers\\")\\n\\t\\treturn api.StreamFilterStop\\n\\t}\\n    \\n\\t// \u4ece router \u4e2d\u6839\u636e id \u83b7\u53d6\u5bf9\u5e94\u7684 WASM \u63d2\u4ef6\\n\\twasmPlugin, err := f.router.GetRandomPluginByID(id)\\n\\tif err != nil {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][filter] OnReceive call ProxyOnRequestHeaders id, err: %v\\", err)\\n\\t\\treturn api.StreamFilterStop\\n\\t}\\n\\tf.pluginUsed = wasmPlugin\\n\\n\\tplugin := wasmPlugin.plugin\\n\\t// \u83b7\u53d6 WasmInstance \u5b9e\u4f8b\\n\\tinstance := plugin.GetInstance()\\n\\tf.instance = instance\\n\\tf.LayottoHandler.Instance = instance\\n\\n\\t// ABI \u5305\u542b \u5bfc\u51fa(Exports)\u548c\u5bfc\u5165(Imports)\u4e24\u4e2a\u90e8\u5206\uff0c\u7528\u6237\u901a\u8fc7\u8fd9\u5b83\u4eec\u4e0e WASM \u6269\u5c55\u63d2\u4ef6\u8fdb\u884c\u4ea4\u4e92\\n\\tpluginABI := abi.GetABI(instance, AbiV2)\\n\\tif pluginABI == nil {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][filter] OnReceive fail to get instance abi\\")\\n\\t\\tplugin.ReleaseInstance(instance)\\n\\t\\treturn api.StreamFilterStop\\n\\t}\\n\\t// \u8bbe\u7f6e\u5bfc\u5165 Imports \u90e8\u5206\uff0c\u5bfc\u5165\u90e8\u5206\u7531\u7528\u6237\u63d0\u4f9b\uff0c\u865a\u62df\u673a\u7684\u6267\u884c\u9700\u8981\u4f9d\u8d56\u5bbf\u4e3b\u673a Layotto \u63d0\u4f9b\u7684\u90e8\u5206\u80fd\u529b\uff0c\u4f8b\u5982\u83b7\u53d6\u8bf7\u6c42\u4fe1\u606f\uff0c\u8fd9\u4e9b\u80fd\u529b\u901a\u8fc7\u5bfc\u5165\u90e8\u5206\u7531\u7528\u6237\u63d0\u4f9b\uff0c\u5e76\u7531 WASM \u6269\u5c55\u8c03\u7528\\n\\tpluginABI.SetABIImports(f)\\n\\n\\t// \u5bfc\u51fa Exports \u90e8\u5206\u7531 WASM \u63d2\u4ef6\u63d0\u4f9b\uff0c\u7528\u6237\u53ef\u76f4\u63a5\u8c03\u7528\u2014\u2014\u5524\u9192 WASM \u865a\u62df\u673a\uff0c\u5e76\u5728\u865a\u62df\u673a\u4e2d\u6267\u884c\u5bf9\u5e94\u7684 WASM \u63d2\u4ef6\u4ee3\u7801\\n\\texports := pluginABI.GetABIExports().(Exports)\\n\\tf.exports = exports\\n\\t\\n\\tinstance.Lock(pluginABI)\\n\\tdefer instance.Unlock()\\n\\t\\n\\t// \u6839\u636e rootContextID \u548c contextID \u521b\u5efa\u5f53\u524d\u63d2\u4ef6\u4e0a\u4e0b\u6587\\n\\terr = exports.ProxyOnContextCreate(f.contextID, wasmPlugin.rootContextID)\\n\\tif err != nil {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][filter] NewFilter fail to create context id: %v, rootContextID: %v, err: %v\\",\\n\\t\\t\\tf.contextID, wasmPlugin.rootContextID, err)\\n\\t\\treturn api.StreamFilterStop\\n\\t}\\n\\n\\tendOfStream := 1\\n\\tif (buf != nil && buf.Len() > 0) || trailers != nil {\\n\\t\\tendOfStream = 0\\n\\t}\\n\\n\\t// \u8c03\u7528 proxy-wasm-go-host\uff0c\u7f16\u7801\u8bf7\u6c42\u5934\u4e3a\u89c4\u8303\u6307\u5b9a\u7684\u683c\u5f0f\\n\\taction, err := exports.ProxyOnRequestHeaders(f.contextID, int32(headerMapSize(headers)), int32(endOfStream))\\n\\tif err != nil || action != proxywasm.ActionContinue {\\n\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][filter] OnReceive call ProxyOnRequestHeaders err: %v\\", err)\\n\\t\\treturn api.StreamFilterStop\\n\\t}\\n\\n\\tendOfStream = 1\\n\\tif trailers != nil {\\n\\t\\tendOfStream = 0\\n\\t}\\n\\n\\tif buf == nil {\\n\\t\\targ, _ := variable.GetString(ctx, types.VarHttpRequestArg)\\n\\t\\tf.requestBuffer = buffer.NewIoBufferString(arg)\\n\\t} else {\\n\\t\\tf.requestBuffer = buf\\n\\t}\\n\\n\\tif f.requestBuffer != nil && f.requestBuffer.Len() > 0 {\\n\\t\\t// \u8c03\u7528 proxy-wasm-go-host\uff0c\u7f16\u7801\u8bf7\u6c42\u4f53\u4e3a\u89c4\u8303\u6307\u5b9a\u7684\u683c\u5f0f\\n\\t\\taction, err = exports.ProxyOnRequestBody(f.contextID, int32(f.requestBuffer.Len()), int32(endOfStream))\\n\\t\\tif err != nil || action != proxywasm.ActionContinue {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][filter] OnReceive call ProxyOnRequestBody err: %v\\", err)\\n\\t\\t\\treturn api.StreamFilterStop\\n\\t\\t}\\n\\t}\\n\\n\\tif trailers != nil {\\n        // \u8c03\u7528 proxy-wasm-go-host\uff0c\u7f16\u7801\u8bf7\u6c42\u5c3e\u4e3a\u89c4\u8303\u6307\u5b9a\u7684\u683c\u5f0f\\n\\t\\taction, err = exports.ProxyOnRequestTrailers(f.contextID, int32(headerMapSize(trailers)))\\n\\t\\tif err != nil || action != proxywasm.ActionContinue {\\n\\t\\t\\tlog.DefaultLogger.Errorf(\\"[proxywasm][filter] OnReceive call ProxyOnRequestTrailers err: %v\\", err)\\n\\t\\t\\treturn api.StreamFilterStop\\n\\t\\t}\\n\\t}\\n\\n\\treturn api.StreamFilterContinue\\n}\\n```\\n\\n2\u3001proxy-wasm-go-host \u5c06 Mosn \u8bf7\u6c42\u4e09\u5143\u7ec4\u7f16\u7801\u6210\u89c4\u8303\u6307\u5b9a\u7684\u683c\u5f0f\uff0c\u5e76\u8c03\u7528Proxy-Wasm ABI \u89c4\u8303\u4e2d\u7684 proxy_on_request_headers \u7b49\u5bf9\u5e94\u63a5\u53e3\uff0c\u8c03\u7528 WASMER \u865a\u62df\u673a\u5c06\u8bf7\u6c42\u4fe1\u606f\u4f20\u81f3 WASM \u63d2\u4ef6\u3002\\n\\n```go\\nfunc (a *ABIContext) CallWasmFunction(funcName string, args ...interface{}) (interface{}, Action, error) {\\n\\tff, err := a.Instance.GetExportsFunc(funcName)\\n\\tif err != nil {\\n\\t\\treturn nil, ActionContinue, err\\n\\t}\\n\\n\\t// \u8c03\u7528 wasmer \u865a\u62df\u673a\uff08github.com/wasmerio/wasmer-go/wasmer.(*Function).Call at function.go\uff09\\n\\tres, err := ff.Call(args...)\\n\\tif err != nil {\\n\\t\\ta.Instance.HandleError(err)\\n\\t\\treturn nil, ActionContinue, err\\n\\t}\\n\\n\\t// if we have sync call, e.g. HttpCall, then unlock the wasm instance and wait until it resp\\n\\taction := a.Imports.Wait()\\n\\n\\treturn res, action, nil\\n}\\n```\\n\\n3\u3001WASMER \u865a\u62df\u673a\u7ecf\u8fc7\u5904\u7406\u8c03\u7528 WASM \u63d2\u4ef6\u7684\u5177\u4f53\u51fd\u6570\uff0c\u6bd4\u5982\u4f8b\u5b50\u4e2d\u7684 OnHttpRequestBody \u51fd\u6570\\n  // function, _:= instance.Exports.GetFunction(\\"exported_function\\")\\n  // nativeFunction = function.Native()\\n  //_ = nativeFunction(1, 2, 3)\\n  // Native \u4f1a\u5c06 Function \u8f6c\u6362\u4e3a\u53ef\u4ee5\u8c03\u7528\u7684\u539f\u751f Go \u51fd\u6570\\n\\n```go\\nfunc (self *Function) Native() NativeFunction {\\n\\t...\\n\\tself.lazyNative = func(receivedParameters ...interface{}) (interface{}, error) {\\n\\t\\tnumberOfReceivedParameters := len(receivedParameters)\\n\\t\\tnumberOfExpectedParameters := len(expectedParameters)\\n\\t\\t...\\n\\t\\tresults := C.wasm_val_vec_t{}\\n\\t\\tC.wasm_val_vec_new_uninitialized(&results, C.size_t(len(ty.Results())))\\n\\t\\tdefer C.wasm_val_vec_delete(&results)\\n\\n\\t\\targuments := C.wasm_val_vec_t{}\\n\\t\\tdefer C.wasm_val_vec_delete(&arguments)\\n\\n\\t\\tif numberOfReceivedParameters > 0 {\\n\\t\\t\\tC.wasm_val_vec_new(&arguments, C.size_t(numberOfReceivedParameters), (*C.wasm_val_t)(unsafe.Pointer(&allArguments[0])))\\n\\t\\t}\\n\\n\\t\\t// \u8c03\u7528 WASM \u63d2\u4ef6\u5185\u51fd\u6570\\n\\t\\ttrap := C.wasm_func_call(self.inner(), &arguments, &results)\\n\\n\\t\\truntime.KeepAlive(arguments)\\n\\t\\truntime.KeepAlive(results)\\n\\t\\t...\\n\\t}\\n\\n\\treturn self.lazyNative\\n}\\n```\\n\\n4\u3001proxy-wasm-go-sdk \u5c06\u8bf7\u6c42\u6570\u636e\u4ece\u89c4\u8303\u683c\u5f0f\u8f6c\u6362\u4e3a\u4fbf\u4e8e\u7528\u6237\u4f7f\u7528\u7684\u683c\u5f0f\uff0c\u7136\u540e\u8c03\u7528\u7528\u6237\u6269\u5c55\u4ee3\u7801\u3002proxy-wasm-go-sdk \u57fa\u4e8e proxy-wasm/spec \u5b9e\u73b0\uff0c\u5b9a\u4e49\u4e86\u51fd\u6570\u8bbf\u95ee\u7cfb\u7edf\u8d44\u6e90\u53ca\u57fa\u7840\u8bbe\u65bd\u670d\u52a1\u7684\u63a5\u53e3\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u7ed3\u5408 Runtime API \u7684\u601d\u8def\uff0c\u589e\u52a0\u4e86\u5bf9\u57fa\u7840\u8bbe\u65bd\u8bbf\u95ee\u7684ABI\u3002\\n\\n```go\\n// function1\u4e3b\u8981\u903b\u8f91\u5c31\u662f\u63a5\u6536 HTTP \u8bf7\u6c42\uff0c\u7136\u540e\u901a\u8fc7 ABI \u8c03\u7528 function2\uff0c\u5e76\u8fd4\u56de function2 \u7ed3\u679c\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\u6240\u793a\\nfunc (ctx *httpHeaders) OnHttpRequestBody(bodySize int, endOfStream bool) types.Action {\\n\\t//1. get request body\\n\\tbody, err := proxywasm.GetHttpRequestBody(0, bodySize)\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"GetHttpRequestBody failed: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\n\\t//2. parse request param\\n\\tbookName, err := getQueryParam(string(body), \\"name\\")\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"param not found: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\n\\t//3. request function2 through ABI\\n\\tinventories, err := proxywasm.InvokeService(\\"id_2\\", \\"\\", bookName)\\n\\tif err != nil {\\n\\t\\tproxywasm.LogErrorf(\\"invoke service failed: %v\\", err)\\n\\t\\treturn types.ActionPause\\n\\t}\\n\\n\\t//4. return result\\n\\tproxywasm.AppendHttpResponseBody([]byte(\\"There are \\" + inventories + \\" inventories for \\" + bookName + \\".\\"))\\n\\treturn types.ActionContinue\\n}\\n```\\n\\n5\u3001WASM \u63d2\u4ef6\u901a\u8fc7\u521d\u59cb\u5316\u65f6 RegisterFunc \u6ce8\u518c\u7684 ABI Imports \u51fd\u6570\uff0c\u6bd4\u5982\u4f8b\u5b50\u4e2d Function1 RPC \u8c03\u7528 Function2 \u7684 ProxyInvokeService\uff0cFunction2 \u7528\u4ee5\u83b7\u53d6 Redis \u4e2d\u6307\u5b9a Key \u7684 Valye \u7684 ProxyGetState\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a\\n\\nFunction1 \u901a\u8fc7 ProxyInvokeService \u8c03\u7528 Function2\uff0cProxyInvokeService \u5bf9\u5e94 Imports \u51fd\u6570 proxy_invoke_service\\n\\n```go\\nfunc ProxyInvokeService(instance common.WasmInstance, idPtr int32, idSize int32, methodPtr int32, methodSize int32, paramPtr int32, paramSize int32, resultPtr int32, resultSize int32) int32 {\\n\\tid, err := instance.GetMemory(uint64(idPtr), uint64(idSize))\\n\\tif err != nil {\\n\\t\\treturn WasmResultInvalidMemoryAccess.Int32()\\n\\t}\\n\\n\\tmethod, err := instance.GetMemory(uint64(methodPtr), uint64(methodSize))\\n\\tif err != nil {\\n\\t\\treturn WasmResultInvalidMemoryAccess.Int32()\\n\\t}\\n\\n\\tparam, err := instance.GetMemory(uint64(paramPtr), uint64(paramSize))\\n\\tif err != nil {\\n\\t\\treturn WasmResultInvalidMemoryAccess.Int32()\\n\\t}\\n\\n\\tctx := getImportHandler(instance)\\n    \\n\\t// Laytto rpc calls\\n\\tret, res := ctx.InvokeService(string(id), string(method), string(param))\\n\\tif res != WasmResultOk {\\n\\t\\treturn res.Int32()\\n\\t}\\n\\n\\treturn copyIntoInstance(instance, ret, resultPtr, resultSize).Int32()\\n}\\n```\\n\\nFunction2 \u901a\u8fc7 ProxyGetState \u83b7\u53d6 Redis \u4e2d\u6307\u5b9a Key \u7684 Valye\uff0c ProxyGetState \u5bf9\u5e94 Imports \u51fd\u6570 proxy_get_state\\n\\n```go\\nfunc ProxyGetState(instance common.WasmInstance, storeNamePtr int32, storeNameSize int32, keyPtr int32, keySize int32, valuePtr int32, valueSize int32) int32 {\\n\\tstoreName, err := instance.GetMemory(uint64(storeNamePtr), uint64(storeNameSize))\\n\\tif err != nil {\\n\\t\\treturn WasmResultInvalidMemoryAccess.Int32()\\n\\t}\\n\\n\\tkey, err := instance.GetMemory(uint64(keyPtr), uint64(keySize))\\n\\tif err != nil {\\n\\t\\treturn WasmResultInvalidMemoryAccess.Int32()\\n\\t}\\n\\n\\tctx := getImportHandler(instance)\\n\\n\\tret, res := ctx.GetState(string(storeName), string(key))\\n\\tif res != WasmResultOk {\\n\\t\\treturn res.Int32()\\n\\t}\\n\\n\\treturn copyIntoInstance(instance, ret, valuePtr, valueSize).Int32()\\n}\\n```\\n\\n\u4ee5\u4e0a Layotto rpc \u6d41\u7a0b\u7b80\u8981\u8bf4\u662f\u901a\u8fc7\u4e24\u4e2a\u865a\u62df\u8fde\u63a5\u501f\u52a9 Dapr API \u548c \u5e95\u5c42 Mosn \u5b9e\u73b0 [5],\u5177\u4f53\u53ef\u53c2\u89c1\u524d\u5e8f\u6587\u7ae0[Layotto\u6e90\u7801\u89e3\u6790\u2014\u2014\u5904\u7406RPC\u8bf7\u6c42](https://mosn.io/layotto/docs/blog/code/layotto-rpc/index)\uff0c\u4ece Redis \u4e2d\u83b7\u53d6\u6570\u636e\u53ef\u76f4\u63a5\u9605\u8bfb Dapr State \u76f8\u5173\u4ee3\u7801\uff0c\u5728\u6b64\u4e0d\u4e00\u4e00\u5c55\u5f00\u4e86\u3002\\n\\n### FaaS\u6a21\u5f0f\\n\\n\u56de\u8fc7\u5934\u6765\u518d\u770b WASM \u7684\u7279\u6027\uff1a\u5b57\u8282\u7801\u6709\u4e0e\u673a\u5668\u7801\u76f8\u5339\u654c\u7684\u6027\u80fd\uff1b\u6c99\u7bb1\u4e2d\u6267\u884c\u4fdd\u8bc1\u826f\u597d\u7684\u9694\u79bb\u6027\u548c\u5b89\u5168\u6027\uff1b\u7f16\u8bd1\u540e\u8de8\u5e73\u53f0\u3001\u6613\u5206\u53d1\u548c\u52a0\u8f7d\u8fd0\u884c\uff1b\u5177\u5907\u8f7b\u91cf\u4e14\u591a\u8bed\u8a00\u5f00\u53d1\u7684\u7075\u6d3b\u6027\uff0c\u4f3c\u4e4e\u5929\u7136\u7684\u5c31\u9002\u5408\u505a FaaS\u3002\\n\\n\u6240\u4ee5 Layotto \u4e5f\u63a2\u7d22\u652f\u6301\u4e86 WASM FaaS \u6a21\u5f0f\uff0c\u5373\u52a0\u8f7d\u5e76\u8fd0\u884c\u4ee5 WASM \u4e3a\u8f7d\u4f53\u7684 Function\uff0c\u5e76\u652f\u6301 Function \u4e4b\u95f4\u76f8\u4e92\u8c03\u7528\u53ca\u8bbf\u95ee\u57fa\u7840\u8bbe\u65bd\u3002\u56e0\u52a0\u8f7d WASM \u7684\u6838\u5fc3\u903b\u8f91\u5e76\u672a\u53d8\u5316\uff0c\u53ea\u662f\u4f7f\u7528\u548c\u90e8\u7f72\u65b9\u5f0f\u4e0a\u4e0e\u4e0a\u8ff0\u65b9\u5f0f\u6709\u5dee\u522b\uff0c\u6545 Layotto \u52a0\u8f7d WASM \u90e8\u5206\u903b\u8f91\u4e0d\u518d\u8d58\u8ff0\u3002\\n\\n\u9664 Wasm-Proxy \u76f8\u5173\u5b9e\u73b0\u5916\uff0cFaaS \u6a21\u5f0f\u6838\u5fc3\u903b\u8f91\u662f\u901a\u8fc7\u6269\u5c55 Containerd \u5b9e\u73b0\u591a\u8fd0\u884c\u65f6\u63d2\u4ef6 containerd-shim-layotto-v2 [6]\uff0c\u5e76\u501f\u6b64\\"\u7a7f\u9488\u5f15\u7ebf\\"\u7684\u5de7\u5999\u7684\u5229\u7528\u4e86 Docker \u7684\u955c\u50cf\u80fd\u529b\u6765\u7ba1\u7406 *.wasm \u5305\u548c Kubernetes \u4f18\u79c0\u7684\u7f16\u6392\u80fd\u529b\u6765\u8c03\u5ea6\u51fd\u6570\uff0c\u5177\u4f53\u67b6\u6784\u548c\u5de5\u4f5c\u6d41\u53ef\u89c1\u56fe3 Layotto FaaS Workflow\u3002\\n\\n![layotto_faas_workflow](https://gw.alipayobjects.com/mdn/rms_5891a1/afts/img/A*XWmNT6-7FoEAAAAAAAAAAAAAARQnAQ)\\n<center>\u56fe3 Layotto FaaS Workflow </center>\\n\\n\u8fd9\u91cc\u7b80\u5355\u770b\u4e00\u4e0b containerd-shim-layotto-v2 \u7684\u4e3b\u51fd\u6570\uff0c\u53ef\u4ee5\u770b\u5230 shim.Run \u8bbe\u7f6e\u7684 WASM \u7684\u8fd0\u884c\u65f6\u4e3a io.containerd.layotto.v2\uff0c\u4e5f\u5c31\u662f containerd \u4e2d plugins.cri.containerd.runtimes \u5bf9\u5e94\u63d2\u4ef6\u7684 runtime_type\u3002\u5f53\u521b\u5efa Pod \u65f6\uff0c\u5728 yaml \u7684 spec \u4e2d\u6307\u5b9a runtimeClassName: layotto\uff0c\u7ecf\u8fc7\u8c03\u5ea6\uff0c\u6700\u7ec8 kubelet \u5c31\u4f1a\u901a\u8fc7 cri-plugin \u8c03\u7528 containerd \u4e2d\u7684 containerd-shim-layotto-v2 \u8fd0\u884c\u65f6\u6765\u8fdb\u884c\u52a0\u8f7d\u548c\u8fd0\u884c\u7b49\u76f8\u5173\u5904\u7406\u3002\\n\\n```go\\nfunc main() {\\n\\tstartLayotto()\\n\\t// \u89e3\u6790\u8f93\u5165\u53c2\u6570\uff0c\u521d\u59cb\u5316\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u8c03\u7528 wasm.New \u5b9e\u4f8b\u5316 service \u5bf9\u8c61 \\n\\tshim.Run(\\"io.containerd.layotto.v2\\", wasm.New)\\n}\\n\\nfunc startLayotto() {\\n\\tconn, err := net.Dial(\\"tcp\\", \\"localhost:2045\\")\\n\\tif err == nil {\\n\\t\\tconn.Close()\\n\\t\\treturn\\n\\t}\\n\\n\\tcmd := exec.Command(\\"layotto\\", \\"start\\", \\"-c\\", \\"/home/docker/config.json\\")\\n\\tcmd.Start()\\n}\\n```\\n\\n## \u603b\u7ed3\\nLayotto WebAssemly \u867d\u7136\u6d89\u53ca\u8f83\u591a WASM \u76f8\u5173\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u4f46\u901a\u8fc7\u793a\u4f8b\u7531\u6d45\u5165\u6df1\uff0c\u5faa\u5e8f\u6e10\u8fdb\u4e5f\u4e0d\u96be\u7406\u89e3\u3002\u6700\u540e\u6574\u4f53\u770b\u4e00\u4e0b WASM \u6280\u672f\uff0c\u53ef\u4ee5\u770b\u5230\u5b83\u5df2\u7ecf\u88ab\u5e94\u7528\u5230Web\u524d\u7aef\u3001Serverless\u3001\u6e38\u620f\u573a\u666f\u3001\u8fb9\u7f18\u8ba1\u7b97\u3001\u670d\u52a1\u7f51\u683c\u7b49\u5f88\u591a\u9886\u57df\uff0c\u751a\u81f3\u5c31\u8fde Docker \u4e4b\u7236 Solomon Hykes \u5728\u524d\u4e0d\u4e45\u90fd\u8868\u793a: \\"\u5982\u679c WASM \u8fd9\u4e2a\u6280\u672f\u57282008\u5e74\u5c31\u6709\u7684\u8bdd\uff0c\u6211\u5c31\u4e0d\u641eDocker\u4e86\\"\uff08\u540e\u6765\u53c8\u8865\u5145\u9053\uff1aDocker \u4e0d\u4f1a\u88ab\u66ff\u6362\uff0c\u4f1a\u4e0e WASM \u5e76\u80a9\u800c\u884c\uff09\uff0c\u4e0d\u7ba1\u600e\u4e48\u8bf4\uff0cWASM \u4f3c\u4e4e\u5728\u7ee7 VM \u548c Container \u4e4b\u540e\uff0c\u6b63\u5728\u6210\u4e3a\u66f4\u8f7b\u91cf\u53ca\u6027\u80fd\u66f4\u597d\u7684\u4e91\u539f\u751f\u6280\u672f\u800c\u88ab\u5e94\u7528\u5230\u66f4\u591a\u7684\u9886\u57df\uff0c\u4e0e\u6b64\u540c\u65f6\uff0c\u76f8\u4fe1\u5728 Mosn \u793e\u533a\u7684\u63a8\u52a8\u4ee5\u53ca Layotto \u7684\u7ee7\u7eed\u63a2\u7d22\u4e2d WASM \u4e5f\u4f1a\u6709\u66f4\u591a\u4f7f\u7528\u573a\u666f\u548c\u7528\u6237\uff0c\u81f3\u6b64 Layotto WebAssemly \u76f8\u5173\u6e90\u7801\u5206\u6790\u5c31\u5b8c\u4e86\uff0c\u9274\u4e8e\u65f6\u95f4\u548c\u7bc7\u5e45\uff0c\u6ca1\u6709\u8fdb\u884c\u4e00\u4e9b\u66f4\u5168\u9762\u548c\u6df1\u5165\u7684\u5256\u6790\uff0c\u5982\u6709\u7eb0\u6f0f\u4e4b\u5904\uff0c\u6b22\u8fce\u6307\u6b63\uff0c\u8054\u7cfb\u65b9\u5f0f\uff1arayo.wangzl@gmail.com\u3002\\n\\n### \u53c2\u8003\u8d44\u6599\\n- [1] [WebAssembly \u5728 MOSN \u4e2d\u7684\u5b9e\u8df5](https://mosn.io/blog/posts/mosn-wasm-framework/)\\n- [2] [feature: WASM plugin framework](https://github.com/mosn/mosn/pull/1589)\\n- [3] [WebAssembly for Proxies (ABI Spec)](https://github.com/proxy-wasm/spec)\\n- [4] [Proxy WebAssembly Architecture](https://techhenzy.com/proxy-webassembly-architecture/)\\n- [5] [Layotto\u6e90\u7801\u89e3\u6790\u2014\u2014\u5904\u7406RPC\u8bf7\u6c42](https://mosn.io/layotto/docs/blog/code/layotto-rpc/index)\\n- [6] [\u4e91\u539f\u751f\u8fd0\u884c\u65f6\u7684\u4e0b\u4e00\u4e2a\u4e94\u5e74](https://www.sofastack.tech/blog/the-next-five-years-of-cloud-native-runtime/)"}]}}')}}]);